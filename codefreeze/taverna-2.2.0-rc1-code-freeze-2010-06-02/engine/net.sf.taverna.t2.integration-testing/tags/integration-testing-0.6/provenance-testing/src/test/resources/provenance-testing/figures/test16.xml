<?xml version="1.0" encoding="UTF-8"?>
<s:scufl xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha" version="0.2" log="0">
  <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:3e08dc00-ae0f-4f07-abe9-03a268687487" author="Paolo Missier" title="test16">multiple cross-products with complex DNL/ANL combinations
still one output for each processor</s:workflowdescription>
  <s:processor name="P1">
    <s:defaults>
      <s:default name="P1Vi">a</s:default>
    </s:defaults>
    <s:beanshell>
      <s:scriptvalue>P1Vo = new ArrayList();

P1Vo.add(P1Vi+"P1");
P1Vo.add("x");</s:scriptvalue>
      <s:beanshellinputlist>
        <s:beanshellinput s:syntactictype="'text/plain'">P1Vi</s:beanshellinput>
      </s:beanshellinputlist>
      <s:beanshelloutputlist>
        <s:beanshelloutput s:syntactictype="l('text/plain')">P1Vo</s:beanshelloutput>
      </s:beanshelloutputlist>
      <s:dependencies s:classloader="iteration" />
    </s:beanshell>
  </s:processor>
  <s:processor name="P2">
    <s:beanshell>
      <s:scriptvalue>P2Vo = new ArrayList();

sublist = new ArrayList();

sublist.add("1P2");
sublist.add("2P2");

P2Vo.add(sublist);</s:scriptvalue>
      <s:beanshellinputlist />
      <s:beanshelloutputlist>
        <s:beanshelloutput s:syntactictype="l(l('text/plain'))">P2Vo</s:beanshelloutput>
      </s:beanshelloutputlist>
      <s:dependencies s:classloader="iteration" />
    </s:beanshell>
  </s:processor>
  <s:processor name="P3">
    <s:beanshell>
      <s:scriptvalue>P3Vo = new ArrayList();

for (int i=0; i&lt;P3Vi1.size(); i++) {
    P3Vo.add(P3Vi1.get(i) + "-" + P3Vi2);
}</s:scriptvalue>
      <s:beanshellinputlist>
        <s:beanshellinput s:syntactictype="'text/plain'">P3Vi2</s:beanshellinput>
        <s:beanshellinput s:syntactictype="l('text/plain')">P3Vi1</s:beanshellinput>
      </s:beanshellinputlist>
      <s:beanshelloutputlist>
        <s:beanshelloutput s:syntactictype="l('text/plain')">P3Vo</s:beanshelloutput>
      </s:beanshelloutputlist>
      <s:dependencies s:classloader="iteration" />
    </s:beanshell>
  </s:processor>
  <s:processor name="P4">
    <s:defaults>
      <s:default name="P4Vi">foo</s:default>
    </s:defaults>
    <s:beanshell>
      <s:scriptvalue>P4Vo = new ArrayList();

P4Vo.add(P4Vi +  "-p4");
P4Vo.add("y");</s:scriptvalue>
      <s:beanshellinputlist>
        <s:beanshellinput s:syntactictype="'text/plain'">P4Vi</s:beanshellinput>
      </s:beanshellinputlist>
      <s:beanshelloutputlist>
        <s:beanshelloutput s:syntactictype="l('text/plain')">P4Vo</s:beanshelloutput>
      </s:beanshelloutputlist>
      <s:dependencies s:classloader="iteration" />
    </s:beanshell>
  </s:processor>
  <s:processor name="P5">
    <s:beanshell>
      <s:scriptvalue>P5Vo = new ArrayList();

P5Vo.add("P5Vo-1");
P5Vo.add("P5Vo-2");</s:scriptvalue>
      <s:beanshellinputlist />
      <s:beanshelloutputlist>
        <s:beanshelloutput s:syntactictype="l('text/plain')">P5Vo</s:beanshelloutput>
      </s:beanshelloutputlist>
      <s:dependencies s:classloader="iteration" />
    </s:beanshell>
  </s:processor>
  <s:processor name="P6">
    <s:beanshell>
      <s:scriptvalue>P6Vo = P6Vi1 + "-" + P6Vi2;</s:scriptvalue>
      <s:beanshellinputlist>
        <s:beanshellinput s:syntactictype="'text/plain'">P6Vi1</s:beanshellinput>
        <s:beanshellinput s:syntactictype="'text/plain'">P6Vi2</s:beanshellinput>
      </s:beanshellinputlist>
      <s:beanshelloutputlist>
        <s:beanshelloutput s:syntactictype="'text/plain'">P6Vo</s:beanshelloutput>
      </s:beanshelloutputlist>
      <s:dependencies s:classloader="iteration" />
    </s:beanshell>
  </s:processor>
  <s:processor name="P7">
    <s:beanshell>
      <s:scriptvalue>P7Vo  = new ArrayList();

P7Vo.add("paolo");
P7Vo.add("pietro");</s:scriptvalue>
      <s:beanshellinputlist />
      <s:beanshelloutputlist>
        <s:beanshelloutput s:syntactictype="l('text/plain')">P7Vo</s:beanshelloutput>
      </s:beanshelloutputlist>
      <s:dependencies s:classloader="iteration" />
    </s:beanshell>
  </s:processor>
  <s:processor name="P8">
    <s:beanshell>
      <s:scriptvalue>P8Vo = P8Vi1 + "-" + P8Vi2 + "-" + P8Vi3;</s:scriptvalue>
      <s:beanshellinputlist>
        <s:beanshellinput s:syntactictype="l('text/plain')">P8Vi1</s:beanshellinput>
        <s:beanshellinput s:syntactictype="l('text/plain')">P8Vi2</s:beanshellinput>
        <s:beanshellinput s:syntactictype="'text/plain'">P8Vi3</s:beanshellinput>
      </s:beanshellinputlist>
      <s:beanshelloutputlist>
        <s:beanshelloutput s:syntactictype="'text/plain'">P8Vo</s:beanshelloutput>
      </s:beanshelloutputlist>
      <s:dependencies s:classloader="iteration" />
    </s:beanshell>
  </s:processor>
  <s:link source="P1:P1Vo" sink="P3:P3Vi1" />
  <s:link source="P2:P2Vo" sink="P3:P3Vi2" />
  <s:link source="P3:P3Vo" sink="P8:P8Vi3" />
  <s:link source="P4:P4Vo" sink="P6:P6Vi1" />
  <s:link source="P5:P5Vo" sink="P6:P6Vi2" />
  <s:link source="P6:P6Vo" sink="P8:P8Vi2" />
  <s:link source="P7:P7Vo" sink="P8:P8Vi1" />
  <s:link source="P8:P8Vo" sink="O" />
  <s:sink name="O">
    <s:metadata>
      <s:mimeTypes>
        <s:mimeType>'text/plain'</s:mimeType>
      </s:mimeTypes>
    </s:metadata>
  </s:sink>
</s:scufl>

