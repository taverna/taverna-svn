<workflow xmlns="http://taverna.sf.net/2008/xml/t2flow" version="1">
	<dataflow id="37cad07a-b9df-4159-a8a6-06b1c0df7518" role="top">
		<name>myFirstLinearDataflow</name>
		<inputPorts>
			<port>
				<name>I1</name>
				<depth>0</depth>
				<granularDepth>0</granularDepth>
			</port>
			<port>
				<name>ListSize</name>
				<depth>0</depth>
				<granularDepth>0</granularDepth>
			</port>
		</inputPorts>
		<outputPorts>
			<port>
				<name>O</name>
			</port>
		</outputPorts>
		<processors>
			<processor>
				<name>LISTGEN_1</name>
				<inputPorts>
					<port>
						<name>X1</name>
						<depth>0</depth>
					</port>
					<port>
						<name>X2</name>
						<depth>0</depth>
					</port>
				</inputPorts>
				<outputPorts>
					<port>
						<name>Y1</name>
						<depth>1</depth>
						<granularDepth>1</granularDepth>
					</port>
					<port>
						<name>Y2</name>
						<depth>1</depth>
						<granularDepth>1</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2.activities</group>
							<artifact>beanshell-activity</artifact>
							<version>0.4</version>
						</raven>
						<class>
							net.sf.taverna.t2.activities.beanshell.BeanshellActivity
						</class>
						<inputMap>
							<map from="X1" to="X1" />
							<map from="X2" to="X2" />
						</inputMap>
						<outputMap>
							<map from="Y2" to="Y2" />
							<map from="Y1" to="Y1" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean
								xmlns="">
								<script>
									// X determines the size of the
									output list // outputs are lists of
									strings containing X elements each
									// P4 and P6 would then be forced to
									iterate X times each // the goal is
									to easily generate iterations of
									arbitrary size // to test
									scalability in provenance

									Y1 = new ArrayList(); Y2 = new
									ArrayList();

									int counter = Integer.parseInt(X2);

									for (int i=0; i&lt;counter; i++) {
									Y1.add("Y1-P1."+i);
									Y2.add("Y2-P1."+i); }
								</script>
								<dependencies />
								<classLoaderSharing>
									workflow
								</classLoaderSharing>
								<localDependencies />
								<artifactDependencies />
								<inputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>
											java.lang.String
										</translatedElementType>
										<allowsLiteralValues>
											true
										</allowsLiteralValues>
										<name>X1</name>
										<depth>0</depth>
										<mimeTypes>
											<string>text/plain</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>
											java.lang.String
										</translatedElementType>
										<allowsLiteralValues>
											true
										</allowsLiteralValues>
										<name>X2</name>
										<depth>0</depth>
										<mimeTypes>
											<string>text/plain</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
								</inputs>
								<outputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
										<granularDepth>1</granularDepth>
										<name>Y1</name>
										<depth>1</depth>
										<mimeTypes>
											<string>text/plain</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
										<granularDepth>1</granularDepth>
										<name>Y2</name>
										<depth>1</depth>
										<mimeTypes>
											<string>text/plain</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
								</outputs>
							</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean>
						</configBean>
						<annotations />
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.4</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig
								xmlns="">
								<maxJobs>1</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.4</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.4</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.4</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig
								xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>1000</initialDelay>
								<maxDelay>5000</maxDelay>
								<maxRetries>0</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.4</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy>
							<cross>
								<port name="X1" depth="0" />
								<port name="X2" depth="0" />
							</cross>
						</strategy>
					</iteration>
				</iterationStrategyStack>
			</processor>
			<processor>
				<name>2TO1</name>
				<inputPorts>
					<port>
						<name>X1</name>
						<depth>0</depth>
					</port>
					<port>
						<name>X2</name>
						<depth>0</depth>
					</port>
				</inputPorts>
				<outputPorts>
					<port>
						<name>Y</name>
						<depth>0</depth>
						<granularDepth>0</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2.activities</group>
							<artifact>beanshell-activity</artifact>
							<version>0.4</version>
						</raven>
						<class>
							net.sf.taverna.t2.activities.beanshell.BeanshellActivity
						</class>
						<inputMap>
							<map from="X1" to="X1" />
							<map from="X2" to="X2" />
						</inputMap>
						<outputMap>
							<map from="Y" to="Y" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean
								xmlns="">
								<script>Y = X1+X2;</script>
								<dependencies />
								<classLoaderSharing>
									workflow
								</classLoaderSharing>
								<localDependencies />
								<artifactDependencies />
								<inputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>
											java.lang.String
										</translatedElementType>
										<allowsLiteralValues>
											true
										</allowsLiteralValues>
										<name>X1</name>
										<depth>0</depth>
										<mimeTypes>
											<string>text/plain</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>
											java.lang.String
										</translatedElementType>
										<allowsLiteralValues>
											true
										</allowsLiteralValues>
										<name>X2</name>
										<depth>0</depth>
										<mimeTypes>
											<string>text/plain</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
								</inputs>
								<outputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
										<granularDepth>0</granularDepth>
										<name>Y</name>
										<depth>0</depth>
										<mimeTypes>
											<string>text/plain</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
								</outputs>
							</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean>
						</configBean>
						<annotations />
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.4</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig
								xmlns="">
								<maxJobs>1</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.4</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.4</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.4</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig
								xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>1000</initialDelay>
								<maxDelay>5000</maxDelay>
								<maxRetries>0</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.4</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy>
							<cross>
								<port name="X1" depth="0" />
								<port name="X2" depth="0" />
							</cross>
						</strategy>
					</iteration>
				</iterationStrategyStack>
			</processor>
		</processors>
		<conditions />
		<datalinks>
			<datalink>
				<sink type="processor">
					<processor>LISTGEN_1</processor>
					<port>X1</port>
				</sink>
				<source type="dataflow">
					<port>I1</port>
				</source>
			</datalink>
			<datalink>
				<sink type="processor">
					<processor>LISTGEN_1</processor>
					<port>X2</port>
				</sink>
				<source type="dataflow">
					<port>ListSize</port>
				</source>
			</datalink>
			<datalink>
				<sink type="processor">
					<processor>2TO1</processor>
					<port>X1</port>
				</sink>
				<source type="processor">
					<processor>LISTGEN_1</processor>
					<port>Y1</port>
				</source>
			</datalink>
			<datalink>
				<sink type="processor">
					<processor>2TO1</processor>
					<port>X2</port>
				</sink>
				<source type="processor">
					<processor>LISTGEN_1</processor>
					<port>Y2</port>
				</source>
			</datalink>
			<datalink>
				<sink type="dataflow">
					<port>O</port>
				</sink>
				<source type="processor">
					<processor>2TO1</processor>
					<port>Y</port>
				</source>
			</datalink>
		</datalinks>
		<annotations />
	</dataflow>
</workflow>