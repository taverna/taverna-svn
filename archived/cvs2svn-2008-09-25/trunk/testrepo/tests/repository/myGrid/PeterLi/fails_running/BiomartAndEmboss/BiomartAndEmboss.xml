<?xml version="1.0" encoding="UTF-8"?>
<s:scufl xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha" version="0.2" log="0">
  <s:workflowdescription lsid="urn:lsid:www.mygrid.org.uk:operation:85J50N27ZU4" author="Tom Oinn" title="Example of analysis using EMBOSS and BioMart, rending with Jmol">Starts by fetching all gene IDs from Ensembl corresponding to human genes on chromosome 22 implicated in known diseases and with homologous genes in rat and mouse. For each of these gene IDs it fetches the 200bp after the five prime end of the genomic sequence in each organism and performs a multiple alignment of the sequences using the EMBOSS tool 'emma' (a wrapper around ClustalW). Returns PNG images of the multiple alignment along with three columns containing the human, rat and mouse gene IDs used in each case.

As an enhancement to show the Jmol rendering in action this also fetches the PDB identifiers (where present) and the corresponding coordinate flat files from the RCSB, presenting the structures to the user in an interactive form via the Jmol plugin.</s:workflowdescription>
  <s:processor name="GetUniqueHomolog">
    <s:beanshell>
      <s:scriptvalue>List HSOut = new ArrayList();
List RatOut = new ArrayList();
List MouseOut = new ArrayList();

Map hsToMouse = new HashMap();
Iterator j = MouseGeneIDs.iterator();
for (Iterator i = HSGeneIDs.iterator(); i.hasNext();) {
  String id = (String)i.next();
  hsToMouse.put(id, j.next());
}
Map hsToRat = new HashMap();
j = RatGeneIDs.iterator();
for (Iterator i = HSGeneIDs.iterator(); i.hasNext();) {
  String id = (String)i.next();
  hsToRat.put(id, j.next());
}

// Build the unique outputs
for (Iterator i = hsToRat.keySet().iterator(); i.hasNext();) {
  String hsID = (String)i.next();
  String ratID = (String)hsToRat.get(hsID);
  // Remove version number
  // ratID = (ratID.split("."))[0];
  String mouseID = (String)hsToMouse.get(hsID);
  // Remove version number
  //mouseId = (mouseID.split("."))[0];
  if (ratID != null &amp;&amp; mouseID != null) {
    HSOut.add(hsID);
    RatOut.add(ratID.split("\\.")[0]);
    MouseOut.add(mouseID.split("\\.")[0]);
  }
}</s:scriptvalue>
      <s:beanshellinputlist>
        <s:beanshellinput s:syntactictype="l('text/plain')">HSGeneIDs</s:beanshellinput>
        <s:beanshellinput s:syntactictype="l('text/plain')">MouseGeneIDs</s:beanshellinput>
        <s:beanshellinput s:syntactictype="l('text/plain')">RatGeneIDs</s:beanshellinput>
      </s:beanshellinputlist>
      <s:beanshelloutputlist>
        <s:beanshelloutput s:syntactictype="l('text/plain')">HSOut</s:beanshelloutput>
        <s:beanshelloutput s:syntactictype="l('text/plain')">RatOut</s:beanshelloutput>
        <s:beanshelloutput s:syntactictype="l('text/plain')">MouseOut</s:beanshelloutput>
      </s:beanshelloutputlist>
    </s:beanshell>
  </s:processor>
  <s:processor name="FlattenImageList">
    <s:local>org.embl.ebi.escience.scuflworkers.java.FlattenList</s:local>
  </s:processor>
  <s:processor name="GetGeneIDStructureMapping">
    <s:beanshell>
      <s:scriptvalue>Map geneIDToStructureSet = new HashMap();
Iterator j = StructureIDList.iterator();
for (Iterator i = GeneIDList.iterator(); i.hasNext();) {
  String geneID = (String)i.next();
  String structureID = (String)j.next();
  Set s = (Set)geneIDToStructureSet.get(geneID);
  if (s == null) {
    s = new HashSet();
    geneIDToStructureSet.put(geneID, s);
  }
  s.add(structureID);
}
List GeneIDs = new ArrayList();
List StructureIDs = new ArrayList();
// Now has a map containing lists of structure IDs as values
for (Iterator i = geneIDToStructureSet.keySet().iterator(); i.hasNext();) {
  String geneID = (String)i.next();
  Set structureIDSet = (Set)geneIDToStructureSet.get(geneID);
  GeneIDs.add(geneID);
  List sl = new ArrayList();
  sl.addAll(structureIDSet);
  StructureIDs.add(sl);
}</s:scriptvalue>
      <s:beanshellinputlist>
        <s:beanshellinput s:syntactictype="l('text/plain')">StructureIDList</s:beanshellinput>
        <s:beanshellinput s:syntactictype="l('text/plain')">GeneIDList</s:beanshellinput>
      </s:beanshellinputlist>
      <s:beanshelloutputlist>
        <s:beanshelloutput s:syntactictype="l('text/plain')">GeneIDs</s:beanshelloutput>
        <s:beanshelloutput s:syntactictype="l(l('text/plain'))">StructureIDs</s:beanshelloutput>
      </s:beanshelloutputlist>
    </s:beanshell>
    <s:iterationstrategy>
      <i:dot xmlns:i="http://org.embl.ebi.escience/xscufliteration/0.1beta10">
        <i:iterator name="StructureIDList" />
        <i:iterator name="GeneIDList" />
      </i:dot>
    </s:iterationstrategy>
  </s:processor>
  <s:processor name="GetRatGenes">
    <s:biomart>
      <biomart:biomartconfig xmlns:biomart="http://org.embl.ebi.escience/xscufl-biomart/0.1alpha" dbtype="mysql" dbdriver="com.mysql.jdbc.Driver" dbhost="martdb.ebi.ac.uk" dbport="3306" dbinstance="ensembl_mart_22_1" dbuser="anonymous" />
      <biomart:biomartds xmlns:biomart="http://org.embl.ebi.escience/xscufl-biomart/0.1alpha">rnorvegicus_gene_ensembl</biomart:biomartds>
      <biomart:query xmlns:biomart="http://org.embl.ebi.escience/xscufl-biomart/0.1alpha">
        <biomart:filters>
          <biomart:idlistfilter field="gene_stable_id" constraint="main" key="gene_id_key">
            <biomart:idlistitem id="test" />
          </biomart:idlistfilter>
        </biomart:filters>
        <biomart:sequence type="8" fiveprime="200" threeprime="0" />
      </biomart:query>
    </s:biomart>
  </s:processor>
  <s:processor name="GetMouseGenes">
    <s:biomart>
      <biomart:biomartconfig xmlns:biomart="http://org.embl.ebi.escience/xscufl-biomart/0.1alpha" dbtype="mysql" dbdriver="com.mysql.jdbc.Driver" dbhost="martdb.ebi.ac.uk" dbport="3306" dbinstance="ensembl_mart_22_1" dbuser="anonymous" />
      <biomart:biomartds xmlns:biomart="http://org.embl.ebi.escience/xscufl-biomart/0.1alpha">mmusculus_gene_ensembl</biomart:biomartds>
      <biomart:query xmlns:biomart="http://org.embl.ebi.escience/xscufl-biomart/0.1alpha">
        <biomart:filters>
          <biomart:idlistfilter field="gene_stable_id" constraint="main" key="gene_id_key">
            <biomart:idlistitem id="test" />
          </biomart:idlistfilter>
        </biomart:filters>
        <biomart:sequence type="8" fiveprime="200" threeprime="0" />
      </biomart:query>
    </s:biomart>
  </s:processor>
  <s:processor name="GetHSGenes">
    <s:biomart>
      <biomart:biomartconfig xmlns:biomart="http://org.embl.ebi.escience/xscufl-biomart/0.1alpha" dbtype="mysql" dbdriver="com.mysql.jdbc.Driver" dbhost="martdb.ebi.ac.uk" dbport="3306" dbinstance="ensembl_mart_22_1" dbuser="anonymous" />
      <biomart:biomartds xmlns:biomart="http://org.embl.ebi.escience/xscufl-biomart/0.1alpha">hsapiens_gene_ensembl</biomart:biomartds>
      <biomart:query xmlns:biomart="http://org.embl.ebi.escience/xscufl-biomart/0.1alpha">
        <biomart:filters>
          <biomart:idlistfilter field="gene_stable_id" constraint="main" key="gene_id_key">
            <biomart:idlistitem id="sample" />
          </biomart:idlistfilter>
        </biomart:filters>
        <biomart:sequence type="8" fiveprime="200" threeprime="0" />
      </biomart:query>
    </s:biomart>
  </s:processor>
  <s:processor name="CreateFasta">
    <s:beanshell>
      <s:scriptvalue>fasta = "&gt;Human\n"+hsSeq+"\n&gt;Mouse\n"+mmSeq+"\n&gt;Rat\n"+rnSeq;</s:scriptvalue>
      <s:beanshellinputlist>
        <s:beanshellinput s:syntactictype="'text/plain'">hsSeq</s:beanshellinput>
        <s:beanshellinput s:syntactictype="'text/plain'">mmSeq</s:beanshellinput>
        <s:beanshellinput s:syntactictype="'text/plain'">rnSeq</s:beanshellinput>
      </s:beanshellinputlist>
      <s:beanshelloutputlist>
        <s:beanshelloutput s:syntactictype="'text/plain'">fasta</s:beanshelloutput>
      </s:beanshelloutputlist>
    </s:beanshell>
    <s:iterationstrategy>
      <i:dot xmlns:i="http://org.embl.ebi.escience/xscufliteration/0.1beta10">
        <i:iterator name="hsSeq" />
        <i:iterator name="mmSeq" />
        <i:iterator name="rnSeq" />
      </i:dot>
    </s:iterationstrategy>
  </s:processor>
  <s:processor name="GetDiseaseHumanGeneIDsChr22WithHomologs">
    <s:biomart>
      <biomart:biomartconfig xmlns:biomart="http://org.embl.ebi.escience/xscufl-biomart/0.1alpha" dbtype="mysql" dbdriver="com.mysql.jdbc.Driver" dbhost="martdb.ebi.ac.uk" dbport="3306" dbinstance="ensembl_mart_22_1" dbuser="anonymous" />
      <biomart:biomartds xmlns:biomart="http://org.embl.ebi.escience/xscufl-biomart/0.1alpha">hsapiens_gene_ensembl</biomart:biomartds>
      <biomart:query xmlns:biomart="http://org.embl.ebi.escience/xscufl-biomart/0.1alpha">
        <biomart:attributes>
          <biomart:fieldattribute field="gene_stable_id" key="gene_id_key" constraint="main" uniquename="gene_stable_id" />
          <biomart:fieldattribute field="homol_stable_id_v" key="gene_id_key" constraint="hsapiens_gene_ensembl__homologs_rnorvegicus__dm" uniquename="rat_ensembl_id" />
          <biomart:fieldattribute field="homol_stable_id_v" key="gene_id_key" constraint="hsapiens_gene_ensembl__homologs_mmusculus__dm" uniquename="mouse_ensembl_id" />
        </biomart:attributes>
        <biomart:filters>
          <biomart:basicfilter field="chr_name" constraint="main" key="gene_id_key" qualifier="=" value="22" />
          <biomart:booleanfilter field="mmusculus_homolog_bool" constraint="main" key="gene_id_key" qualifier=" is not null" />
          <biomart:booleanfilter field="rnorvegicus_homolog_bool" constraint="main" key="gene_id_key" qualifier=" is not null" />
          <biomart:booleanfilter field="disease_gene_bool" constraint="main" key="gene_id_key" qualifier=" is not null" />
        </biomart:filters>
      </biomart:query>
    </s:biomart>
  </s:processor>
  <s:processor name="GetKnownStructures">
    <s:biomart>
      <biomart:biomartconfig xmlns:biomart="http://org.embl.ebi.escience/xscufl-biomart/0.1alpha" dbtype="mysql" dbdriver="com.mysql.jdbc.Driver" dbhost="martdb.ebi.ac.uk" dbport="3306" dbinstance="ensembl_mart_22_1" dbuser="anonymous" />
      <biomart:biomartds xmlns:biomart="http://org.embl.ebi.escience/xscufl-biomart/0.1alpha">hsapiens_gene_ensembl</biomart:biomartds>
      <biomart:query xmlns:biomart="http://org.embl.ebi.escience/xscufl-biomart/0.1alpha">
        <biomart:attributes>
          <biomart:fieldattribute field="display_id_list" key="transcript_id_key" constraint="hsapiens_gene_ensembl__xref_pdb__dm" uniquename="pdb" />
          <biomart:fieldattribute field="gene_stable_id" key="gene_id_key" constraint="main" uniquename="gene_stable_id" />
        </biomart:attributes>
        <biomart:filters>
          <biomart:booleanfilter field="pdb_bool" constraint="main" key="gene_id_key" qualifier=" is not null" />
          <biomart:idlistfilter field="gene_stable_id" constraint="main" key="gene_id_key">
            <biomart:idlistitem id="foo" />
          </biomart:idlistfilter>
        </biomart:filters>
      </biomart:query>
    </s:biomart>
  </s:processor>
  <s:processor name="FetchPDBFlatFile" workers="10">
    <s:description>Given an identifier such as '1crn' fetches the PDB format flatfile from the RCSB</s:description>
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:www.mygrid.org.uk:operation:E51AE8IPB73" author="Tom Oinn" title="Fetch PDB flatfile from RCSB server">Given an identifier such as '1crn' fetches the PDB format flatfile from the RCSB</s:workflowdescription>
        <s:processor name="RCSBSuffix">
          <s:stringconstant>&amp;compression=None</s:stringconstant>
        </s:processor>
        <s:processor name="AddSuffix">
          <s:local>org.embl.ebi.escience.scuflworkers.java.StringConcat</s:local>
        </s:processor>
        <s:processor name="RCSBPrefix">
          <s:stringconstant>http://www.rcsb.org/pdb/cgi/export.cgi/1CRN.pdb?format=PDB&amp;pdbId=</s:stringconstant>
        </s:processor>
        <s:processor name="AddPrefixToID">
          <s:local>org.embl.ebi.escience.scuflworkers.java.StringConcat</s:local>
        </s:processor>
        <s:processor name="FetchPage">
          <s:local>org.embl.ebi.escience.scuflworkers.java.WebPageFetcher</s:local>
        </s:processor>
        <s:link source="RCSBPrefix:value" sink="AddPrefixToID:string1" />
        <s:link source="pdbID" sink="AddPrefixToID:string2" />
        <s:link source="AddPrefixToID:output" sink="AddSuffix:string1" />
        <s:link source="RCSBSuffix:value" sink="AddSuffix:string2" />
        <s:link source="AddSuffix:output" sink="FetchPage:url" />
        <s:link source="FetchPage:contents" sink="pdbFlatFile" />
        <s:source name="pdbID">
          <s:metadata>
            <s:description>PDB identifier such as '1crn'</s:description>
          </s:metadata>
        </s:source>
        <s:sink name="pdbFlatFile">
          <s:metadata>
            <s:mimeTypes>
              <s:mimeType>chemical/x-pdb</s:mimeType>
              <s:mimeType>text/plain</s:mimeType>
              <s:mimeType>text/html</s:mimeType>
            </s:mimeTypes>
          </s:metadata>
        </s:sink>
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="seqret" workers="5">
    <s:description>Reads and writes (returns) sequences</s:description>
    <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/services/edit::seqret</s:soaplabwsdl>
  </s:processor>
  <s:processor name="plot" workers="5">
    <s:description>Displays aligned sequences, with colouring and boxing</s:description>
    <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/services/alignment_multiple::prettyplot</s:soaplabwsdl>
  </s:processor>
  <s:processor name="emma" workers="5">
    <s:description>Multiple alignment program - interface to ClustalW program</s:description>
    <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/services/alignment_multiple::emma</s:soaplabwsdl>
  </s:processor>
  <s:link source="GetDiseaseHumanGeneIDsChr22WithHomologs:gene_stable_id" sink="GetUniqueHomolog:HSGeneIDs" />
  <s:link source="GetDiseaseHumanGeneIDsChr22WithHomologs:rat_ensembl_id" sink="GetUniqueHomolog:RatGeneIDs" />
  <s:link source="GetDiseaseHumanGeneIDsChr22WithHomologs:mouse_ensembl_id" sink="GetUniqueHomolog:MouseGeneIDs" />
  <s:link source="GetUniqueHomolog:HSOut" sink="GetHSGenes:gene_stable_id_filter" />
  <s:link source="GetUniqueHomolog:MouseOut" sink="GetMouseGenes:gene_stable_id_filter" />
  <s:link source="GetUniqueHomolog:RatOut" sink="GetRatGenes:gene_stable_id_filter" />
  <s:link source="GetRatGenes:sequenceexport" sink="CreateFasta:rnSeq" />
  <s:link source="GetMouseGenes:sequenceexport" sink="CreateFasta:mmSeq" />
  <s:link source="GetHSGenes:sequenceexport" sink="CreateFasta:hsSeq" />
  <s:link source="emma:outseq" sink="plot:sequences_direct_data" />
  <s:link source="CreateFasta:fasta" sink="seqret:sequence_direct_data" />
  <s:link source="seqret:outseq" sink="emma:sequence_direct_data" />
  <s:link source="plot:Graphics_in_PNG" sink="FlattenImageList:inputlist" />
  <s:link source="FlattenImageList:outputlist" sink="outputPlot" />
  <s:link source="GetUniqueHomolog:HSOut" sink="HSapIDs" />
  <s:link source="GetUniqueHomolog:RatOut" sink="RNorIDs" />
  <s:link source="GetUniqueHomolog:MouseOut" sink="MMusIDs" />
  <s:link source="GetUniqueHomolog:HSOut" sink="GetKnownStructures:gene_stable_id_filter" />
  <s:link source="FetchPDBFlatFile:pdbFlatFile" sink="Structures" />
  <s:link source="GetKnownStructures:gene_stable_id" sink="GetGeneIDStructureMapping:GeneIDList" />
  <s:link source="GetKnownStructures:pdb" sink="GetGeneIDStructureMapping:StructureIDList" />
  <s:link source="GetGeneIDStructureMapping:StructureIDs" sink="FetchPDBFlatFile:pdbID" />
  <s:link source="GetGeneIDStructureMapping:GeneIDs" sink="IDsWithPDB" />
  <s:link source="GetGeneIDStructureMapping:StructureIDs" sink="PDBIDs" />
  <s:sink name="outputPlot">
    <s:metadata>
      <s:mimeTypes>
        <s:mimeType>image/png</s:mimeType>
        <s:mimeType>application/octet-stream</s:mimeType>
      </s:mimeTypes>
      <s:description>The array of png images returned from the plot processor</s:description>
      <s:semanticType>http://www.mygrid.org.uk/ontology#domain_concept</s:semanticType>
    </s:metadata>
  </s:sink>
  <s:sink name="HSapIDs" />
  <s:sink name="MMusIDs" />
  <s:sink name="RNorIDs" />
  <s:sink name="IDsWithPDB" />
  <s:sink name="Structures">
    <s:metadata>
      <s:mimeTypes>
        <s:mimeType>chemical/x-pdb</s:mimeType>
        <s:mimeType>text/plain</s:mimeType>
        <s:mimeType>text/html</s:mimeType>
      </s:mimeTypes>
    </s:metadata>
  </s:sink>
  <s:sink name="PDBIDs" />
</s:scufl>


