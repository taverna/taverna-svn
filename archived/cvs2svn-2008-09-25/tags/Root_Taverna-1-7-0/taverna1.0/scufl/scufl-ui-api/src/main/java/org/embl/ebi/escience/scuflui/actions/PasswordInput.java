/*
 * PasswordInput.java
 *
 * Created on November 21, 2007, 12:01 PM
 */

package org.embl.ebi.escience.scuflui.actions;

import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * Simple dialogue to handle username/password input for workflow URL requiring http authentication.
 *
 * @author  Stuart Owen
 */
public class PasswordInput extends javax.swing.JDialog {
        
        private String password=null;
        private String username=null;
        private URL url=null;
        private int tryCount = 0;
        private final static int MAX_TRIES=3;
        
        public void setUrl(URL url) {
                this.url=url;
                urlLabel.setText(url.toExternalForm());
        }
        
        public String getPassword() {
                return password;
        }
        
        public String getUsername() {
                return username;
        }
        
        public PasswordInput(JFrame parent) {
                super(parent,true);
                initComponents();
        }
        
        /** Creates new form PasswordInput */
        public PasswordInput() {
                initComponents();
        }
        
        
        
        /** This method is called from within the constructor to
         * initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */
        // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
        private void initComponents() {
                usernameTextField = new javax.swing.JTextField();
                cancelButton = new javax.swing.JButton();
                okButton = new javax.swing.JButton();
                passwordTextField = new javax.swing.JPasswordField();
                jLabel1 = new javax.swing.JLabel();
                jLabel2 = new javax.swing.JLabel();
                messageLabel = new javax.swing.JLabel();
                urlLabel = new javax.swing.JLabel();

                getContentPane().setLayout(null);

                setModal(true);
                setResizable(false);
                getContentPane().add(usernameTextField);
                usernameTextField.setBounds(20, 80, 280, 22);

                cancelButton.setText("Cancel");
                cancelButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                cancelButtonActionPerformed(evt);
                        }
                });

                getContentPane().add(cancelButton);
                cancelButton.setBounds(230, 160, 75, 29);

                okButton.setText("OK");
                okButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                okButtonActionPerformed(evt);
                        }
                });

                getContentPane().add(okButton);
                okButton.setBounds(150, 160, 75, 29);

                getContentPane().add(passwordTextField);
                passwordTextField.setBounds(20, 130, 280, 22);

                jLabel1.setText("Username");
                getContentPane().add(jLabel1);
                jLabel1.setBounds(20, 60, 70, 16);

                jLabel2.setText("Password");
                getContentPane().add(jLabel2);
                jLabel2.setBounds(20, 110, 70, 16);

                messageLabel.setText("A username and password is required for:");
                getContentPane().add(messageLabel);
                messageLabel.setBounds(20, 10, 270, 20);

                urlLabel.setText("jLabel3");
                getContentPane().add(urlLabel);
                urlLabel.setBounds(20, 30, 270, 16);

                pack();
        }// </editor-fold>//GEN-END:initComponents
        
        private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
                String password=String.valueOf(passwordTextField.getPassword());
                String username=usernameTextField.getText();
                HttpURLConnection connection;
                try {
                        connection = (HttpURLConnection) url.openConnection();
                        String userPassword = username+":"+password;
                        String encoding = new sun.misc.BASE64Encoder().encode (userPassword.getBytes());
                        connection.setRequestProperty ("Authorization", "Basic " + encoding);
                        connection.setRequestProperty("Accept", "text/xml");
                        int code=connection.getResponseCode();
                        
                        if (code==401 || code==500) { //myExperiment gives a 500 response for an invalid username/password
                        		tryCount++;
                                JOptionPane.showMessageDialog(this,"The username and password failed","Invalid username or password",JOptionPane.ERROR_MESSAGE);
                                if (tryCount>=MAX_TRIES) { //close after 3 attempts.
                                	this.password=null;
                                    this.username=null;
                                	this.setVisible(false);
                                }
                        } else {
                        	this.username=username;
                        	this.password=password;
                            this.setVisible(false);
                        }
                } catch (IOException ex) {
                        ex.printStackTrace();
                }
                
                
        }//GEN-LAST:event_okButtonActionPerformed
        
        private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
                this.password=null;
                this.username=null;
                this.setVisible(false);
        }//GEN-LAST:event_cancelButtonActionPerformed
        
        /**
         * @param args the command line arguments
         */
        public static void main(String args[]) {
                java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                                new PasswordInput().setVisible(true);
                        }
                });
        }
        
        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton cancelButton;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel messageLabel;
        private javax.swing.JButton okButton;
        private javax.swing.JPasswordField passwordTextField;
        private javax.swing.JLabel urlLabel;
        private javax.swing.JTextField usernameTextField;
        // End of variables declaration//GEN-END:variables
        
}
