if (command == void || command.equals("")) {
	throw new RuntimeException("The 'command' port cannot be null.");
}
Process proc = null;
Runtime rt = Runtime.getRuntime();

String osName = System.getProperty("os.name");
String[] cmdArray = null;
if (osName.equals("Windows NT") || osName.equals("Windows XP")) {
	cmdArray = new String[] { "cmd.exe", "/c", command };
} else if (osName.equals("Windows 95")) {
	cmdArray = new String[] { "command.exe", "/c", command };
} else {// TODO: investigate if this will work in Linux and OSX
	cmdArray = new String[] { command };
}

// concatenate the arrays
int argSize = cmdArray.length + args.size();
ArrayList appArray = new ArrayList(argSize);
for (int i = 0; i < cmdArray.length; i++) {
	appArray.add(cmdArray[i]);
}

for (int i = 0; i < args.size(); i++) {
	appArray.add(args.get(i));
}

String[] applist = new String[argSize];
appArray.toArray(applist);
proc = rt.exec(applist);

// Get the input stream and read from it
InputStream in = proc.getInputStream();

int c;
StringBuffer sb = new StringBuffer();
while ((c = in.read()) != -1) {
	sb.append((char) c);
}
in.close();
result = sb.toString();
