<?xml version="1.0" encoding="UTF-8"?>
<s:scufl xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha" version="0.2" log="0">
  <s:workflowdescription lsid="urn:lsid:www.mygrid.org.uk:operation:P4R6UIV6270" author="" title="" />
  <s:processor name="ptsInput" boring="true">
    <s:stringconstant>/tmp/eg.pts</s:stringconstant>
  </s:processor>
  <s:processor name="triInput" boring="true">
    <s:stringconstant>/tmp/eg.tri</s:stringconstant>
  </s:processor>
  <s:processor name="gzInput" boring="true">
    <s:stringconstant>/tmp/eg.gz</s:stringconstant>
  </s:processor>
  <s:processor name="MeshalizerPreprocess">
    <s:local>uk.ac.man.cs.img.mygrid.scuflworkers.MeshalizerWorker</s:local>
  </s:processor>
  <s:processor name="String_Constant" boring="true">
    <s:stringconstant critical="true">cat,dog,rat</s:stringconstant>
  </s:processor>
  <s:processor name="String_Constant1" boring="true">
    <s:stringconstant>,</s:stringconstant>
  </s:processor>
  <s:processor name="Select">
    <s:local>uk.ac.man.cs.img.mygrid.scuflworkers.ProvenanceSelectWorker</s:local>
  </s:processor>
  <s:processor name="Split_string_into_string_list_by_regular_expression" boring="true">
    <s:local>org.embl.ebi.escience.scuflworkers.java.SplitByRegex</s:local>
  </s:processor>
  <s:processor name="Echo_list">
    <s:local>org.embl.ebi.escience.scuflworkers.java.EchoList</s:local>
  </s:processor>
  <s:processor name="String_list_union">
    <s:local>org.embl.ebi.escience.scuflworkers.java.StringSetUnion</s:local>
  </s:processor>
  <s:link source="Echo_list:outputlist" sink="String_list_union:list2" />
  <s:link source="MeshalizerPreprocess:meshalizerInput" sink="String_list_union:list1" />
  <s:link source="Select:answer" sink="Echo_list:inputlist" />
  <s:link source="Split_string_into_string_list_by_regular_expression:split" sink="Select:valueList" />
  <s:link source="String_Constant1:value" sink="Split_string_into_string_list_by_regular_expression:regex" />
  <s:link source="String_Constant:value" sink="Split_string_into_string_list_by_regular_expression:string" />
  <s:link source="String_list_union:union" sink="out" />
  <s:link source="gzInput:value" sink="MeshalizerPreprocess:gzFile" />
  <s:link source="ptsInput:value" sink="MeshalizerPreprocess:ptsFile" />
  <s:link source="triInput:value" sink="MeshalizerPreprocess:triFile" />
  <s:sink name="out" />
</s:scufl>


