<services>
  <service name="SHoundFindAcc">
    <description>Converts an accession number for a sequence into a
 GenInfo identifier - GI. 
 This function will not accept a version number
 (e.g. NP_116609.1).  The '.1' must be removed from the
 example version number to form a valid accession.  
 SeqHound only stores and returns the latest version of</description>
    <parameters>
      <parameter name="acc" />
    </parameters>
  </service>
  <service name="SHoundFindAccList">
    <description>Converts a list of accession numbers for a sequence into
 GenInfo identifiers - GI's. 
 This function will not accept a version number
 (e.g. NP_116609.1).  The '.1' must be removed from the
 example version number to form a valid accession.  
 SeqHound only stores and returns the latest version of
 a sequence record.</description>
    <parameters>
      <parameter name="accList" />
    </parameters>
  </service>
  <service name="SHoundFindName">
    <description>Converts PDB, EMBL, Siwss-Prot, PIR sequence identifier into a GI.
 &lt;em&gt;Note thatEMBL shares accession numbers with GenBank. EMBL GenInfo
 identifiers may be returned using these accessions; for example
 SHoundFindAcc(X13776) will return GI 45269. EMBL also has its own
 identifiers (which the NCBI and SeqHound refer to as 'name').
 So the same GI may be returned by SHoundFindName(PAAMIR).&lt;/em&gt;</description>
    <parameters>
      <parameter name="name" />
    </parameters>
  </service>
  <service name="SHoundFindNameList">
    <description>Given a list of ID from PDB, SwissProt, or PIR sequence identifiers,
 retrieves a list of gi's.
 Note that EMBL shares accession numbers with GenBank. EMBL GenInfo
 identifiers may be returned using these accessions; for example
 SHoundFindAcc(X13776) will return GI 45269. EMBL also has its own
 identifiers (which the NCBI and SeqHound refer to as 'name').
 So the same GI may be returned by SHoundFindName("PAAMIR").</description>
    <parameters>
      <parameter name="nameList" />
    </parameters>
  </service>
  <service name="SHoundAccFromGi">
    <description>Converts a GI identifier to an NCBI accession number.
 Sequences from the PIR or PDB databases will return "n/a"
 for this function since they do not have an NCBI accession.
 Instead, use SHoundGetDefline to retrieve the accession
 for these sequences.</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundAccFromGiList">
    <description>Converts a list of GI identifiers to  NCBI accession numbers.
 Sequences from the PIR or PDB databases will return "n/a"
 for this function since they do not have an NCBI accession.
 Instead, use SHoundGetDeflineList to retrieve the accessions
 for these sequences.</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundTitleFromGi">
    <description>Gets title given a gi value.</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundSeqIdFromGi">
    <description>Gets a SeqId object given a gi. SeqId object is an ASN formatted
 string with relevant gi information.</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundSeqIdFromGiList">
    <description>Get the SeqId's given a gi list. The SeqId's will be one big string
 formatted in ASN.</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundMoleculeType">
    <description>determines the molecular type given a gi</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundSequenceLength">
    <description>retrieves the length of a sequence.</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundIsProtein">
    <description>Returns where a given gi is a protein or not.</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundIsNRFirst">
    <description>Reports if a given GI identifier represents the best annotated version
 from a group of database entries referring to the same protein sequence
 (so called redundant proteins).</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundExists">
    <description>reports whether a given gi exists in the SeqHound database.</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHound3DbWhat">
    <description>Finds out what kind of molecules are contained in a 3-D structure.</description>
    <parameters>
      <parameter name="mmdbid" />
    </parameters>
  </service>
  <service name="SHoundGetLargestMMDBID">
    <description>return the largest mmdbid</description>
    <parameters />
  </service>
  <service name="SHound3DExists">
    <description>Finds out whether a given structural ID (mmdbid) exists in the
 SeqHound database.</description>
    <parameters>
      <parameter name="mmdbid" />
    </parameters>
  </service>
  <service name="SHoundGOPMIDFromGiAndGOID">
    <description>Retrieves the PMID's in the LocusLink database for a given gi and
 gene ontology id.</description>
    <parameters>
      <parameter name="gi" />
      <parameter name="goid" />
    </parameters>
  </service>
  <service name="SHoundGOECodeFromGiAndGOID">
    <description>Retrieves all the evidence code from locuslink for a given gi and gene ontology id.</description>
    <parameters>
      <parameter name="gi" />
      <parameter name="goid" />
    </parameters>
  </service>
  <service name="SHoundGetReferenceIDFromGi">
    <description>Retrieves the MUID or PMID for a given gi.</description>
    <parameters>
      <parameter name="gi" />
      <parameter name="reftype" />
    </parameters>
  </service>
  <service name="SHoundGetReferenceIDFromGiList">
    <description>Retrieves the MUID or PMID for a given gi.</description>
    <parameters>
      <parameter name="giList" />
      <parameter name="reftype" />
    </parameters>
  </service>
  <service name="SHoundGiFromReferenceID">
    <description>Retrieves the gi's associated with a publication.</description>
    <parameters>
      <parameter name="refid" />
      <parameter name="reftype" />
    </parameters>
  </service>
  <service name="SHoundGiFromReferenceList">
    <description>Retrieves the gi's associated with a publication list.</description>
    <parameters>
      <parameter name="refList" />
      <parameter name="reftype" />
    </parameters>
  </service>
  <service name="SHoundGetBioseq">
    <description>fetches a string formated in ASN representing a sequence information.
 The seqence information is called a Bioseq and it contains all
 the available annotation.</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundGetBioseqList">
    <description>Get a list of ASN.1 formatted sequence information and available
 annotations.</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundGetXMLBioseq">
    <description>Get an XML Formated Bioseq structure which contains
 sequence information and all available annotations.</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundXMLBioseq">
    <description>A wrap function to get an XML Formated Bioseq structure which contains
 sequence information and all available annotations. To consist with other
 remote APIs</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundGetSeqEntry">
    <description>Fetches ASN.1 representation of a sequence called SeqEntry.
 SeqEntry contains a single sequence or a group of sequences
 if they are logically related (e.g. gene and its protein product).</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundGetSeqEntryList">
    <description>Retrieves a list of seqentry from a list of gi</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundGetXMLSeqEntry">
    <description>retrieves the a XML formated string of a seqentry</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundGetBioseqSet">
    <description>retrieves the fetches ASN.1 representation of a sequence
 called BioseqSet. BioseqSet exists only if there is more
 than one sequence in logical group of sequences (e.g. gene and its protein product).</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundGetBioseqSetList">
    <description>retrieves a string contain the bioseqset for a list of gi's</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundGetDefline">
    <description>Defline contains the gi, accession number and other valuable information
 together with a short description of the sequence</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundGetDeflineList">
    <description>retrieves a list of defline lines</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundGetFasta">
    <description>The FASTA format is widely used in bioinformatics community;
 it consists of a definition line, new line followed by a
 sequence terminated by a second new line.</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundGetFastaList">
    <description>retrieves a list of fasta</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundGetFastaFromRedundantGroupID">
    <description>The FASTA format is widely used in bioinformatics community;
 it consists of a definition line, new line followed by a
 sequence terminated by a second new line.</description>
    <parameters>
      <parameter name="gid" />
    </parameters>
  </service>
  <service name="SHoundGetGenBankff">
    <description>GenBank flat file contains comprehensive full annotation of a sequence.</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundGetGenBankffList">
    <description>retrieves an array of strings formated in genbank ff.</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundGet3D">
    <description>Fetches ASN.1 representation of 3-D structure called Biostruc.
 Biostrucs represent data model in Molecular Modeling database.</description>
    <parameters>
      <parameter name="mmdbid" />
    </parameters>
  </service>
  <service name="SHoundGet3DfromPdbId">
    <description>Fetches ASN.1 representation of 3-D structure called Biostruc.
 Biostrucs represent data model in Molecular Modeling database.</description>
    <parameters>
      <parameter name="pdbid" />
    </parameters>
  </service>
  <service name="SHoundGetXML3D">
    <description>Retrieves an XML representation of a 3-D structure</description>
    <parameters>
      <parameter name="mmdbid" />
    </parameters>
  </service>
  <service name="SHoundGetPDB3D">
    <description>Retrieves an PDB representation of a 3-D structure</description>
    <parameters>
      <parameter name="mmdbid" />
    </parameters>
  </service>
  <service name="SHoundGiFrom3D">
    <description>retrieves the gi given a mmdbid</description>
    <parameters>
      <parameter name="mmdbid" />
      <parameter name="ProteinOnly" />
    </parameters>
  </service>
  <service name="SHoundGiFrom3DList">
    <description>retrieve an array of gi's from the MMDB identifiers</description>
    <parameters>
      <parameter name="mmdbidList" />
      <parameter name="ProteinOnly" />
    </parameters>
  </service>
  <service name="SHoundGiFromPDBchain">
    <description>retrieve an array of gi's from the PDB identifiers</description>
    <parameters>
      <parameter name="pdbcode" />
      <parameter name="chain" />
    </parameters>
  </service>
  <service name="SHound3DFromGi">
    <description>Get the MMDB identifier for a given gi</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHound3DFromGiList">
    <description>Get an array of MMDB identifiers for a given gi array</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundDNAFromProtein">
    <description>Get the dna gi fro a given gi</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundDNAFromProteinList">
    <description>Get an array of dna gi for a given array of gi</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundProteinFromDNA">
    <description>Get the protein gi for a given gi</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundProteinFromDNAList">
    <description>Get an array of protein gi's given an array of gi's</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundMuidFromGi">
    <description>Get the MUID for a given gi</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundMuidFromGiList">
    <description>Get the MUIDs for a given array of gi's</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundMuidFrom3D">
    <description>Get the MUID for a given MMDB identifier</description>
    <parameters>
      <parameter name="mmdbid" />
    </parameters>
  </service>
  <service name="SHoundMuidFrom3DList">
    <description>Get the MUID list for a given gi array</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundTaxIDFromGi">
    <description>Get the taxid for a given gi</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundTaxIDFromGiList">
    <description>Get an array of taxonomy identifiers from an array of gi</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundTaxIDFrom3D">
    <description>Get a taxid for a given gi</description>
    <parameters>
      <parameter name="mmdbid" />
    </parameters>
  </service>
  <service name="SHoundTaxIDFrom3DList">
    <description>Get an array of taxid from an array of MMDB identifier</description>
    <parameters>
      <parameter name="mmdbidList" />
    </parameters>
  </service>
  <service name="SHoundProteinsFromTaxID">
    <description>Get the protein gi's for a given taxonomy</description>
    <parameters>
      <parameter name="taxid" />
    </parameters>
  </service>
  <service name="SHoundProteinsFromTaxIDList">
    <description>get an array of proteins from an array of taxonomy identifier</description>
    <parameters>
      <parameter name="taxList" />
    </parameters>
  </service>
  <service name="SHoundProteinsFromTaxIDIII">
    <description>Get an array of protein gi's for a given taxonomy identifier.
 Uses precomputed searches if appropriate, to speed up the search.</description>
    <parameters>
      <parameter name="taxid" />
    </parameters>
  </service>
  <service name="SHoundDNAFromTaxID">
    <description>Get the DNA gi's for a given taxonomy id</description>
    <parameters>
      <parameter name="taxid" />
    </parameters>
  </service>
  <service name="SHoundDNAFromTaxIDList">
    <description>get an array of dna gi's for an array of taxonomy identifiers</description>
    <parameters>
      <parameter name="taxList" />
    </parameters>
  </service>
  <service name="SHoundDNAFromTaxIDIII">
    <description>Get the dna gi's for a given taxid. Uses precomputed searches to
 speed up search where appropriate.</description>
    <parameters>
      <parameter name="taxid" />
    </parameters>
  </service>
  <service name="SHoundProteinsFromOrganism">
    <description>Get the proteins for a given taxonomy. Chromflags is the DNA molecule
  type, where each bit is reserved for one kind of DNA molecule.</description>
    <parameters>
      <parameter name="taxid" />
      <parameter name="chromflags" />
    </parameters>
  </service>
  <service name="SHoundProteinsFromOrganismList">
    <description>Get the protein gi's for a given taxonomy array, use bit notation for chromflags</description>
    <parameters>
      <parameter name="taxList" />
      <parameter name="chromflags" />
    </parameters>
  </service>
  <service name="SHoundProteinsFromChromosome">
    <description>Get the protein gi's for a given chromosome identifier</description>
    <parameters>
      <parameter name="chromid" />
    </parameters>
  </service>
  <service name="SHoundProteinsFromChromosomeList">
    <description>Get the protein gi's for an array of chromosome identifiers</description>
    <parameters>
      <parameter name="chromList" />
    </parameters>
  </service>
  <service name="SHoundAllGenomes">
    <description>Get an array of taxonomy identifiers for all complete genomes
 present in the SeqHound system.</description>
    <parameters />
  </service>
  <service name="SHoundChromosomeFromGenome">
    <description>Get all the chromosomes for a given taxonomy identifier and the molecule</description>
    <parameters>
      <parameter name="taxid" />
      <parameter name="chromflags" />
    </parameters>
  </service>
  <service name="SHoundChromosomeFromGenomeList">
    <description>Gets an array of chromosome identifiers for a given taxonomy list</description>
    <parameters>
      <parameter name="taxList" />
      <parameter name="chromflags" />
    </parameters>
  </service>
  <service name="SHoundDNAFromOrganism">
    <description>Get an array of dna gi's for a given organism</description>
    <parameters>
      <parameter name="taxid" />
      <parameter name="chromflags" />
    </parameters>
  </service>
  <service name="SHoundDNAFromOrganismList">
    <description>Get an array of dna gi's for a given taxonomy array</description>
    <parameters>
      <parameter name="taxList" />
      <parameter name="chromflags" />
    </parameters>
  </service>
  <service name="SHoundDNAFromChromosome">
    <description>Get an array of dna gi's for a given chromosome identifier</description>
    <parameters>
      <parameter name="chromid" />
    </parameters>
  </service>
  <service name="SHoundDNAFromChromosomeList">
    <description>Get an array of dna gi's for an input of chromosome array</description>
    <parameters>
      <parameter name="chromList" />
    </parameters>
  </service>
  <service name="SHoundRedundantGroup">
    <description>Gets all protein entries with the same sequence from the system</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundRedundantGroupList">
    <description>Gets all protein entries with the same sequence from the system</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundRedundantGroupIDFromGi">
    <description>Entrez collection of databases contains redundant entries i.e.
 proteins with the same sequence but different annotations.
 The function gets an arbitrary redundant group identifier for
 a protein sequence. The redundant group identifiers can only be
 used temporarily, they change every day.</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundRedundantGroupIDFromGiList">
    <description>Entrez collection of databases contains redundant entries i.e.
 proteins with the same sequence but different annotations.
 The function gets an arbitrary redundant group identifier for
 a list of protein sequences. The redundant group identifiers
 can only be used temporarily, they change every day.</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundRedundantGroupFromID">
    <description>returns an array of gi's in the same group.
 The group id changes everyday</description>
    <parameters>
      <parameter name="group" />
    </parameters>
  </service>
  <service name="SHoundRedundantGroupFromIDList">
    <description>returns an array of redundant protein gi's for an array of redundant group id's.
 The group id's change daily.</description>
    <parameters>
      <parameter name="groupList" />
    </parameters>
  </service>
  <service name="SHoundFirstOfRedundantGroupFromID">
    <description>Entrez collection of databases contains redundant entries i.e.
 proteins with the same sequence but different annotations. The
 function gets a representative entry (generally the one with best
 annotation such as PDB, RefSeq or SwissProt entry) given a redundant
 group identifier. The redundant group identifiers can only be used
 temporarily, they change every day.</description>
    <parameters>
      <parameter name="group" />
    </parameters>
  </service>
  <service name="SHoundFirstOfRedundantGroupFromIDList">
    <description>Gets the gi of the best annotated sequence given an array of group id.</description>
    <parameters>
      <parameter name="group" />
    </parameters>
  </service>
  <service name="SHoundGetTaxChildNodes">
    <description>operates on NCBI's taxonomy tree. It retrieves all taxons
 situated directly below a given taxon in the taxonomy tree.</description>
    <parameters>
      <parameter name="taxid" />
    </parameters>
  </service>
  <service name="SHoundGetTaxChildNodesList">
    <description>Get the children taxonomy id of an array of taxid inputs</description>
    <parameters>
      <parameter name="taxList" />
    </parameters>
  </service>
  <service name="SHoundGetAllTaxProgeny">
    <description>operates on NCBI's taxonomy tree. It retrieves all taxons
 (the whole subtree) situated below a given taxon in the taxonomy tree.</description>
    <parameters>
      <parameter name="taxid" />
    </parameters>
  </service>
  <service name="SHoundGetTaxParent">
    <description>Retrieve the tax id situated directly above a given tax id</description>
    <parameters>
      <parameter name="taxid" />
    </parameters>
  </service>
  <service name="SHoundGetAllTaxAncestors">
    <description>Retrieves all taxid (the whole subtree) above a given taxid</description>
    <parameters>
      <parameter name="taxid" />
    </parameters>
  </service>
  <service name="SHoundIsTaxMerged">
    <description>reports if a given taxonomy identifier has been renamed</description>
    <parameters>
      <parameter name="taxid" />
    </parameters>
  </service>
  <service name="SHoundIsTaxDeleted">
    <description>reports whether a taxid has been deleted from the tree</description>
    <parameters>
      <parameter name="taxid" />
    </parameters>
  </service>
  <service name="SHoundGetTaxNameFromTaxIDByClass">
    <description>gets a taxon name in a specified style</description>
    <parameters>
      <parameter name="taxid" />
      <parameter name="nameClass" />
    </parameters>
  </service>
  <service name="SHoundGetTaxNameFromTaxID">
    <description>fetches a taxonomy name in scientific form</description>
    <parameters>
      <parameter name="taxid" />
    </parameters>
  </service>
  <service name="SHoundGetTaxLineageFromTaxID">
    <description>fetches a taxonomy lineage in a specified form.</description>
    <parameters>
      <parameter name="taxid" />
      <parameter name="type" />
    </parameters>
  </service>
  <service name="SHoundGOIDFromLLID">
    <description>retrieves an array of gene ontology identifiers with the specified locus link identifier</description>
    <parameters>
      <parameter name="llid" />
    </parameters>
  </service>
  <service name="SHoundOMIMFromLLID">
    <description>retrieves an Online Mendelian Inheritance in Man (OMIM) id for a given locus link id</description>
    <parameters>
      <parameter name="llid" />
    </parameters>
  </service>
  <service name="SHoundCDDIDFromLLID">
    <description>Retrieves all the conserved domain ids for a given locus link id.</description>
    <parameters>
      <parameter name="llid" />
    </parameters>
  </service>
  <service name="SHoundLLIDFromGOIDAndECode">
    <description>Return all the locus link ids with the given goid and evidence code.</description>
    <parameters>
      <parameter name="goid" />
      <parameter name="ecode" />
    </parameters>
  </service>
  <service name="SHoundLLIDFromOMIM">
    <description>retrieves an array of locus link ids with the given OMIM identifier</description>
    <parameters>
      <parameter name="omimid" />
    </parameters>
  </service>
  <service name="SHoundLLIDFromCDDID">
    <description>retrieves an array of locus link ids with the given conserved domain identifier</description>
    <parameters>
      <parameter name="cddid" />
    </parameters>
  </service>
  <service name="SHoundGiFromGOID">
    <description>retrieves an array of gi with specified the specified gene ontology identifier</description>
    <parameters>
      <parameter name="go" />
    </parameters>
  </service>
  <service name="SHoundGiFromGOIDList">
    <description>retrieves an array of gis that have been annotated with the specified goid</description>
    <parameters>
      <parameter name="goList" />
    </parameters>
  </service>
  <service name="SHoundGiFromGOIDListAndECode">
    <description>retrieves an array of gis that have been annotated with the specified goid list and
 the evidence code</description>
    <parameters>
      <parameter name="goList" />
      <parameter name="ecode" />
    </parameters>
  </service>
  <service name="SHoundGOIDFromGi">
    <description>retrieves an array of goid for a specified gi</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundGOIDFromGiList">
    <description>retrieves an array of goid for a specified array of gi's</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundGiFromGOIDAndECode">
    <description>Return all the gi's with the given goid and evidence code.</description>
    <parameters>
      <parameter name="goid" />
      <parameter name="ecode" />
    </parameters>
  </service>
  <service name="SHoundGOIDFromRedundantGi">
    <description>Retrieves an array of goid  (Gene Ontology identifiers) from a protein gi.
 Uses redundancy information for the query gi identifier.
 This means that if the query fails for the input gi identifier,
 then the query will be retried for all other gi identifiers that belong
 to the same redundant group.</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundGOIDFromRedundantGiList">
    <description>Retrieves an array of goid  (Gene Ontology identifiers) from a
 given array of protein gi's
 Uses redundancy information for the query gi identifier.
 This means that if the query fails for the input gi identifier,
 then the query will be retried for all other gi identifiers that belong
 to the same redundant group.</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundGiFromCDDID">
    <description>retrieves an array of protein gi with the domain specified by input</description>
    <parameters>
      <parameter name="cddid" />
    </parameters>
  </service>
  <service name="SHoundGiFromCDDIDList">
    <description>get the protein gi's with the specified domains</description>
    <parameters>
      <parameter name="cddidList" />
    </parameters>
  </service>
  <service name="SHoundCDDIDFromGi">
    <description>retrieves the domains for a specified protein gi.
 Information returned by this function was originally retrieved
 for proteins found in NCBI's LocusLink database.
 If the query protein gi identifier is not used by the LocusLink record
 then no information will be returned.
 The query protein gi identifier could be used to first retrieve
 a list of redundant (identical) sequence gi identifiers
 using {@link #SHoundRedundantGroup(int)} and then using these returned
 protein gi identifiers to query the LocusLink data.
 For more conserved domain information (for all proteins found
 in NCBI's nr dataset) see API functions under RPS BLAST DOMAINS</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundCDDIDFromGiList">
    <description>retrieve the domain identifiers for a specified protein gi array.
 Information returned by this function was originally retrieved
 for proteins found in NCBI's LocusLink database.
 If the query protein gi identifier is not used by the LocusLink record
 then no information will be returned.
 The query protein gi identifier could be used to first retrieve
 a list of redundant (identical) sequence gi identifiers
 using {@link #SHoundRedundantGroup(int)} and then using these returned
 protein gi identifiers to query the LocusLink data.
 For more conserved domain information (for all proteins found
 in NCBI's nr dataset) see API functions under RPS BLAST DOMAINS</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundGiFromOMIM">
    <description>retrieves protein gi's from an omim</description>
    <parameters>
      <parameter name="omimid" />
    </parameters>
  </service>
  <service name="SHoundGiFromOMIMList">
    <description>retrieves protein gi's associated with a omim</description>
    <parameters>
      <parameter name="omimList" />
    </parameters>
  </service>
  <service name="SHoundOMIMFromGi">
    <description>retrieves omim associated with a protein gi</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundOMIMFromGiList">
    <description>get the associated omim for an array of protein gi's</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundCDDScoreFromGi">
    <description>Get the score for a Conserved domain database domain.
 Information returned by this function was originally retrieved
 for proteins found in NCBI's LocusLink database.
 If the query protein gi identifier is not used by the LocusLink record
 then no information will be returned.
 The query protein gi identifier could be used to first retrieve
 a list of redundant (identical) sequence gi identifiers
 using {@link #SHoundRedundantGroup(int)} and then using these returned
 protein gi identifiers to query the LocusLink data.
 &lt;em&gt;Note that currently this function does not return meaningful results
 because there are no evalues associated with the records.&lt;/em&gt;</description>
    <parameters>
      <parameter name="gi" />
      <parameter name="cddid" />
    </parameters>
  </service>
  <service name="SHoundGiFromLLID">
    <description>Get protein gi associated with a locuslink identifier</description>
    <parameters>
      <parameter name="llid" />
    </parameters>
  </service>
  <service name="SHoundGiFromLLIDList">
    <description>get the protein gi's associated with the locuslink id</description>
    <parameters>
      <parameter name="llidList" />
    </parameters>
  </service>
  <service name="SHoundLLIDFromGi">
    <description>retrieves locuslink id for a given protein gi</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundLLIDFromGiList">
    <description>retrievs locuslink id for a given protein gi array</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundLocusFromGi">
    <description>retrieves the locus for a given protein gi</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundGODBGetRecordByReference">
    <description>retrieve the gene ontology id by geneontology reference type</description>
    <parameters>
      <parameter name="refType" />
    </parameters>
  </service>
  <service name="SHoundGODBGetChildrenOf">
    <description>retrieves all the children of a given gene ontology id</description>
    <parameters>
      <parameter name="goid" />
    </parameters>
  </service>
  <service name="SHoundGODBGetParentOf">
    <description>retrieves an array of the parents of a given goid</description>
    <parameters>
      <parameter name="goid" />
    </parameters>
  </service>
  <service name="SHoundGODBGetAllAncestors">
    <description>retrieves all the ancestors (parents, grandparents ...) of a given gene ontology id.</description>
    <parameters>
      <parameter name="goid" />
    </parameters>
  </service>
  <service name="SHoundGODBGetAllChildren">
    <description>retrieve all children of a given gene ontology id</description>
    <parameters>
      <parameter name="goid" />
    </parameters>
  </service>
  <service name="SHoundGODBGetNameByID">
    <description>retrieves the name of a given goid</description>
    <parameters>
      <parameter name="goid" />
    </parameters>
  </service>
  <service name="SHoundGODBGetClassification">
    <description>retrieve the ontology classification for a given goid</description>
    <parameters>
      <parameter name="goid" />
    </parameters>
  </service>
  <service name="SHoundNeighboursFromGi">
    <description>Retrieves a list of protein BLAST neighbours.
 Uses redundancy information for the query protein.
 This means that if the query fails for the input gi identifier,
 then the query will be retried for all other gi identifiers that
 belong to the same redundant group.
 The BLAST protein neighbours were calculated using 0.01 maximum E-value cutoff.</description>
    <parameters>
      <parameter name="gi" />
      <parameter name="eValue" />
      <parameter name="bLimit" />
    </parameters>
  </service>
  <service name="SHoundNeighboursFromGiList">
    <description>Retrieves a list of protein BLAST neighbours.
 Uses redundancy information for the query protein.
 This means that if the query fails for the input gi identifier,
 then the query will be retried for all other gi identifiers that
 belong to the same redundant group.
 The BLAST protein neighbours were calculated using 0.01 maximum E-value cutoff.</description>
    <parameters>
      <parameter name="giList" />
      <parameter name="eValue" />
      <parameter name="bLimit" />
    </parameters>
  </service>
  <service name="SHoundNeighboursFromTaxID">
    <description>Retrieves a list of protein BLAST neighbours using a list of
 proteins belonging to a complete genome as a query. Uses
 redundancy information for the query proteins. The BLAST
 protein neighbours were calculated using 0.01 maximum E-value cutoff.</description>
    <parameters>
      <parameter name="taxid" />
      <parameter name="eValue" />
    </parameters>
  </service>
  <service name="SHound3DNeighboursFromGi">
    <description>Retrieves a list of protein BLAST neighbours possessing 3-D
 structure. Uses redundancy information for the query protein.
 This means that if the query fails for the input gi identifier,
 then the query will be retried for all other gi identifiers that
 belong to the same redundant group.
 The BLAST protein neighbours were calculated using
 0.01 maximum E-value cutoff.</description>
    <parameters>
      <parameter name="gi" />
      <parameter name="eValue" />
    </parameters>
  </service>
  <service name="SHound3DNeighboursFromTaxID">
    <description>Retrieves a list of protein BLAST neighbours possessing
 3-D structure using a list of proteins belonging to a
 complete genome as a query. Uses redundancy information
 for the query protein. The BLAST protein neighbours were
 calculated using 0.01 maximum E-value cutoff.</description>
    <parameters>
      <parameter name="taxid" />
      <parameter name="eValue" />
    </parameters>
  </service>
  <service name="SHoundGetGisByNumberOfDomains">
    <description>retrieves all the gi's with the specified number of domains</description>
    <parameters>
      <parameter name="numdoms" />
    </parameters>
  </service>
  <service name="SHoundGetDomainIdFromLabel">
    <description>retrieves the domain id given a label</description>
    <parameters>
      <parameter name="label" />
    </parameters>
  </service>
  <service name="SHoundGetGisByDomainId">
    <description>retrieve the gi's having a domain id</description>
    <parameters>
      <parameter name="domain" />
    </parameters>
  </service>
  <service name="SHoundGetDomainLabelFromDomainId">
    <description>Returns a short non-unique label given a domain for a
 Conserved Domain Database (CDD). The above labels are
 preferred amongst scientific community.</description>
    <parameters>
      <parameter name="accession" />
    </parameters>
  </service>
  <service name="SHoundGetGisByDomainIdAndEvalue">
    <description>Fetches protein sequences on which a domain from
 the Conserved Domain Database (CDD) was identified by
 Reverse Position Specific BLAST. The function uses an E-value
 cutoff for reporting results.</description>
    <parameters>
      <parameter name="domain" />
      <parameter name="evalue" />
    </parameters>
  </service>
  <service name="SHoundGetDomainsFromGi">
    <description>Fetches information about domains from the Conserved
 Domain Database (CDD) as assigned by Reverse Position
 Specific BLAST to a given protein sequence.
 Uses redundancy information for the query protein.
 This means that if the query fails for the input gi identifier,
 then the query will be retried for all other gi identifiers that
 belong to the same redundant group.</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundGetDomainsFromGiWithEvalue">
    <description>Fetches information about domains from the Conserved
 Domain Database (CDD) as assigned by Reverse Position
 Specific BLAST to a given protein sequence.
 Uses redundancy information for the query protein.
 This means that if the query fails for the input gi identifier,
 then the query will be retried for all other gi identifiers that
 belong to the same redundant group.
 The function uses an E-value cutoff for reporting results.</description>
    <parameters>
      <parameter name="gi" />
      <parameter name="eValue" />
    </parameters>
  </service>
  <service name="SHoundGetAccFromRetiredGi">
    <description>Converts a [retired] GI identifier to an NCBI accession number. 
 Sequences from the PIR or PDB databases will return "n/a"
 for this function since they do not have an NCBI accession.</description>
    <parameters>
      <parameter name="gi" />
    </parameters>
  </service>
  <service name="SHoundProteinReportSetDescription">
    <description>Get a protein report set description for a given gi.
 The set description is a comprehensive description for a gi.</description>
    <parameters>
      <parameter name="gi" />
      <parameter name="format" />
    </parameters>
  </service>
  <service name="SHoundGetFastaKeyedList">
    <description>retrieves fasta list for the given gilist</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundRedundantGroupKeyedList">
    <description>Gets all protein entries with the same sequence from the system</description>
    <parameters>
      <parameter name="giList" />
    </parameters>
  </service>
  <service name="SHoundGetFastaFromRedundantGroupIDKeyedList">
    <description>retrieves fasta list for the given redundant group id list</description>
    <parameters>
      <parameter name="gidList" />
    </parameters>
  </service>
</services>
