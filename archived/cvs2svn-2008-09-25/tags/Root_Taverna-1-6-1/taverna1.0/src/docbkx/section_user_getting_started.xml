<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<section id="user_gettings_started">
  <title>Getting started with Taverna</title>

  <para>This section will walk through the process of installing and
  configuring Taverna then creating and enacting a trivial sequence fetcher
  workflow. While this is obviously a task which could (and arguably should)
  be performed in a simpler fashion it should serve as a reasonable
  introduction to the basic features of Taverna. This section assumes that you
  are running on some modern version of the Windows operating system (Windows
  2000, Windows XP), there may be some minor differences with other systems
  such as linux and Solaris although the basics should be identical.</para>

  <section id="taverna_installation">
    <title>Installation</title>

    <para>Both Windows and Linux installations require a modern (version 1.5)
    Java installation to run. Windows machines may not have this by default,
    so you will need to obtain it from http://java.sun.com. Linux users are
    more likely to already have this but should check - the procedure for Java
    installation on Linux is out of the bounds of this document.</para>

    <section id="taverna_on_windows">
      <title>Windows</title>

      <para>On Windows machines installation should be extremely simple - open
      the downloaded archive (you probably already did this to read this
      file!) and unpack it to somewhere on your file system. The precise
      location doesn't matter but Taverna will not run from within a
      compressed folder - if you are using Windows XP and have not installed
      any software such as WinZip then Windows will appear to open the zip
      file just as if it were a normal folder on the file system, however,
      this is not the case and the differences will cause Taverna to
      fail.</para>
    </section>

    <section id="taverna_on_linux">
      <title>Linux</title>

      <para>Linux installation is very slightly more complex as you will have
      to install one extra piece of software first. Taverna makes use of the
      'dot' application from the GraphViz package from AT&amp;T research. This
      package (which is well worth installing for other reasons) is available
      as an RPM from the AT&amp;T site here:
      http://www.research.att.com/sw/tools/graphviz/download.html. You may
      already have it, a simple check is to go to a command line and try
      typing 'dot', if the terminal just sits there then you probably have
      GraphViz already, if it shows an error indicating that the application
      is not found then you'll need to install it. Installation of the RPM
      will almost certainly require root access so you may need to ask your
      systems administrator to install it for you. Once you have GraphViz
      installed then you can simply unzip the Taverna archive to somewhere
      sensible, you might also want to sym-link to the runme.sh file from e.g.
      /usr/bin/taverna for ease of access.</para>
    </section>
  </section>

  <section id="taverna_configuration">
    <title>Configuration</title>

    <section id="taverna_artifact_repository">
      <title>Artefact repository location</title>

      <para>When Taverna starts up it downloads all the dependencies it needs
      in order to run, together with any updates if requested, and optional
      plugins. By default, this location is on Windows
      &lt;Drive&gt;:/Documents and Settings/&lt;You&gt;/Application
      Data/Taverna/repository, on Linux $HOME/.taverna-1.5.2/repository and on
      the Mac $HOME/Library/Application Support/Taverna-1.5.2/repository. This
      location can be changed by setting the property taverna.repository in
      the startup script. Be careful not to overwrite the existing other
      settings for ARGS by making sure you are appending your new setting. For
      windows this is the runme.bat and would be changed to end with:</para>

      <para>In Taverna 1.5.0 and 1.5.1 the location of the repository was
      &lt;Drive&gt;:/Documents and Settings/&lt;You&gt;/Application
      Data/Taverna/repository,$HOME/.taverna, or $HOME/Library/Application
      Support/Taverna-1.5.2/repository. If this repository exists when running
      Taverna 1.5.2 then this repository is shared to prevent duplication of
      artifacts eating up disk space. Artifacts unique to Tavarna 1.5.2 are
      still stored in the new repsitory described previously.</para>

      <screen>set ARGS=%ARGS% -Dtaverna.repository=§j&lt;new location&gt; 

java %ARGS% -jar "%~dp0\taverna-bootstrap-1.5.0.jar" %*</screen>

      <para>Note that spaces in the path name should be replaced with %20,
      e.g. Documents%20and%20Settings.</para>

      <para>In Linux, the runme.sh would be changed to end with:</para>

      <screen>ARGS="$ARGS –Dtaverna.repository=&lt;new location&gt;" 

java $ARGS -jar $TAVERNA_HOME/taverna-bootstrap-1.5.0.jar $@</screen>
    </section>

    <section id="taverna_proxy_config">
      <title>Proxy configuration</title>

      <para>If you are behind an HTTP proxy, and there's a reasonable chance
      that you are, you'll need to modify the <link
      linkend="mygrid.properties">mygrid.properties</link>. The properties
      <emphasis>http.proxyHost</emphasis> and
      <emphasis>http.proxyPort</emphasis> need to be set to the hostname, or
      IP address, and port. There is also the additional property
      <emphasis>http.nonProxyHosts</emphasis> which if set lists hosts for
      which the proxy is not used, separated by a ‘|’. If the proxy server
      also requires authentication you should also assign values to
      <emphasis>http.proxyUser</emphasis> and
      <emphasis>http.proxyPassword</emphasis>. By default these properties are
      commented out, to make them active uncomment them and assign them to an
      appropriate value, for example:</para>

      <screen>http.proxyHost=myproxy.com
http.proxyPort=1234
http.nonProxyHosts=localhost|127.0.0.1|*.mydomain.com

http.proxyUser = elvis
http.proxyPassword = theking</screen>
    </section>

    <section id="mygrid.properties">
      <title>The mygrid.properties file</title>

      <para>Many setttings can be modifed by editing the mygrid.properties
      file. Generally this file is found in the conf directory of the unpacked
      Taverna download. Optionally, you can override this file with the
      presence of a user specific mygrid.properties. In windows this would be
      Documents and Setttings\&lt;user&gt;\Application Data\Taverna-1.5.2\, in
      Linux $HOME/.taverna-1.5.2/, and on the Mac $HOME/Library/Application
      Support/Taverna-1.5.2/. This is useful when Taverna is deployed within a
      multi-user environment, allowing each user to customise their individual
      settings.</para>
    </section>

    <section id="default_services">
      <title>Default services</title>

      <para>Taverna can be configured to automatically load libraries of
      components into the service selection panel when it starts up. This is
      configured in the mygrid.properties. This is worth looking into if you
      are, for example, running a course which involves Taverna and you want
      your students to see your sample services when the workbench starts up.
      For now I suggest leaving the values as specified, although as they
      contact the network to find additional information on startup commenting
      out these sections might speed up the load times.</para>

      <screen># DEFAULT SERVICES (user editable)
#--------------------------------------------------------------------
# The service selection panel component can be populated with extra
# web services and soaplab installations using this configuration
# section. In order to enable this, uncomment and edit the two
# properties to suit.
# Note that the default services load in a new thread, so may not
# appear immediately within the service panel. If any errors occur
# during the load, the stack trace is displayed in the system
# console. This is not ideal, we'll have better reporting in the
# next release.
# Multiple instances of each (soaplab or wsdl) may be specified by
# including all endpoints, separated with the ',' character as shown
# below.
# Trailing whitespace is not allowed in these URLs! If you're having
# problems getting this to work then check there isn't a space at the
# end of the line.
#--------------------------------------------------------------------
   taverna.defaultsoaplab = \
      http://industry.ebi.ac.uk/soap/soaplab,\
      http://www.ebi.ac.uk/collab/mygrid/service4/soap/services
   taverna.defaultwsdl = \
      http://www.ebi.ac.uk/collab/mygrid/service1/goviz/GoViz.jws?wsdl,\
      http://www.ebi.ac.uk/xembl/XEMBL.wsdl
   taverna.defaultbiomoby = \
      http://mobycentral.cbr.nrc.ca/cgi-bin/MOBY05/mobycentral.pl
   taverna.defaultweb = \
      http://www.ebi.ac.uk/~tmo/workflows/
#--------------------------------------------------------------------
</screen>
    </section>

    <section id="image_types_and_error_4">
      <title>Image types and the mysterious 'Error 4'</title>

      <para>There are reports of some linux installations showing a mysterious
      error '4'. This is, as far as we can tell, a problem with java handling
      PNG format images - we use this for the workflow diagram. If you are
      having this problem you might like to try uncommenting one of the
      'taverna.scufldiagram.imagetype' lines to use GIF or JPEG coding
      instead. This seems to be a problem particularly on Linux but this is
      worth trying on any installation showing this error. Note - as of
      version 1.1 and higher this problem should never appear, Taverna will
      detect the issue the first time and fix it behind the scenes without any
      further intervention. If this is not the case please let us know!</para>

      <screen># WORKFLOW DIAGRAM IMAGE TYPE (user editable)
#--------------------------------------------------------------------
# By default the workflow diagram uses an internal image in PNG
# format. Some platforms (win2000 and linux) have exhibited problems
# with this which seem to be rectified by changing the format to one
# of 'gif' or 'jpg'
# If you're seeing messages with the extremely helpful text of '4' or
# similar and no diagram appearing in the workbench you might like to
# try uncommenting one of the options below
#--------------------------------------------------------------------
# taverna.scufldiagram.imagetype = gif
# taverna.scufldiagram.imagetype = jpg
#--------------------------------------------------------------------</screen>
    </section>

    <section id="alternative_dot_location">
      <title>Setting an alternative location for the 'dot' tool</title>

      <para>If you are running Taverna without administrative privileges on a
      unix style system you may be unable to install Graphviz as described
      above. You may, however, be able to install it into an alternative
      location. If this is the case you can define the property
      'taverna.dotlocation' to the full path of the dot executable, Taverna
      will pick it up from this location rather than attempting to search the
      $PATH environment variable. This is only required if the diagrams don't
      work - Windows users should never need this option.</para>

      <screen># WORKFLOW DIAGRAM DOT LOCATION (user editable)
#--------------------------------------------------------------------
# By default Taverna will look for the 'dot' executable used to draw
# the workflow diagram on the standard PATH (whatever that concept is
# on your architecture of choice). To override this and explicitly
# supply a path to the executable you should edit and uncomment the
# following property
#--------------------------------------------------------------------
# taverna.dotlocation = /bin/foo/mystuff/dot
#--------------------------------------------------------------------</screen>
    </section>
  </section>

  <xi:include href="section_custom_perspectives.xml"
              xmlns:xi="http://www.w3.org/2001/XInclude" />

  <xi:include href="section_running_taverna.xml"
              xmlns:xi="http://www.w3.org/2001/XInclude" />
</section>