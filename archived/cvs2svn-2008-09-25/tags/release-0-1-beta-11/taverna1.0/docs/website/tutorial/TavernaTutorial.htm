<html>
<head>
<title>Taverna Tutorial</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../styles.css" rel="stylesheet" type="text/css">
</head>

<body bgcolor="#D9E9FF" text="#000000">
<h1 align="center">Taverna Tutorial</h1>
<blockquote> 
  <p align="left">Bioinformatics analyses often involve combining the use of databases 
    and analysis programs which are linked in a specific order to form a workflow 
    process. For example, a workflow to investigate the evolutionary relationships 
    between proteins might begin with acquiring amino acid sequences belonging 
    to a protein family from the Swiss-Prot database and then applying the ClustalW 
    algorithm to align and identify patterns between sequences.</p>
  <p align="left">Taverna is an open source workflow system. It provides a language 
    and the software tools to facilitate easy use of workflow and distributed 
    compute technology within the e-Science community. The aim of this tutorial 
    is to become familiar with using Taverna for the construction and enactment 
    of bioinformatics workflows which is required for the practical class of this 
    module.</p>
</blockquote>
<hr>
<h2 align="left">Getting Started</h2>
<blockquote>
  <h3 align="left">System Requirements</h3>
  <p>Taverna requires an installation of Java version 1.4.1 or above which can 
    be downloaded from http://java.sun.com.</p>
  <h3 align="left">Installation</h3>
  <ol>
    <li>If you have not already done so, download the latest version of Taverna 
      from <A HREF="http://sourceforge.net/project/showfiles.php?group_id=74874">here</A>.</li>
    <li>Unzip the file in a convenient location.</li>
    <li>Start Taverna by double-clicking on the runme.bat batch file. The Taverna 
      splash screen will appear followed shortly by the Scufl Workbench. Status 
      messages also appear in the command window and, for the majority of the 
      time, can be ignored. They are diagnostic information which may be useful 
      in identifying problems with Taverna software.</li>
  </ol>
  <h3>Troubleshooting</h3>
  <p align="left">If your PC is located on a network containing a proxy server, 
    you will need to configure Taverna to use it by editing the mygrid.properties 
    file in the conf directory. For example, if you are within the Newcastle University 
    network then edit the mygrid.properties file as follows:</p>
  <pre align="left"># proxy properties
  http.proxyHost=wwwcache.ncl.ac.uk
  http.proxyPort=8080
  proxySet=true
  proxyHost=wwwcache.ncl.ac.uk
  proxyPort=8080
  http.nonProxyHosts=*.ncl.ac.uk|*.newcastle.ac.uk|localhost|127.0.0.1</pre>
</blockquote>
<p>&nbsp;</p>
<hr>
<h2>The Scufl Workbench</h2>
<blockquote>
  <p>The Scufl Workbench provides the graphical user interface by which workflows 
    can be created and enacted in Taverna. From here, you can construct a workflow, 
    enact a workflow and browse the results and provenance information generated 
    from the enactment of a workflow. The Workbench acts a container of windows 
    which provide various views and a controller to manipulate a workflow. On 
    startup, the Scufl Model Explorer, Scufl Diagram view and Service palette 
    are opened by default:</p>
  <div align="center"><img src="ScuflWorkbench.JPG" width="879" height="921"> 
  </div>
  <h2>Scufl Workbench Menus</h2>
  <p>There are two drop down menus present at the top left of the Scufl Workbench:</p>
  <ol>
    <li><b>FILE MENU</b>: To import a Scufl workflow from a local filesystem or 
      from the Web, to save a Scufl workflow as an XML file or a DOT file, or 
      to reset the Scufl Workbench, left-click this menu buton.</li>
    <li><b>TOOLS AND WORKFLOW INVOCATION MENU</b>: To open the Scufl Explorer 
      Tree view, workflow diagram window, XScufl view, DOT view, Service Panel 
      or to enact a workflows, click on the Tools and workfow invocation menu 
      button.</li>
  </ol>
  <h2><b>Importing a workflow into the Scufl Workbench</b></h2>
  <p> To begin using Taverna, let's import a Scufl workflow into the Workbench.</p>
  <ul>
    <li> Click on the File menu and then click on 'Import XScufl definition from 
      web'.</li>
    <li>You will now be requested to enter the URL Web address of the XScufl workflow 
      you want to import. Type in <a href="http://homepages.cs.ncl.ac.uk/peter.li/home.formal/CSC861/workflows/GetEmblRecord.xml">http://homepages.cs.ncl.ac.uk/peter.li/home.formal/CSC861/workflows/GetEmblRecord.xml</a>. 
      This will load the GetEmblRecord Scufl workflow into the Workbench. Your 
      Workbench should now look similar to that shown below.</li>
  </ul>
  <p><img src="ScuflWorkbench2.JPG"></p>
  <p>You can see that the Scufl Diagram window provides a graphical view of the 
    current Scufl workflow model. This is a read-only view which is created from 
    Taverna's internal model of the workflow using the <a href="http://www.research.att.com/sw/tools/graphviz/">DOT</a> 
    tool from AT&amp;T. The graphical view consists of a network of nodes and 
    edges, and consists of the following components as defined by the Scufl workflow 
    language specification:</p>
</blockquote>
<div align="center"> 
  <table width="95%" border="1" cellpadding="2" cellspacing="0" bordercolor="#000000" background="../gradient2.png">
    <tr bgcolor="#FFFFFF"> 
      <td width="16%"> 
        <div align="center"><b>Scufl component</b></div></td>
      <td width="59%"> 
        <div align="center"><b>Description</b></div></td>
      <td width="25%"> 
        <div align="center"><b>Symbol</b></div></td>
    </tr>
    <tr> 
      <td width="16%">Workflow input</td>
      <td width="59%">A source processor which executes instantaneously and makes 
        the input value available on its virtual output port</td>
      <td width="25%"> 
        <div align="center"><img src="input.PNG" width="101" height="51"></div></td>
    </tr>
    <tr> 
      <td width="16%">Workflow output</td>
      <td width="59%">A sink processor which receives a value from its virtual 
        input port but never actually executes. </td>
      <td width="25%"> 
        <div align="center"><img src="output.PNG" width="101" height="51"></div></td>
    </tr>
    <tr> 
      <td width="16%">Web service processor</td>
      <td width="59%">Allows a single call on a Web service operation. The port 
        names are derived from the message names in the Web Service Description 
        Language (WSDL) file of the Web service for the identified operation.</td>
      <td width="25%"> 
        <div align="center"><img src="WebServiceProcessor.PNG" width="195" height="73"></div></td>
    </tr>
    <tr> 
      <td width="16%">Soaplab processor</td>
      <td width="59%">Calls a complete Soaplab invocation as one unit. The endpoint 
        should be the full Uniform Resource Locator (URL) of the service endpoint 
        so including, for example, &quot;edit:seqret&quot; at the end.</td>
      <td width="25%"> 
        <div align="center"><img src="SoaplabProcessor.PNG" width="168" height="70"></div></td>
    </tr>
    <tr> 
      <td width="16%">Local processor</td>
      <td width="59%">Can be used to add new local functions which are coded as 
        classes to comply with a simple Java interface. </td>
      <td width="25%"> 
        <div align="center"><img src="LocalProcessor.PNG" width="147" height="70"></div></td>
    </tr>
    <tr> 
      <td width="16%">String processor</td>
      <td width="59%">Has a single output port on which it returns a constant 
        string value. This processor is of particular use where another processor 
        in the same workflow requires a default value which acts as a parameter</td>
      <td width="25%"> 
        <div align="center"><img src="StringProcessor.PNG" width="154" height="71"></div></td>
    </tr>
    <tr> 
      <td width="16%"> <p>Data link</p></td>
      <td width="59%">Define the flow of data between workflow inputs, processors 
        and workflow outputs. In addition, these edges provide additional metadata 
        about the data being linked between processors such as MIME type information 
        and whether data is a singleton or a collection.</td>
      <td width="25%"> 
        <div align="center"><img src="DataFlow.PNG" width="66" height="72"></div></td>
    </tr>
  </table>
</div>
<blockquote>
  <p>The workflow that has just been loaded is a very simple since it consists 
    of one single step. Given an EMBL accession number, the workflow will retrieve 
    the corresponding EMBL record using the <a href="http://mygrid.ncl.ac.uk/axis/services/SrsEbiQuery">SrsEbiQuery</a> 
    Web service which acts as a proxy to the <a href="http://srs6.ebi.ac.uk/srsbin/cgi-bin/wgetz?-page+srsq2+-noSession">Sequence 
    Retrieval System</a> at the Europrean Bioinformatics Institute. The single 
    step is represented by the Web service processor (green box) called GETEMBLRECORD. 
    This processor requires an input (configured as a string constant processor) 
    which is an EMBL accession number to a record in the EMBL database. There 
    is one workflow output (up-right blue triangle); the EMBL record. The input 
    and output ports of the GETEMBLRECORD processor are also shown: usa (which 
    stands for unifrom sequence address) and queryByIdReturn. Both ports are bounded 
    to the workflow input and output, respectively.</p>
  <ul>
    <li>The level of detail shown in the Workflow Diagram window can be altered 
      by right-clicking on the window. View the workflow with no ports and all 
      ports by right-clicking on the workflow diagram. </li>
    <li>The XML representation of the Scufl workflow can be viewed from within 
      the Scufl Workbench. This is done by selecting XScufl View from the 'Tools 
      and Workflow Invocation' menu at the top of the Scufl Workbench.</li>
    <li>The Scufl Model Explorer window provides a view of the state of the current 
      model as a tree structure and is also used to edit workflows in the Scufl 
      workbench. Expand the GetEmblRecord node to see the ports associated with 
      the GETEMBLRECORD processor. There is a 'usa' input port and there is a 
      'queryByIdReturn' output port. Later on in this tutorial, you will learn 
      how to use the Scufl Model Explorer for manipulating workflows. </li>
    <li>The 'Available services' window provides a palette of services and workflows 
      by which you can use in the creation of workflows. The palette has to be 
      populated with services which can then be used in the construction of workflows 
      within the Scufl Workbench.</li>
  </ul>
</blockquote>
<hr>
<h2><b>Enacting a workflow</b></h2>
<blockquote> 
  <p>We will now enact the current workflow using the Scufl Workbench.</p>
  <ul>
    <li>Workflows are executed in the Scufl Workbench using the enactor launch 
      panel. To bring this panel up, click on the Tools and Workflow Invocation 
      menu and then click on 'Run Workflow'.</li>
    <li>Click the 'Run Workflow' button on the enactor launch panel to execute 
      the GetEmblRecord workflow. This will launch an 'Enactor Invocation' window 
      which consists of 3 panes: Status, Results and Process report. The Status 
      pane provides information about the status of each processor in the workflow 
      which is being enacted. Notice the change in status of each processor during 
      the enactment of the workflow. </li>
  </ul>
  <p align="center"><img src="status.JPG"></p>
  <p> When the workflow has completed running, click on the Results pane to view 
    the results. The output of the workflow should be the EMBL record associated 
    with the EMBL accession number.</p>
  <p align="center"><img src="results.JPG"></p>
  <p>Click on the Process report pane. This will show the provenance information 
    which has been recorded about the workflow which has just been enacted. Currently, 
    this provenance is technical in nature consisting of temporal information 
    and the type of service invoked by each processor.</p>
  <p align="center"><img src="ProcessReport.JPG"></p>
  <h4>Troubleshooting</h4>
  <p>If you get an exception "Problem opening XScufl" then Taverna has failed 
    to load the selected workflow. The most likely reason is that you have not 
    configured Taverna with the appropriate proxy details. See the Getting Started 
    section of this tutorial for information on how to fix this problem.</p>
</blockquote>
<hr>
<h2><b>Editing Workflows</b></h2>
<blockquote>
  <p>The simplest way to become familiar with the Taverna factilities for editing 
    a workflow is to take an existing workflow model and make some changes to 
    it. When changing a model, the main focus is on the Scufl Model Explorer window 
    to identify the elements to be changed. The Scufl Model Explorer provides 
    a constrained set of options so that you should only be able to create valid 
    Scufl models. Any changes made in the Scufl model using the Explorer window 
    are reflected in the Scufl Diagram and also the XScufl view.</p>
  <h3>Edit string constant</h3>
  <p>For the GetEmblRecord workflow model that you have just loaded and ran above, 
    one very simple change is to change the string constant processor so that 
    it provides a different string. In the Scufl Model Explorer window:</p>
  <ul>
    <li>Select the EmblAccNumber processor.</li>
    <li>Right-click to obtain the menu for this processor.</li>
    <li>Select edit string value as shown below.</li>
    <li>Supply the new value in the input dialog box, for example, embl-AccNumber:AY197741, 
      and click ok.</li>
    <li>Now that the string constant has a new value, run the revised model by 
      selecting the run button in the Enactor launch window and get the corresponding 
      results.<br>
    </li>
  </ul>
  <div align="center"><img src="StringConstant.JPG"> </div>
  <h3>Replace string constant with workflow input</h3>
  <p>Scufl models with a string constant as its workflow input are very useful 
    as test examples since new users do not have to guess an acceptable input. 
    They also provide a way of entering alternative inputs when running Scufl 
    workflows in the Taverna workbench as we have done above. However, using a 
    workflow input element is more appropriate in other situations. Follow the 
    steps below to replace a string constant with a workflow input.</p>
</blockquote>
<div align="center"> 
  <table width="95%" border="1" cellpadding="2" cellspacing="0" bordercolor="#000000" background="../gradient2.png">
    <tr> 
      <td> <b>Create a new workflow input</b> <ul>
          <li>In the current workflow, add the new workflow input element by right-clicking 
            on Workflow inputs in the Scufl Model Explorer window.</li>
          <li>Provide a name, say &quot;EmblAccNumber&quot; for the workflow input 
            when requested. This name must be unique in the scope of the current 
            model and should start with a character and include only characters, 
            numbers and underscores.</li>
          <li>Check the presence of the new workflow input in the Scufl diagram.</li>
        </ul></td>
      <td><img src="NewInput1.JPG" width="498" height="296"></td>
    </tr>
    <tr> 
      <td> <p><b>Link workflow input with processor</b></p>
        <ul>
          <li>Right-click on the newly created EmblAccNumber workflow input in 
            the Scufl Model Explorer window to see the nested list of destinations 
            to which this input can be linked.</li>
          <li>Select the usa input port of the GetEmblRecord processor since this 
            is the required destination of the workflow input. The link will be 
            added to the current model and the views updated.</li>
          <li>Note that in Taverna data links are always made in the direction 
            that the data will flow. That is you start by selecting the source 
            of the data (input or processor output) and then select the destination 
            (output or processor input). </li>
        </ul></td>
      <td><img src="Linking1.JPG" width="498" height="295"></td>
    </tr>
    <tr> 
      <td> <p><b>Delete string processor</b></p>
        The string processor is now redundant and needs to be removed from the 
        Scufl workflow. Right click on the processor EmblAccNumber in the Scufl 
        Model Explorer window and select Remove from model. The processor will 
        be removed from the current model and the views updated.</td>
      <td><img src="Delete1.JPG" width="498" height="294"></td>
    </tr>
    <tr> 
      <td>Your modified workflow should now look like the one on the right. When 
        you now run the workflow, you will need to enter a valid EMBL accession 
        number. Type in embl-AccNumber:AY197741 as an example.</td>
      <td> <div align="center"><img src="NewWorkflow1.JPG" width="276" height="473"></div></td>
    </tr>
  </table>
</div>
<hr>
<h2>Saving workflows</h2>
<blockquote>
  <p>When required the File menu -> Save as XScufl option can be used to save 
    a copy of the current model to local filestore. You can save files with the 
    extension &quot;.xscufl&quot; to make them easy to identify. You can choose 
    to save the current XScufl model in a file with extension &quot;.xml&quot;, 
    so that it is recognised as an XML file by other applications (including your 
    browser).</p>
</blockquote>
<hr>
<h2>Populating the Service Palette</h2>
<blockquote>
  <p>In Taverna, Scufl workflow models can only contain <i>valid</i> processors. 
    The validity of a processor is checked by Taverna by contacting a service 
    to get its description when it loads a model. It is for this reason why most 
    models fail to load without an internet connection. A new processor can be 
    added to the current Scufl model by selecting it from the palette in the Available 
    services window. This palette is populated by scavenging services from the 
    web or models that have been loaded.</p>
</blockquote>
<div align="center"> 
  <table width="95%" border="1" cellpadding="2" cellspacing="0" bordercolor="#000000" background="../gradient2.png">
    <tr> 
      <td width="60%"> <ul>
          <li>Right click on Available Processors in the Available services window. 
            A menu describing ways of populating services will appear.</li>
          <li>Select Collect scavengers from the model. This will load all the 
            processors included in your current model into the Available Processors 
            list within a folder called porttype: SrsEbiQuery.</li>
          <li>Scavenging from models will not introduce processors from an entirely 
            new source. It only finds services that have been used.</li>
        </ul></td>
      <td width="40%"> <div align="center"><img src="ServicePalette2.JPG" width="321" height="247"></div></td>
    </tr>
    <tr> 
      <td width="60%"> <ul>
          <li>There are two approaches to scavenging from the Web. Either you 
            know the particular kind of processors that you wish to scavenge (WSDL, 
            Talisman, Soaplab or Workflow) or you wish to do a general search.</li>
          <li> Select Add new WSDL scavenger and enter the URL address of the 
            KEGG WSDL file as shown on the right.</li>
          <li>This will add the <a href="http://www.genome.ad.jp/kegg/soap/">KEGG 
            Web service</a> as an available processor into the Service Palette 
            within a folder.</li>
        </ul></td>
      <td width="40%"> <div align="center"><img src="wsdl.JPG"></div></td>
    </tr>
    <tr> 
      <td width="60%"> <ul>
          <li>For the Soaplab case, the scavenger tries to find all the possible 
            Scufl processors from a Soaplab URL root point. A default Soaplab 
            URL is provided for you. Click ok to load the list of Emboss tools 
            as Soaplab services into the Service Palette. </li>
        </ul></td>
      <td width="40%"> <div align="center"><img src="soaplab.JPG" width="274" height="120"></div></td>
    </tr>
    <tr> 
      <td width="60%"> <ul>
          <li>A folder entitled Soaplab @ http://industry.ebi.ac.uk/soap/soaplab/ 
            will appear in the service palette. Expand the folder and you will 
            see a series of subfolders representing groups of <a href="http://www.hgmp.mrc.ac.uk/Software/EMBOSS/Apps/index.html">EMBOSS 
            programs</a> which you can use in workflows. To use these programs, 
            you will need to understand how they work by reading the EMBOSS documentation.</li>
        </ul></td>
      <td width="40%"> <div align="center"><img src="SoaplabServices.PNG" width="347" height="620"></div></td>
    </tr>
  </table>
</div>
<blockquote>
  <p>The Taverna web site includes a <a href="http://taverna.sourceforge.net/webservices/index.html">page</a> 
    listing a number of Web services that can be used as a starting point for 
    a general web scavenge. Please note that it may take some time for Taverna 
    to obtain the relevant service descriptions in order to build a large palette 
    of available processors.</p>
</blockquote>
<hr>
<h2>Editing workflows revisited</h2>
<blockquote>
  <h3>Adding a new processor</h3>
  <p>Once you have populated the available processor list, new processors can 
    be incorporated into the workflow model by selecting a processor from the 
    Service Palette and supplying it with an unique name. When you have added 
    a new processor to the Scufl model, it will appear in the Scufl Model Explorer 
    window and in the Scufl Diagram. </p>
  <p>We will now edit a workflow by extending the GetEmblRecord workflow to display 
    the nucleotide sequence contained within the EMBL record with features using 
    an EMBOSS program called showseq.</p>
</blockquote>
<div align="center"> 
  <table width="95%" border="1" cellpadding="2" cellspacing="0" bordercolor="#000000" background="../gradient2.png">
    <tr> 
      <td width="57%">Add the showseq service as a Soaplab processor into the 
        Scufl workflow by right-clicking on showseq in the Available Services 
        window. You will need provide a name for the processor; type showseq or 
        something similar.</td>
      <td width="43%"> <div align="center"><img src="workflow2.PNG" width="359" height="470"></div></td>
    </tr>
    <tr> 
      <td width="57%">Link the queryByIdReturn output port of the GetEmblRecord 
        processor to the input sequence_direct_data input port of the showseq 
        processor using the Scufl Model Explorer.</td>
      <td width="43%"><img src="showseq2.PNG" width="496" height="517"></td>
    </tr>
    <tr> 
      <td width="57%">Create a new workflow output to recieve the results of the 
        showseq processor using the Scufl Model Explorer window.</td>
      <td width="43%"><img src="CreateNewOutput.PNG" width="496" height="294"></td>
    </tr>
    <tr> 
      <td width="57%">Link the outfile output port on the showseq processor with 
        the new workflow output using the Scufl Model Explorer.</td>
      <td width="43%"><img src="Linking2.PNG" width="496" height="345"></td>
    </tr>
    <tr> 
      <td width="57%">Remove the EmblRecord workflow output which is now redundant.</td>
      <td width="43%"><img src="RemoveEmblRecordOutput.PNG" width="496" height="289"></td>
    </tr>
    <tr> 
      <td width="57%"> <ul>
          <li>The workflow should now look like this. Enact the workflow using 
            an EMBL accession number such as &quot;<font color="#FF0000">embl-AccNumber:L00727</font>&quot; 
            to see the results generated by the showseq processor.</li>
          <li>You will see that nucleotide sequence contained within the EMBL 
            file is aligned with its features such as its exons.</li>
          <li>On the Status pane, you can view the intermediate results which 
            are generated between processors. Click on the processors and view 
            the intermediate results.</li>
        </ul></td>
      <td width="43%"> <div align="center"><img src="showseqWorkflow.PNG" width="275" height="611"></div></td>
    </tr>
  </table>
  
</div>
<blockquote>
  <h3>Review of tutorial</h3>
  <p>This tutorial will have provided you with enough experience to compose and 
    enact workflows using the Taverna software. Other Scufl workflows can be obtained 
    from <a href="http://homepages.cs.ncl.ac.uk/peter.li/home.formal/scuflbeta6/">here</a>. 
    Try importing some of these workflows and enacting them to find out what you 
    can do using the Taverna workflow software. Also practice composing your own 
    workflows as you will need to know how to do this for the practical of this 
    module. </p>
</blockquote>
</body>
</html>
