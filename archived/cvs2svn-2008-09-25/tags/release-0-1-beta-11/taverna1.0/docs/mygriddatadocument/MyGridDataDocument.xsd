<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XML Spy v4.2 U (http://www.xmlspy.com) by Tom Oinn (EBI) -->
<!--W3C Schema generated by XML Spy v4.2 U (http://www.xmlspy.com)-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<xs:element name="DataElement">
		<xs:annotation>
			<xs:documentation>A single item of data within the myGrid framework.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="DataElementData"/>
				<xs:element ref="DataElementMetaData"/>
			</xs:sequence>
			<xs:attribute name="index" type="xs:byte" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="DataElementData" type="xs:string">
		<xs:annotation>
			<xs:documentation>Contains a CDATA block with the Base64 encoded representation of the data.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DataElementList">
		<xs:annotation>
			<xs:documentation>A list of data elements.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="DataElement" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="DataElementMetaData" type="xs:string">
		<xs:annotation>
			<xs:documentation>Per data element semantic metadata, probably in RDF.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="MyGridDataDocument">
		<xs:annotation>
			<xs:documentation>Top level container for a collection of data within the myGrid framework.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="MyGridDocumentMetadata"/>
				<xs:element ref="PartialOrder"/>
			</xs:sequence>
			<xs:attribute name="mimetype" type="xs:string" use="required" default="TEXT/PLAIN"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="MyGridDocumentMetadata" type="xs:string">
		<xs:annotation>
			<xs:documentation>Semantic metadata that is valid for the complete document as opposed to that which only applies to single data elements within it.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PartialOrder">
		<xs:annotation>
			<xs:documentation>A partially ordered set of data within the document, this contains either a set of data elements or a set of partial orders, allowing arbitrary recursion.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="RelationList" minOccurs="0"/>
				<xs:choice>
					<xs:element ref="DataElementList"/>
					<xs:element ref="PartialOrderList"/>
				</xs:choice>
			</xs:sequence>
			<xs:attribute name="type" type="xs:string" use="required" default="partialorder"/>
			<xs:attribute name="index" type="xs:int" use="required" default="0"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="PartialOrderList">
		<xs:annotation>
			<xs:documentation>A list of partial orders.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="PartialOrder" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Relation">
		<xs:annotation>
			<xs:documentation>Defines a single ordering relation between two elements, referencing elements by integer index.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="parent" type="xs:int" use="required"/>
			<xs:attribute name="child" type="xs:int" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="RelationList">
		<xs:annotation>
			<xs:documentation>Where present, this defines one or more relations between elements in the partial order it is a child of. If absent then there are no relations explicitly defined, although the type of the partial order can override this; if the type is 'list' then there is an implicit ordering by integer index.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Relation" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>
