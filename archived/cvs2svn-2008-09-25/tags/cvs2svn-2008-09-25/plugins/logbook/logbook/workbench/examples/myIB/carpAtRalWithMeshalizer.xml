<?xml version="1.0" encoding="UTF-8"?>
<s:scufl xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha" version="0.2" log="0">
  <s:workflowdescription lsid="" author="" title="" />
  <s:processor name="ptsFile" boring="true">
    <s:stringconstant critical="true">input/TBunnyC4.pts</s:stringconstant>
  </s:processor>
  <s:processor name="modFile" boring="true">
    <s:stringconstant critical="true">input/TBunnyC4.mod</s:stringconstant>
  </s:processor>
  <s:processor name="downloadvmSmallgbGz">
    <gria-download critical="true" />
  </s:processor>
  <s:processor name="ttlonFile" boring="true">
    <s:stringconstant critical="true">input/TBunnyC4.ttlon</s:stringconstant>
  </s:processor>
  <s:processor name="vmSmallgbGzFile" boring="true">
    <s:stringconstant critical="true">vm_small.igb.gz</s:stringconstant>
  </s:processor>
  <s:processor name="iPtsFile" boring="true">
    <s:stringconstant critical="true">TBunnyC4_i.pts</s:stringconstant>
  </s:processor>
  <s:processor name="iBndTriFile" boring="true">
    <s:stringconstant critical="true">TBunnyC4_i_bnd.tri</s:stringconstant>
  </s:processor>
  <s:processor name="downloadIPts">
    <gria-download critical="true" />
  </s:processor>
  <s:processor name="tetrasFile" boring="true">
    <s:stringconstant critical="true">input/TBunnyC4.tetras</s:stringconstant>
  </s:processor>
  <s:processor name="downloadIBndTri">
    <gria-download critical="true" />
  </s:processor>
  <s:processor name="meshalyzerInvoker">
    <s:beanshell>
      <s:scriptvalue>command=new String("meshalyzer "+IGBData+" "+VectorData+" "+Data);
proc=Runtime.getRuntime().exec(command);
error=proc.getErrorStream();
reader=new BufferedReader(new InputStreamReader(error));
if ((tmp=reader.readLine())!=null)err=tmp;
else err=new String("No errors");
error.close();</s:scriptvalue>
      <s:beanshellinputlist>
        <s:beanshellinput s:syntactictype="'text/plain'">IGBData</s:beanshellinput>
        <s:beanshellinput s:syntactictype="'text/plain'">VectorData</s:beanshellinput>
        <s:beanshellinput s:syntactictype="'text/plain'">Data</s:beanshellinput>
      </s:beanshellinputlist>
      <s:beanshelloutputlist>
        <s:beanshelloutput s:syntactictype="'text/plain'">err</s:beanshelloutput>
      </s:beanshelloutputlist>
    </s:beanshell>
  </s:processor>
  <s:processor name="modifiedSmallParFile" boring="true">
    <s:stringconstant>modifiedSmall.par</s:stringconstant>
  </s:processor>
  <s:processor name="smallParFile" boring="true">
    <s:stringconstant critical="true">input/small.par</s:stringconstant>
  </s:processor>
  <s:processor name="writeSmallPar">
    <s:local>net.sourceforge.taverna.scuflworkers.io.TextFileWriter</s:local>
  </s:processor>
  <s:processor name="readSmallPar">
    <s:local breakpoint="true">net.sourceforge.taverna.scuflworkers.io.TextFileReader</s:local>
  </s:processor>
  <s:processor name="Upload4">
    <gria-upload critical="true">
      <upload-settings openAuth="false" serviceProvider="https://isegserv.itd.rl.ac.uk/GRIA/services/">
        <stager>
          <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">create-new</policy>
          <existing alias="" id="" portName="">
            <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">id</policy>
          </existing>
        </stager>
        <allocation>
          <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">create-new</policy>
          <existing alias="" id="" port-name="">
            <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">auto</policy>
          </existing>
          <new alias="">
            <requirements download-data-volume="10485760" memory="1073741824" rel-machine-performance="1.0" store-data-volume="1073741824" upload-data-volume="10485760" work="0.0">
              <duration days="0" hours="0" milliSeconds="0" minutes="30" seconds="0" />
            </requirements>
            <lifetime xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">outlive</lifetime>
            <account alias="" id="">
              <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">auto</policy>
            </account>
          </new>
        </allocation>
      </upload-settings>
    </gria-upload>
  </s:processor>
  <s:processor name="Upload3">
    <gria-upload critical="true">
      <upload-settings openAuth="false" serviceProvider="https://isegserv.itd.rl.ac.uk/GRIA/services/">
        <stager>
          <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">create-new</policy>
          <existing alias="" id="" portName="">
            <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">id</policy>
          </existing>
        </stager>
        <allocation>
          <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">create-new</policy>
          <existing alias="" id="" port-name="">
            <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">auto</policy>
          </existing>
          <new alias="">
            <requirements download-data-volume="10485760" memory="1073741824" rel-machine-performance="1.0" store-data-volume="1073741824" upload-data-volume="10485760" work="0.0">
              <duration days="0" hours="0" milliSeconds="0" minutes="30" seconds="0" />
            </requirements>
            <lifetime xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">outlive</lifetime>
            <account alias="" id="">
              <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">auto</policy>
            </account>
          </new>
        </allocation>
      </upload-settings>
    </gria-upload>
  </s:processor>
  <s:processor name="Upload1">
    <gria-upload critical="true">
      <upload-settings openAuth="false" serviceProvider="https://isegserv.itd.rl.ac.uk/GRIA/services/">
        <stager>
          <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">create-new</policy>
          <existing alias="" id="" portName="">
            <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">id</policy>
          </existing>
        </stager>
        <allocation>
          <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">create-new</policy>
          <existing alias="" id="" port-name="">
            <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">auto</policy>
          </existing>
          <new alias="">
            <requirements download-data-volume="10485760" memory="1073741824" rel-machine-performance="1.0" store-data-volume="1073741824" upload-data-volume="10485760" work="0.0">
              <duration days="0" hours="0" milliSeconds="0" minutes="30" seconds="0" />
            </requirements>
            <lifetime xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">outlive</lifetime>
            <account alias="" id="">
              <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">auto</policy>
            </account>
          </new>
        </allocation>
      </upload-settings>
    </gria-upload>
  </s:processor>
  <s:processor name="Upload">
    <gria-upload critical="true">
      <upload-settings openAuth="false" serviceProvider="https://isegserv.itd.rl.ac.uk/GRIA/services/">
        <stager>
          <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">create-new</policy>
          <existing alias="" id="" portName="">
            <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">id</policy>
          </existing>
        </stager>
        <allocation>
          <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">create-new</policy>
          <existing alias="" id="" port-name="">
            <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">auto</policy>
          </existing>
          <new alias="">
            <requirements download-data-volume="10485760" memory="1073741824" rel-machine-performance="1.0" store-data-volume="1073741824" upload-data-volume="10485760" work="0.0">
              <duration days="0" hours="0" milliSeconds="0" minutes="30" seconds="0" />
            </requirements>
            <lifetime xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">terminate</lifetime>
            <account alias="" id="">
              <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">auto</policy>
            </account>
          </new>
        </allocation>
      </upload-settings>
    </gria-upload>
  </s:processor>
  <s:processor name="Upload2">
    <gria-upload critical="true">
      <upload-settings openAuth="false" serviceProvider="https://isegserv.itd.rl.ac.uk/GRIA/services/">
        <stager>
          <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">create-new</policy>
          <existing alias="" id="" portName="">
            <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">id</policy>
          </existing>
        </stager>
        <allocation>
          <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">create-new</policy>
          <existing alias="" id="" port-name="">
            <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">auto</policy>
          </existing>
          <new alias="">
            <requirements download-data-volume="10485760" memory="1073741824" rel-machine-performance="1.0" store-data-volume="1073741824" upload-data-volume="10485760" work="0.0">
              <duration days="0" hours="0" milliSeconds="0" minutes="30" seconds="0" />
            </requirements>
            <lifetime xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">outlive</lifetime>
            <account alias="" id="">
              <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">auto</policy>
            </account>
          </new>
        </allocation>
      </upload-settings>
    </gria-upload>
  </s:processor>
  <s:processor name="carp">
    <gria-job critical="true">
      <application name="http://it-innovation.soton.ac.uk/grid/imagemagick/carp" version="1.0.0">
        <description>Carp description</description>
        <input name="smallPar" type="any">
          <description>Any input file</description>
        </input>
        <input name="pts" type="any">
          <description>Any input file</description>
        </input>
        <input name="mod" type="any">
          <description>Any input file</description>
        </input>
        <input name="tetras" type="any">
          <description>Any input file</description>
        </input>
        <input name="ttlon" type="any">
          <description>Any input file</description>
        </input>
        <output name="gmonOut" type="any">
          <description>Any ouptut file</description>
        </output>
        <output name="memDat" type="any">
          <description>Any ouptut file</description>
        </output>
        <output name="timesDat" type="any">
          <description>Any ouptut file</description>
        </output>
        <output name="vmSmallIgbGz" type="any">
          <description>Any ouptut file</description>
        </output>
        <output name="vmSmallTdat" type="any">
          <description>Any ouptut file</description>
        </output>
        <output name="eBndNrml" type="any">
          <description>Any ouptut file</description>
        </output>
        <output name="eBndTri" type="any">
          <description>Any ouptut file</description>
        </output>
        <output name="iBndNrml" type="any">
          <description>Any ouptut file</description>
        </output>
        <output name="iBndTri" type="any">
          <description>Any ouptut file</description>
        </output>
        <output name="iPts" type="any">
          <description>Any ouptut file</description>
        </output>
        <output name="iTetras" type="any">
          <description>Any ouptut file</description>
        </output>
      </application>
      <settings openAuth="false">
        <application name="http://it-innovation.soton.ac.uk/grid/imagemagick/carp" service-provider="https://isegserv.itd.rl.ac.uk/GRIA/services/" version="1.0.0" />
        <command-line cmd="" port-name="">
          <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">static</policy>
        </command-line>
        <job cpu-seconds="200.0" />
        <allocation>
          <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">create-new</policy>
          <existing alias="" id="" port-name="">
            <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">auto</policy>
          </existing>
          <new alias="">
            <requirements download-data-volume="31457280" memory="1073741824" rel-machine-performance="1.0" store-data-volume="31457280" upload-data-volume="31457280" work="600.0">
              <duration days="0" hours="0" milliSeconds="0" minutes="30" seconds="0" />
            </requirements>
            <lifetime xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">terminate</lifetime>
            <account alias="" id="">
              <policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="java:java.lang.String">auto</policy>
            </account>
          </new>
        </allocation>
      </settings>
    </gria-job>
  </s:processor>
  <s:processor name="iBndNrmlFile" boring="true">
    <s:stringconstant>TBunnyC4_i_bnd.nrml</s:stringconstant>
  </s:processor>
  <s:processor name="downloadIBndNrml">
    <gria-download />
  </s:processor>
  <s:processor name="iTetrasFile" boring="true">
    <s:stringconstant>TBunnyC4_i.tetras</s:stringconstant>
  </s:processor>
  <s:processor name="downloadITetras">
    <gria-download />
  </s:processor>
  <s:link source="Upload:dataStager" sink="carp:smallPar" />
  <s:link source="Upload1:dataStager" sink="carp:pts" />
  <s:link source="Upload2:dataStager" sink="carp:mod" />
  <s:link source="Upload3:dataStager" sink="carp:tetras" />
  <s:link source="Upload4:dataStager" sink="carp:ttlon" />
  <s:link source="ptsFile:value" sink="Upload1:localFile" />
  <s:link source="modFile:value" sink="Upload2:localFile" />
  <s:link source="tetrasFile:value" sink="Upload3:localFile" />
  <s:link source="ttlonFile:value" sink="Upload4:localFile" />
  <s:link source="carp:vmSmallIgbGz" sink="downloadvmSmallgbGz:dataStager" />
  <s:link source="vmSmallgbGzFile:value" sink="downloadvmSmallgbGz:localFile" />
  <s:link source="iBndTriFile:value" sink="downloadIBndTri:localFile" />
  <s:link source="iPtsFile:value" sink="downloadIPts:localFile" />
  <s:link source="carp:iPts" sink="downloadIPts:dataStager" />
  <s:link source="carp:iBndTri" sink="downloadIBndTri:dataStager" />
  <s:link source="smallParFile:value" sink="readSmallPar:fileurl" />
  <s:link source="readSmallPar:filecontents" sink="writeSmallPar:filecontents" />
  <s:link source="modifiedSmallParFile:value" sink="writeSmallPar:outputFile" />
  <s:link source="modifiedSmallParFile:value" sink="Upload:localFile" />
  <s:link source="iBndTriFile:value" sink="meshalyzerInvoker:VectorData" />
  <s:link source="vmSmallgbGzFile:value" sink="meshalyzerInvoker:IGBData" />
  <s:link source="iPtsFile:value" sink="meshalyzerInvoker:Data" />
  <s:link source="iBndNrmlFile:value" sink="downloadIBndNrml:localFile" />
  <s:link source="carp:iBndNrml" sink="downloadIBndNrml:dataStager" />
  <s:link source="iTetrasFile:value" sink="downloadITetras:localFile" />
  <s:link source="carp:iTetras" sink="downloadITetras:dataStager" />
  <s:coordination name="Upload_BLOCKON_writeSmallPar">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>writeSmallPar</s:target>
    </s:condition>
    <s:action>
      <s:target>Upload</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
  <s:coordination name="meshalyzerInvoker_BLOCKON_downloadvmSmallgbGz">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>downloadvmSmallgbGz</s:target>
    </s:condition>
    <s:action>
      <s:target>meshalyzerInvoker</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
  <s:coordination name="meshalyzerInvoker_BLOCKON_downloadIBndTri">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>downloadIBndTri</s:target>
    </s:condition>
    <s:action>
      <s:target>meshalyzerInvoker</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
  <s:coordination name="meshalyzerInvoker_BLOCKON_downloadIPts">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>downloadIPts</s:target>
    </s:condition>
    <s:action>
      <s:target>meshalyzerInvoker</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
  <s:coordination name="meshalyzerInvoker_BLOCKON_downloadITetras">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>downloadITetras</s:target>
    </s:condition>
    <s:action>
      <s:target>meshalyzerInvoker</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
</s:scufl>


