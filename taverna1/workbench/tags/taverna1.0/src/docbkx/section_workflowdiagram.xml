<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<section id="workflow_diagram">
  <title>Workflow diagram</title>

  <para>This component provides a read only configurable view of the workflow
  in graphical form. Workflow inputs, outputs and processors appear as
  coloured boxes with arrows between them to represent data and control links.
  Options are available to configure the layout and level of detail shown and
  the resultant diagram may be saved to disc in a number of different formats.
  It is intended to allow a quick visual overview of the structure of a
  workflow.</para>

  <para>Taverna 1.3 onwards has a view driven by an underlying Scalable Vector
  Graphic (SVG) representation along with the ability to display nested
  workflows inline in the main diagram.</para>

  <section id="diagram_toolbar">
    <title>Toolbar</title>

    <para>The toolbar consists of two sets of items.</para>

    <itemizedlist>
      <listitem>
        <para>Save Diagram ... as</para>

        <itemizedlist>
          <listitem>
            <para>Dot format text</para>
          </listitem>

          <listitem>
            <para>Portable Network Graphics format image</para>
          </listitem>

          <listitem>
            <para>Scalable Vector Graphics format image</para>
          </listitem>

          <listitem>
            <para>Postscript (PS)</para>
          </listitem>

          <listitem>
            <para>Postscript for PDF</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <para>Refresh</para>
      </listitem>

      <listitem>
        <para>Configure Diagram</para>
      </listitem>
    </itemizedlist>

    <section id="diagram_save">
      <title>Diagram Save Options</title>

      <para>All saved files will have the same layout, port display, alignment
      and type display as the current visible image. They will not, however,
      be scaled in any way. The various options are to save as dot format text
      (the native format used internally and by GraphViz from AT&amp;T
      research), PNG image (a bitmap graphic format suitable for web pages,
      Word documents etc) and SVG (a vector graphic format, preferable if you
      have tools such as Adobe Illustrator which can work with it as there is
      no loss of detail from scaling, particularly suitable therefore for
      posters).</para>

      <para>Selecting any of the save options will display a file chooser in a
      format appropriate to your operating system. You will need to add the
      appropriate file extension yourself, saving dot files as .text, png as
      .png and svg as .svg appropriately.</para>
    </section>
  </section>

  <section id="diagram_config">
    <title>Diagram configuration</title>

    <para>The appearance of the diagram is controlled from the 'Configure
    diagram' drop down menu.</para>

    <screenshot>
      <screeninfo></screeninfo>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/configure_workflow_diagram.png" />
        </imageobject>
      </mediaobject>
    </screenshot>
  </section>

  <section id="diagram_show_types">
    <title>Show types</title>

    <para>This checkbox determines whether the diagram should include
    information about the MIME types and collection structures being
    transferred between processors in the workflow. The image below shows the
    diagram panel displaying a workflow with no port information, vertical
    layout and no types.</para>

    <screenshot>
      <screeninfo></screeninfo>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/diagram_show_types.png" />
        </imageobject>
      </mediaobject>
    </screenshot>

    <para>If the <emphasis role="bold">'Show types'</emphasis> checkbox is
    selected the display changes to the following:</para>

    <screenshot>
      <screeninfo></screeninfo>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/diagram_show_types2.png" />
        </imageobject>
      </mediaobject>
    </screenshot>

    <para>Each solid dark arrow (a data link) has two types. The upper of
    these is the type of information flowing out of the output of the
    processor the link is from, the lower that of the input the link is to. In
    most cases these will be identical, for example in the case of the link
    between processors <emphasis role="bold">'RunMSDStructureCheck'</emphasis>
    and <emphasis role="bold">'StructureCheck'</emphasis> the type is plain
    text at both ends of the link. If the input and output types are the same
    Taverna will only display the string once. If they are radically different
    (i.e. requiring iteration or aggregation) they will be displayed in red.
    </para>
  </section>

  <section id="diagram_expanding_nested">
    <title>Expanding nested workflows</title>

    <para>A nested workflow processor represents a workflow as a component
    within a higher level workflow. In the diagram above the red processor is
    a workflow in its own right - to show the contents of this workflow inline
    within the diagram you should check the 'Expand nested workflows' option
    in the diagram configuration. The view should change to something like the
    following:</para>

    <screenshot>
      <screeninfo></screeninfo>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/expanding_nested_workflows.png" />
        </imageobject>
      </mediaobject>
    </screenshot>
  </section>

  <section id="diagram_boring">
    <title>Hide boring processors</title>

    <para>With large workflows the diagram displays can become unwieldy. One
    partial solution is to mark a subset of the processors, particularly those
    with no scientific impact upon the workflow, as boring. These can then be
    hidden in the diagram and workflow enactment status views leading to a
    simpler graph. Processors can be flagged as boring or not by right
    clicking on the processor concerned in the model explorer and selecting
    the appropriate option. The diagram views have acquired an additional
    check box, if the 'show boring' option is deselected those processors
    flagged as such will not appear. Note that by default string constants are
    marked as boring:</para>

    <screenshot>
      <screeninfo></screeninfo>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/hide_boring_processors.png" />
        </imageobject>
      </mediaobject>
    </screenshot>
  </section>

  <section id="diagram_ports">
    <title>Port display section</title>

    <para>Diagram views can have one of five settings for port display. The
    two images above were generated with no ports shown; this is useful to get
    a view of the overall structure of the workflow. It is not possible to see
    exactly where the data links are connecting - the processors <emphasis
    role="bold">'RunMSDStructureCheck'</emphasis> and the workflow input
    <emphasis role="bold">'AccessionList'</emphasis> both feed into <emphasis
    role="bold">'StructureCheck'</emphasis> but there is no indication as to
    which inputs they connect to. This additional information can be enabled
    by selecting either 'All ports' or 'Bound ports' from the drop down
    list:</para>

    <screenshot>
      <screeninfo></screeninfo>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/diagram_display_ports.png" />
        </imageobject>
      </mediaobject>
    </screenshot>

    <para>Data links now connect explicitly to particular inputs and outputs,
    in this vertical view the outputs of each processor are below the
    processor name and the inputs above. The <emphasis role="bold">'Bound
    ports'</emphasis> view shows only ports which are the subject of a data
    link. Switching to the <emphasis role="bold">'All ports'</emphasis> view
    shows all processor inputs and outputs whether used or not. This view is
    often rather unwieldy when processors have upwards of forty inputs (this
    is not uncommon). For layout reasons the default alignment switches to
    <emphasis role="bold">'Horizontal'</emphasis> when this is
    selected.</para>

    <screenshot>
      <screeninfo></screeninfo>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/diagram_horizontal.png" />
        </imageobject>
      </mediaobject>
    </screenshot>

    <para>The unused port <emphasis role="bold">'previous_result'</emphasis>
    on <emphasis role="bold">'StructureCheck'</emphasis> is now
    visible.</para>

    <para>The two 'blob' options hide more information, not only do they not
    display input and output port names but they also hide names of
    processors. Using the 'Blobs' option results in something resembling art
    deco, we suggest that the 'Blobs + names' is probably more useful! This
    will only show the names of nested workflows (if expanded), workflow
    inputs and outputs, and processors which have either no inputs or no
    outputs (and are therefore probably interesting). An example is shown
    below:</para>

    <screenshot>
      <screeninfo></screeninfo>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/diagram_blobs.png" />
        </imageobject>
      </mediaobject>
    </screenshot>
  </section>

  <section id="diagram_alignment">
    <title>Alignment control</title>

    <para>The default alignment shows workflow inputs at the top of the
    diagram, outputs at the bottom with data therefore always flowing from top
    to bottom. For some diagram views the layout is better with data flowing
    from left to right, this can be selected by choosing the <emphasis
    role="bold">'Horizontal'</emphasis> alignment option from the drop down
    menu.</para>
  </section>

  <section id="diagram_navigation">
    <title>Image navigation, where the '<emphasis>Fit to window
    checkbox</emphasis>' gone?</title>

    <para>By default when you generate a diagram it
    will be scaled to the available space. You can pan and zoom around the
    figure by holding <emphasis role="bold">shift</emphasis> and dragging to
    pan, <emphasis role="bold">ctrl</emphasis> and drag the mouse to zoom
    (keys apply to Windows version). To regenerate the scaled display you can
    select the same port option again, this will force a regeneration of the
    interface and scale the diagram to the available space. This replaces the
    'Fit to window' option (not to mention being a lot faster) and is also
    used for the SVG result renderer. </para>
  </section>

  <section id="diagram_processor_colours">
    <title>Processor colours</title>

    <para>Colour is used both in the diagram and explorer views to denote the
    service architecture behind each processor. The diagram below shows a
    workflow including examples of each different processor type (excluding
    the biomart based operations):</para>

    <screenshot>
      <screeninfo></screeninfo>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/diagram_processor_colours.png" />
        </imageobject>
      </mediaobject>
    </screenshot>

    <para>The eight different processor types in this workflow (and four not
    shown) are as follows:</para>

    <screenshot>
      <screeninfo></screeninfo>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/table_processor_colours.png" />
        </imageobject>
      </mediaobject>
    </screenshot>
  </section>
</section>