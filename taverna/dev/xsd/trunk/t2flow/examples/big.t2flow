<workflow xmlns="http://taverna.sf.net/2008/xml/t2flow">
	<dataflow id="c004542f-554a-434b-b815-e5599a48dba7" role="top">
		<name>getworkflowsfrommyExperiment</name>
		<inputPorts />
		<outputPorts>
			<port>
				<name>out</name>
			</port>
			<port>
				<name>blah</name>
			</port>
			<port>
				<name>kl</name>
			</port>
			<port>
				<name>lk</name>
			</port>
			<port>
				<name>ll</name>
			</port>
		</outputPorts>
		<processors>
			<processor>
				<name>Generate_page_numbers</name>
				<inputPorts>
					<port>
						<name>number_of_pages</name>
						<depth>0</depth>
					</port>
				</inputPorts>
				<outputPorts>
					<port>
						<name>numbers</name>
						<depth>1</depth>
						<granularDepth>0</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>beanshell-activity</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity
						</class>
						<inputMap>
							<map from="number_of_pages" to="number_of_pages" />
						</inputMap>
						<outputMap>
							<map from="numbers" to="numbers" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean
								xmlns="">
								<script><![CDATA[
								List numbers = new ArrayList();
									for (int i = 1; i &lt;= new Integer(number_of_pages); i++) {
    numbers.add(i+"");
}]]>
								</script>
								<dependencies />
								<inputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>java.lang.String
										</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
										<name>number_of_pages</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/plain'</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
								</inputs>
								<outputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
										<granularDepth>0</granularDepth>
										<name>numbers</name>
										<depth>1</depth>
										<mimeTypes>
											<string>'text/plain'</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
								</outputs>
							</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean>
						</configBean>
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig
								xmlns="">
								<maxJobs>1</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig
								xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>0</initialDelay>
								<maxDelay>0</maxDelay>
								<maxRetries>0</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy>
							<cross>
								<port name="number_of_pages" depth="0" />
							</cross>
						</strategy>
					</iteration>
				</iterationStrategyStack>
			</processor>
			<processor>
				<name>Get_individual_workflow_description
				</name>
				<inputPorts>
					<port>
						<name>url</name>
						<depth>0</depth>
					</port>
				</inputPorts>
				<outputPorts>
					<port>
						<name>contents</name>
						<depth>0</depth>
						<granularDepth>0</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>localworker-activity</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.activities.localworker.LocalworkerActivity
						</class>
						<inputMap>
							<map from="url" to="url" />
						</inputMap>
						<outputMap>
							<map from="contents" to="contents" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean
								xmlns="">
								<script><![CDATA[URL inputURL = null;
									if (base != void) {
									inputURL = new
									URL(new URL(base), url);
									}
									else {
									inputURL = new URL(url);
									}
									URLConnection con = inputURL.openConnection();
									InputStream in =
									con.getInputStream();

									InputStreamReader isr = new
									InputStreamReader(in);
									Reader inReader = new
									BufferedReader(isr);

									StringBuffer buf = new StringBuffer();
									int
									ch;
									while ((ch = inReader.read()) &gt; -1) {
  buf.append((char)ch);
}
inReader.close();
contents = buf.toString();


//String NEWLINE = System.getProperty("line.separator");
//
//URL inputURL = null;
//if (base != void) {
//	inputURL = new URL(new URL(base), url);
//} else {
//	inputURL = new URL(url);
//}
//StringBuffer result = new StringBuffer();
//BufferedReader reader = new BufferedReader(new InputStreamReader(inputURL.openStream()));
//String line = null;
//while ((line = reader.readLine()) != null) {
//	result.append(line);
//	result.append(NEWLINE);
//}
//
//contents = result.toString();
]]>
								</script>
								<dependencies />
								<inputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>java.lang.String
										</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
										<name>url</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/x-taverna-web-url'
											</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>java.lang.String
										</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
										<name>base</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/x-taverna-web-url'
											</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
								</inputs>
								<outputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
										<granularDepth>0</granularDepth>
										<name>contents</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/plain,text/html'</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
								</outputs>
							</net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean>
						</configBean>
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig
								xmlns="">
								<maxJobs>1</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig
								xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>0</initialDelay>
								<maxDelay>0</maxDelay>
								<maxRetries>0</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy>
							<port name="url" depth="0" />
						</strategy>
					</iteration>
				</iterationStrategyStack>
			</processor>
			<processor>
				<name>Extract_workflow_url</name>
				<inputPorts>
					<port>
						<name>xpath</name>
						<depth>0</depth>
					</port>
					<port>
						<name>xmltext</name>
						<depth>0</depth>
					</port>
				</inputPorts>
				<outputPorts>
					<port>
						<name>nodelist</name>
						<depth>1</depth>
						<granularDepth>0</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>localworker-activity</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.activities.localworker.LocalworkerActivity
						</class>
						<inputMap>
							<map from="xpath" to="xpath" />
							<map from="xmltext" to="xmltext" />
						</inputMap>
						<outputMap>
							<map from="nodelist" to="nodelist" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean
								xmlns="">
								<script><![CDATA[import org.dom4j.Document;
									import org.dom4j.Node;
									import org.dom4j.io.SAXReader;

									SAXReader reader = new SAXReader(false);
									reader.setIncludeInternalDTDDeclarations(false);
									reader.setIncludeExternalDTDDeclarations(false);

									Document document = reader.read(new StringReader(xmltext));
									List nodelist = document.selectNodes(xpath);

									// Process the elements in the nodelist
									ArrayList outputList = new ArrayList();
									ArrayList outputXmlList = new ArrayList();

									String val = null;
									String xmlVal = null;
									for (Iterator iter = nodelist.iterator(); iter.hasNext();) {
									Node element = (Node) iter.next();
									xmlVal = element.asXML();
									val = element.getStringValue();
									if (val != null &amp;&amp; !val.equals("")) {
		outputList.add(val);
		outputXmlList.add(xmlVal);
	}

}

List nodelist=outputList;
List nodelistAsXML=outputXmlList;]]></script>
								<dependencies />
								<inputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>java.lang.String
										</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
										<name>xpath</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/plain'</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>java.lang.String
										</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
										<name>xmltext</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/xml'</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
								</inputs>
								<outputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
										<granularDepth>0</granularDepth>
										<name>nodelist</name>
										<depth>1</depth>
										<mimeTypes>
											<string>l('text/plain')</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
										<granularDepth>0</granularDepth>
										<name>nodelistAsXML</name>
										<depth>1</depth>
										<mimeTypes>
											<string>l('text/plain')</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
								</outputs>
							</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean>
						</configBean>
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig
								xmlns="">
								<maxJobs>1</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig
								xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>0</initialDelay>
								<maxDelay>0</maxDelay>
								<maxRetries>0</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy>
							<cross>
								<port name="xpath" depth="0" />
								<port name="xmltext" depth="0" />
							</cross>
						</strategy>
					</iteration>
				</iterationStrategyStack>
			</processor>
			<processor>
				<name>Extract_workflow_description
				</name>
				<inputPorts>
					<port>
						<name>xpath</name>
						<depth>0</depth>
					</port>
					<port>
						<name>xmltext</name>
						<depth>0</depth>
					</port>
				</inputPorts>
				<outputPorts>
					<port>
						<name>nodelist</name>
						<depth>1</depth>
						<granularDepth>0</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>localworker-activity</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.activities.localworker.LocalworkerActivity
						</class>
						<inputMap>
							<map from="xpath" to="xpath" />
							<map from="xmltext" to="xmltext" />
						</inputMap>
						<outputMap>
							<map from="nodelist" to="nodelist" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean
								xmlns="">
								<script><![CDATA[import org.dom4j.Document;
import org.dom4j.Node;
import org.dom4j.io.SAXReader;

SAXReader reader = new SAXReader(false);
reader.setIncludeInternalDTDDeclarations(false);
reader.setIncludeExternalDTDDeclarations(false);

Document document = reader.read(new StringReader(xmltext));
List nodelist = document.selectNodes(xpath);

// Process the elements in the nodelist
ArrayList outputList = new ArrayList();
ArrayList outputXmlList = new ArrayList();

String val = null;
String xmlVal = null;
for (Iterator iter = nodelist.iterator(); iter.hasNext();) {
	Node element = (Node) iter.next();
	xmlVal = element.asXML();
	val = element.getStringValue();
	if (val != null &amp;&amp; !val.equals("")) {
		outputList.add(val);
		outputXmlList.add(xmlVal);
	}

}

List nodelist=outputList;
List nodelistAsXML=outputXmlList;]]></script>
								<dependencies />
								<inputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>java.lang.String
										</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
										<name>xpath</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/plain'</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>java.lang.String
										</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
										<name>xmltext</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/xml'</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
								</inputs>
								<outputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
										<granularDepth>0</granularDepth>
										<name>nodelist</name>
										<depth>1</depth>
										<mimeTypes>
											<string>l('text/plain')</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
										<granularDepth>0</granularDepth>
										<name>nodelistAsXML</name>
										<depth>1</depth>
										<mimeTypes>
											<string>l('text/plain')</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
								</outputs>
							</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean>
						</configBean>
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig
								xmlns="">
								<maxJobs>1</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig
								xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>0</initialDelay>
								<maxDelay>0</maxDelay>
								<maxRetries>0</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy>
							<cross>
								<port name="xpath" depth="0" />
								<port name="xmltext" depth="0" />
							</cross>
						</strategy>
					</iteration>
				</iterationStrategyStack>
			</processor>
			<processor>
				<name>Get_workflows</name>
				<inputPorts>
					<port>
						<name>url</name>
						<depth>0</depth>
					</port>
				</inputPorts>
				<outputPorts>
					<port>
						<name>contents</name>
						<depth>0</depth>
						<granularDepth>0</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>localworker-activity</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.activities.localworker.LocalworkerActivity
						</class>
						<inputMap>
							<map from="url" to="url" />
						</inputMap>
						<outputMap>
							<map from="contents" to="contents" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean
								xmlns="">
								<script><![CDATA[URL inputURL = null;
if (base != void) {
  inputURL = new URL(new URL(base), url);
}
else {
  inputURL = new URL(url);
}
URLConnection con = inputURL.openConnection();
InputStream in = con.getInputStream();

InputStreamReader isr = new InputStreamReader(in);
Reader inReader = new BufferedReader(isr);

StringBuffer buf = new StringBuffer();
int ch;
while ((ch = inReader.read()) &gt; -1) {
  buf.append((char)ch);
}
inReader.close();
contents = buf.toString();


//String NEWLINE = System.getProperty("line.separator");
//
//URL inputURL = null;
//if (base != void) {
//	inputURL = new URL(new URL(base), url);
//} else {
//	inputURL = new URL(url);
//}
//StringBuffer result = new StringBuffer();
//BufferedReader reader = new BufferedReader(new InputStreamReader(inputURL.openStream()));
//String line = null;
//while ((line = reader.readLine()) != null) {
//	result.append(line);
//	result.append(NEWLINE);
//}
//
//contents = result.toString();
]]>
								</script>
								<dependencies />
								<inputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>java.lang.String
										</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
										<name>url</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/x-taverna-web-url'
											</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>java.lang.String
										</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
										<name>base</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/x-taverna-web-url'
											</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
								</inputs>
								<outputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
										<granularDepth>0</granularDepth>
										<name>contents</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/plain,text/html'</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
								</outputs>
							</net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean>
						</configBean>
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig
								xmlns="">
								<maxJobs>1</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig
								xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>0</initialDelay>
								<maxDelay>0</maxDelay>
								<maxRetries>0</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy>
							<port name="url" depth="0" />
						</strategy>
					</iteration>
				</iterationStrategyStack>
			</processor>
			<processor>
				<name>Flatten_list</name>
				<inputPorts>
					<port>
						<name>inputlist</name>
						<depth>2</depth>
					</port>
				</inputPorts>
				<outputPorts>
					<port>
						<name>outputlist</name>
						<depth>1</depth>
						<granularDepth>1</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>localworker-activity</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.activities.localworker.LocalworkerActivity
						</class>
						<inputMap>
							<map from="inputlist" to="inputlist" />
						</inputMap>
						<outputMap>
							<map from="outputlist" to="outputlist" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean
								xmlns="">
								<script><![CDATA[flatten(inputs, outputs, depth) {
									for (i = inputs.iterator(); i.hasNext();) {
									element = i.next();
									if (element instanceof Collection &amp;&amp; depth &gt; 0) {
			flatten(element, outputs, depth - 1);
		} else {
			outputs.add(element);
		}
	}
}

outputlist = new ArrayList();

flatten(inputlist, outputlist, 1);]]></script>
								<dependencies />
								<inputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>[B</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
										<name>inputlist</name>
										<depth>2</depth>
										<mimeTypes>
											<string>l(l(''))</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
								</inputs>
								<outputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
										<granularDepth>1</granularDepth>
										<name>outputlist</name>
										<depth>1</depth>
										<mimeTypes>
											<string>l('')</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
								</outputs>
							</net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean>
						</configBean>
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig
								xmlns="">
								<maxJobs>1</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig
								xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>0</initialDelay>
								<maxDelay>0</maxDelay>
								<maxRetries>0</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy>
							<port name="inputlist" depth="2" />
						</strategy>
					</iteration>
				</iterationStrategyStack>
			</processor>
			<processor>
				<name>Create_workflows_url</name>
				<inputPorts>
					<port>
						<name>string2</name>
						<depth>0</depth>
					</port>
					<port>
						<name>string1</name>
						<depth>0</depth>
					</port>
				</inputPorts>
				<outputPorts>
					<port>
						<name>output</name>
						<depth>0</depth>
						<granularDepth>0</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>localworker-activity</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.activities.localworker.LocalworkerActivity
						</class>
						<inputMap>
							<map from="string1" to="string1" />
							<map from="string2" to="string2" />
						</inputMap>
						<outputMap>
							<map from="output" to="output" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean
								xmlns="">
								<script>output = string1 + string2;</script>
								<dependencies />
								<inputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>java.lang.String
										</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
										<name>string1</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/plain'</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>java.lang.String
										</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
										<name>string2</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/plain'</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
								</inputs>
								<outputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
										<granularDepth>0</granularDepth>
										<name>output</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/plain'</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
								</outputs>
							</net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean>
						</configBean>
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig
								xmlns="">
								<maxJobs>1</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig
								xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>0</initialDelay>
								<maxDelay>0</maxDelay>
								<maxRetries>0</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy>
							<cross>
								<port name="string1" depth="0" />
								<port name="string2" depth="0" />
							</cross>
						</strategy>
					</iteration>
				</iterationStrategyStack>
			</processor>
			<processor>
				<name>Get_individual_workflow</name>
				<inputPorts>
					<port>
						<name>url</name>
						<depth>0</depth>
					</port>
				</inputPorts>
				<outputPorts>
					<port>
						<name>contents</name>
						<depth>0</depth>
						<granularDepth>0</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>localworker-activity</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.activities.localworker.LocalworkerActivity
						</class>
						<inputMap>
							<map from="url" to="url" />
						</inputMap>
						<outputMap>
							<map from="contents" to="contents" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean
								xmlns="">
								<script><![CDATA[URL inputURL = null;
									if (base != void) {
									inputURL = new URL(new URL(base), url);
									}
									else {
									inputURL = new URL(url);
									}
									URLConnection con = inputURL.openConnection();
									InputStream in = con.getInputStream();

									InputStreamReader isr = new InputStreamReader(in);
									Reader inReader = new BufferedReader(isr);

									StringBuffer buf = new StringBuffer();
									int ch;
									while ((ch = inReader.read()) &gt; -1) {
  buf.append((char)ch);
}
inReader.close();
contents = buf.toString();


//String NEWLINE = System.getProperty("line.separator");
//
//URL inputURL = null;
//if (base != void) {
//	inputURL = new URL(new URL(base), url);
//} else {
//	inputURL = new URL(url);
//}
//StringBuffer result = new StringBuffer();
//BufferedReader reader = new BufferedReader(new InputStreamReader(inputURL.openStream()));
//String line = null;
//while ((line = reader.readLine()) != null) {
//	result.append(line);
//	result.append(NEWLINE);
//}
//
//contents = result.toString();
]]>
								</script>
								<dependencies />
								<inputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>java.lang.String
										</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
										<name>url</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/x-taverna-web-url'
											</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>java.lang.String
										</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
										<name>base</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/x-taverna-web-url'
											</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
								</inputs>
								<outputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
										<granularDepth>0</granularDepth>
										<name>contents</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/plain,text/html'</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
								</outputs>
							</net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean>
						</configBean>
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig
								xmlns="">
								<maxJobs>1</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig
								xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>0</initialDelay>
								<maxDelay>0</maxDelay>
								<maxRetries>0</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy>
							<port name="url" depth="0" />
						</strategy>
					</iteration>
				</iterationStrategyStack>
			</processor>
			<processor>
				<name>Remove_non_scufl</name>
				<inputPorts>
					<port>
						<name>inList</name>
						<depth>1</depth>
					</port>
				</inputPorts>
				<outputPorts>
					<port>
						<name>outList</name>
						<depth>1</depth>
						<granularDepth>1</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>beanshell-activity</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity
						</class>
						<inputMap>
							<map from="inList" to="inList" />
						</inputMap>
						<outputMap>
							<map from="outList" to="outList" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean
								xmlns="">
								<script><![CDATA[List outList = new ArrayList();

									for (Iterator i = inList.iterator(); i.hasNext();) {
									String s = (String) i.next();
									if (s.indexOf("&lt;s:scufl") != -1) {
        outList.add(s);
    }
}]]></script>
								<dependencies />
								<inputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<handledReferenceSchemes />
										<translatedElementType>java.lang.String
										</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
										<name>inList</name>
										<depth>1</depth>
										<mimeTypes>
											<string>l('text/xml')</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
								</inputs>
								<outputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
										<granularDepth>1</granularDepth>
										<name>outList</name>
										<depth>1</depth>
										<mimeTypes>
											<string>l('text/xml')</string>
										</mimeTypes>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
								</outputs>
							</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean>
						</configBean>
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig
								xmlns="">
								<maxJobs>1</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig
								xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>0</initialDelay>
								<maxDelay>0</maxDelay>
								<maxRetries>0</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy>
							<port name="inList" depth="1" />
						</strategy>
					</iteration>
				</iterationStrategyStack>
			</processor>
			<processor>
				<name>Extract_workflow_url_xpath_defaultValue
				</name>
				<inputPorts />
				<outputPorts>
					<port>
						<name>value</name>
						<depth>0</depth>
						<granularDepth>0</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>stringconstant-activity
							</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.activities.stringconstant.StringConstantActivity
						</class>
						<inputMap />
						<outputMap>
							<map from="value" to="value" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean
								xmlns="">
								<value>//content-uri</value>
							</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean>
						</configBean>
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig
								xmlns="">
								<maxJobs>1</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig
								xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>0</initialDelay>
								<maxDelay>0</maxDelay>
								<maxRetries>0</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy>
							<cross />
						</strategy>
					</iteration>
				</iterationStrategyStack>
			</processor>
			<processor>
				<name>Extract_workflow_description_xpath_defaultValue
				</name>
				<inputPorts />
				<outputPorts>
					<port>
						<name>value</name>
						<depth>0</depth>
						<granularDepth>0</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>stringconstant-activity
							</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.activities.stringconstant.StringConstantActivity
						</class>
						<inputMap />
						<outputMap>
							<map from="value" to="value" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean
								xmlns="">
								<value>//@uri</value>
							</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean>
						</configBean>
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig
								xmlns="">
								<maxJobs>1</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig
								xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>0</initialDelay>
								<maxDelay>0</maxDelay>
								<maxRetries>0</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy>
							<cross />
						</strategy>
					</iteration>
				</iterationStrategyStack>
			</processor>
			<processor>
				<name>Create_workflows_url_string1_defaultValue
				</name>
				<inputPorts />
				<outputPorts>
					<port>
						<name>value</name>
						<depth>0</depth>
						<granularDepth>0</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>stringconstant-activity
							</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.activities.stringconstant.StringConstantActivity
						</class>
						<inputMap />
						<outputMap>
							<map from="value" to="value" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean
								xmlns="">
								<value>http://www.myexperiment.org/workflows.xml?page=
								</value>
							</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean>
						</configBean>
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig
								xmlns="">
								<maxJobs>1</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig
								xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>0</initialDelay>
								<maxDelay>0</maxDelay>
								<maxRetries>0</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy>
							<cross />
						</strategy>
					</iteration>
				</iterationStrategyStack>
			</processor>
			<processor>
				<name>pages</name>
				<inputPorts />
				<outputPorts>
					<port>
						<name>value</name>
						<depth>0</depth>
						<granularDepth>0</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>stringconstant-activity
							</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.activities.stringconstant.StringConstantActivity
						</class>
						<inputMap />
						<outputMap>
							<map from="value" to="value" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean
								xmlns="">
								<value>2</value>
							</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean>
						</configBean>
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig
								xmlns="">
								<maxJobs>5</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry
						</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig
								xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>1000</initialDelay>
								<maxDelay>5000</maxDelay>
								<maxRetries>3</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2</group>
							<artifact>workflowmodel-impl</artifact>
							<version>0.3-SNAPSHOT</version>
						</raven>
						<class>
							net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke
						</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy />
					</iteration>
				</iterationStrategyStack>
			</processor>
		</processors>
		<conditions />
		<datalinks>
			<datalink>
				<sink type="processor">
					<processor>Generate_page_numbers</processor>
					<port>number_of_pages</port>
				</sink>
				<source type="processor">
					<processor>pages</processor>
					<port>value</port>
				</source>
			</datalink>
			<datalink>
				<sink type="processor">
					<processor>Get_individual_workflow_description
					</processor>
					<port>url</port>
				</sink>
				<source type="processor">
					<processor>Extract_workflow_description
					</processor>
					<port>nodelist</port>
				</source>
			</datalink>
			<datalink>
				<sink type="processor">
					<processor>Extract_workflow_url</processor>
					<port>xpath</port>
				</sink>
				<source type="processor">
					<processor>Extract_workflow_url_xpath_defaultValue
					</processor>
					<port>value</port>
				</source>
			</datalink>
			<datalink>
				<sink type="processor">
					<processor>Extract_workflow_url</processor>
					<port>xmltext</port>
				</sink>
				<source type="processor">
					<processor>Get_individual_workflow_description
					</processor>
					<port>contents</port>
				</source>
			</datalink>
			<datalink>
				<sink type="processor">
					<processor>Extract_workflow_description
					</processor>
					<port>xpath</port>
				</sink>
				<source type="processor">
					<processor>Extract_workflow_description_xpath_defaultValue
					</processor>
					<port>value</port>
				</source>
			</datalink>
			<datalink>
				<sink type="processor">
					<processor>Extract_workflow_description
					</processor>
					<port>xmltext</port>
				</sink>
				<source type="processor">
					<processor>Get_workflows</processor>
					<port>contents</port>
				</source>
			</datalink>
			<datalink>
				<sink type="processor">
					<processor>Get_workflows</processor>
					<port>url</port>
				</sink>
				<source type="processor">
					<processor>Create_workflows_url</processor>
					<port>output</port>
				</source>
			</datalink>
			<datalink>
				<sink type="processor">
					<processor>Flatten_list</processor>
					<port>inputlist</port>
				</sink>
				<source type="processor">
					<processor>Get_individual_workflow
					</processor>
					<port>contents</port>
				</source>
			</datalink>
			<datalink>
				<sink type="processor">
					<processor>Create_workflows_url</processor>
					<port>string2</port>
				</sink>
				<source type="processor">
					<processor>Generate_page_numbers</processor>
					<port>numbers</port>
				</source>
			</datalink>
			<datalink>
				<sink type="processor">
					<processor>Create_workflows_url</processor>
					<port>string1</port>
				</sink>
				<source type="processor">
					<processor>Create_workflows_url_string1_defaultValue
					</processor>
					<port>value</port>
				</source>
			</datalink>
			<datalink>
				<sink type="processor">
					<processor>Get_individual_workflow
					</processor>
					<port>url</port>
				</sink>
				<source type="processor">
					<processor>Extract_workflow_url</processor>
					<port>nodelist</port>
				</source>
			</datalink>
			<datalink>
				<sink type="processor">
					<processor>Remove_non_scufl</processor>
					<port>inList</port>
				</sink>
				<source type="processor">
					<processor>Flatten_list</processor>
					<port>outputlist</port>
				</source>
			</datalink>
			<datalink>
				<sink type="dataflow">
					<port>out</port>
				</sink>
				<source type="processor">
					<processor>Remove_non_scufl</processor>
					<port>outList</port>
				</source>
			</datalink>
			<datalink>
				<sink type="dataflow">
					<port>blah</port>
				</sink>
				<source type="processor">
					<processor>Get_workflows</processor>
					<port>contents</port>
				</source>
			</datalink>
			<datalink>
				<sink type="dataflow">
					<port>kl</port>
				</sink>
				<source type="processor">
					<processor>Get_individual_workflow_description
					</processor>
					<port>contents</port>
				</source>
			</datalink>
			<datalink>
				<sink type="dataflow">
					<port>lk</port>
				</sink>
				<source type="processor">
					<processor>Create_workflows_url</processor>
					<port>output</port>
				</source>
			</datalink>
			<datalink>
				<sink type="dataflow">
					<port>ll</port>
				</sink>
				<source type="processor">
					<processor>Generate_page_numbers</processor>
					<port>numbers</port>
				</source>
			</datalink>
		</datalinks>
	</dataflow>
</workflow>