<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:cxf="http://cxf.apache.org/core"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
	http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
	http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
	http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">

	<description>
		The Taverna Server bean, plus supporting configuration.
	</description>

	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	<import resource="classpath:META-INF/cxf/cxf-extension-jaxrs-binding.xml" />

	<bean id="webapp" class="org.taverna.server.master.TavernaServerImpl">
		<property name="policy" ref="policy" />
		<property name="listenerFactory" ref="listenerFactory" />
		<property name="runFactory" ref="runFactory" />
		<property name="runStore" ref="runCatalog" />
		<property name="stateModel" ref="webapp.state" />
	</bean>

	<bean id="webapp.state" class="org.taverna.server.master.ManagementModel"
		init-method="load">
		<description>The initial state of the webapp.</description>
		<property name="logIncomingWorkflows" value="false" />
		<property name="allowNewWorkflowRuns" value="true" />
		<property name="logOutgoingExceptions" value="false" />
		<property name="persistenceManagerFactory" ref="pmf" />
	</bean>

	<!-- <import resource="example.xml"/>-->
	<import resource="localworker.xml" />

	<jaxws:endpoint id="master_SOAP" implementor="#webapp"
		address="/soap" />
	<jaxrs:server id="root_REST" address="/">
		<jaxrs:serviceBeans>
			<ref bean="root_facade" />
		</jaxrs:serviceBeans>
		<jaxrs:properties>
			<entry key="org.apache.cxf.endpoint.private" value="true" />
		</jaxrs:properties>
	</jaxrs:server>
	<jaxrs:server id="master_REST" address="/rest"
		staticSubresourceResolution="true">
		<jaxrs:serviceBeans>
			<ref bean="webapp" />
		</jaxrs:serviceBeans>
		<jaxrs:features>
			<!-- <cxf:logging /> -->
		</jaxrs:features>
		<jaxrs:providers>
			<ref bean="ExceptionProvider.BadPropertyValue" />
			<ref bean="ExceptionProvider.BadStateChange" />
			<ref bean="ExceptionProvider.FilesystemAccess" />
			<ref bean="ExceptionProvider.NoCreate" />
			<ref bean="ExceptionProvider.NoDestroy" />
			<ref bean="ExceptionProvider.NoListener" />
			<ref bean="ExceptionProvider.NoUpdate" />
			<ref bean="ExceptionProvider.UnknownRun" />
			<ref bean="ExceptionProvider.JAXBException" />
		</jaxrs:providers>
	</jaxrs:server>
	<bean id="ExceptionProvider.BadPropertyValue" class="org.taverna.server.master.rest.BadPropertyValueHandler">
		<property name="managementModel" ref="webapp.state" />
	</bean>
	<bean id="ExceptionProvider.BadStateChange" class="org.taverna.server.master.rest.BadStateChangeHandler">
		<property name="managementModel" ref="webapp.state" />
	</bean>
	<bean id="ExceptionProvider.FilesystemAccess" class="org.taverna.server.master.rest.FilesystemAccessHandler">
		<property name="managementModel" ref="webapp.state" />
	</bean>
	<bean id="ExceptionProvider.NoCreate" class="org.taverna.server.master.rest.NoCreateHandler">
		<property name="managementModel" ref="webapp.state" />
	</bean>
	<bean id="ExceptionProvider.NoDestroy" class="org.taverna.server.master.rest.NoDestroyHandler">
		<property name="managementModel" ref="webapp.state" />
	</bean>
	<bean id="ExceptionProvider.NoListener" class="org.taverna.server.master.rest.NoListenerHandler">
		<property name="managementModel" ref="webapp.state" />
	</bean>
	<bean id="ExceptionProvider.NoUpdate" class="org.taverna.server.master.rest.NoUpdateHandler">
		<property name="managementModel" ref="webapp.state" />
	</bean>
	<bean id="ExceptionProvider.UnknownRun" class="org.taverna.server.master.rest.UnknownRunHandler">
		<property name="managementModel" ref="webapp.state" />
	</bean>
	<bean id="ExceptionProvider.JAXBException" class="org.taverna.server.master.rest.JAXBExceptionHandler">
		<property name="managementModel" ref="webapp.state" />
	</bean>

	<!--
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.DerbyDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
			</list>
		</property>
	</bean>
	-->
    <!--
    <bean id="pmf"
        class="org.springframework.orm.jdo.LocalPersistenceManagerFactoryBean">
        <property name="jdoProperties">
            <props>
                <prop key="javax.jdo.PersistenceManagerFactoryClass">
                	org.jpox.PersistenceManagerFactoryImpl
                </prop>
                <prop key="javax.jdo.option.ConnectionURL">
                	jdbc:derby:tavernaserver;create=true
                </prop>
                <prop key="javax.jdo.option.ConnectionDriverName">
                	org.apache.derby.jdbc.EmbeddedDriver
                </prop>
                <prop key="javax.jdo.option.ConnectionUserName">
                	taverna
                </prop>
                <prop key="javax.jdo.option.ConnectionPassword" />
                <prop key="datanucleus.storeManagerType">
                	rdbms
                </prop>
                <prop key="org.jpox.autoCreateSchema">true</prop>
                <prop key="org.jpox.validateTables">false</prop>
                <prop key="org.jpox.validateConstraints">false</prop>
                <prop key="javax.jdo.option.NontransactionalRead">true</prop>
            </props>
        </property>
    </bean>
	-->
	<bean id="pmf" class="org.datanucleus.jdo.JDOPersistenceManagerFactory"
		destroy-method="close">
		<property name="connectionFactory" ref="dataSource" />
		<property name="nontransactionalRead" value="true" />
		<property name="persistenceProperties">
			<props>
				<prop key="datanucleus.storeManagerType">rdbms</prop>
				<prop key="datanucleus.autoCreateTables">true</prop>
				<prop key="datanucleus.autoCreateTables">true</prop>
				<prop key="datanucleus.validateTables">true</prop>
				<prop key="datanucleus.autoCreateColumns">true</prop>
				<prop key="datanucleus.autoCreateConstraints">true</prop>
				<prop key="datanucleus.validateConstraints">true</prop>
				<prop key="datanucleus.autoCreateSchema">true</prop>
			</props>
		</property>
	</bean>

	<!--
		TODO: control the location of the database properly, or move to JNDI
	-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.apache.derby.jdbc.EmbeddedDriver" />
		<property name="url" value="jdbc:derby:temp/tavernaserver;create=true" />
		<property name="username" value="taverna" />
		<property name="password" value="" />
	</bean>

	<bean id="root_facade" class="org.taverna.server.master.facade.Facade">
		<property name="file" value="welcome.html" />
		<property name="pattern" value="SERVICE_URI/" />
	</bean>

	<bean id="MBeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
		<property name="locateExistingServerIfPossible" value="true" />
	</bean>
	<context:mbean-export server="MBeanServer"
		default-domain="${my.domain}" />
</beans>
