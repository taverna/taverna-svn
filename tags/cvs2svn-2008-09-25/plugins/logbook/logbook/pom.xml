<?xml version="1.0" encoding="UTF-8"?>
<project>
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>uk.org.mygrid.provenance</groupId>
		<artifactId>logbook-parent</artifactId>
		<version>1.2</version>
	</parent>
	<name>Logbook RDF-backend</name>
	<groupId>uk.org.mygrid.provenance</groupId>
	<artifactId>logbook</artifactId>
	<version>1.2.10</version>
	<description>RDF-based Provenance for Taverna</description>
	<build>
		<sourceDirectory>src</sourceDirectory>
		<testSourceDirectory>test</testSourceDirectory>
		<extensions>
		</extensions>
		<resources>
			<resource>
				<directory>conf</directory>
			</resource>
			<resource>
				<directory>workbench/examples</directory>
			</resource>
			<resource>
				<directory>etc/ontology</directory>
			</resource>
			<resource>
				<directory>resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>test-resource</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<configuration>
							<tasks>
								<property name="ontology.dir"
									location="etc/ontology/" />
								<property name="ontology.dir.build"
									location="${ontology.dir}/build" />
								<property name="ontology.owl"
									value="provenance.owl" />
								<property name="ontology.vocab"
									value="ProvenanceVocab.java" />
								<property name="ontology.jena.dir"
									location="src/uk/ac/man/cs/img/mygrid/provenance/knowledge/ontology/jena" />
								<property name="package"
									value="uk.ac.man.cs.img.mygrid.provenance.knowledge" />
								<property name="package.dir"
									value="src/uk/ac/man/cs/img/mygrid/provenance/knowledge" />
								<mkdir dir="${ontology.dir.build}" />
								<java classname="jena.schemagen"
									dir="${ontology.dir.build}" fork="true">
									<classpath
										refid="maven.compile.classpath" />
									<arg
										line="-i ${ontology.owl} --uppercase --package ${package}.ontology.jena --classnamesuffix Vocab --ontology -o ${ontology.vocab}" />
								</java>
								<copy
									file="${ontology.dir.build}/${ontology.vocab}"
									todir="${ontology.jena.dir}" />

								<property name="ontology.java.dir"
									location="src/uk/ac/man/cs/img/mygrid/provenance/knowledge/ontology" />
								<java
									classname="org.apache.xalan.xslt.Process" dir="${ontology.dir}"
									fork="true">
									<classpath
										refid="maven.compile.classpath" />
									<arg
										line="-IN provenance.owl -XSL provenance.xsl -OUT ProvenanceOntologyConstants.java" />
								</java>
								<copy
									file="${ontology.dir}/ProvenanceOntologyConstants.java"
									todir="${ontology.java.dir}" />
							</tasks>
						</configuration>
						<goals>
							<!-- Uncomment to generate ProvenanceVocab and ProvenanceOntologyConstants from provenance.owl -->
							<!--<goal>run</goal>-->
							<!-- Also uncomment xalan dependency below -->
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.0.4</version>
		</dependency>
		<dependency>
			<groupId>uk.org.mygrid.resources</groupId>
			<artifactId>jena-full</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>uk.org.mygrid.resources</groupId>
			<artifactId>ng4j-full</artifactId>
			<version>cvs-20060704</version>
		</dependency>
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>1.8.0.1</version>
		</dependency>
		<dependency>
			<groupId>uk.org.mygrid.taverna</groupId>
			<artifactId>taverna-core</artifactId>
			<version>1.7.1.0</version>
		</dependency>
		<dependency>
			<groupId>uk.org.mygrid.taverna.baclava</groupId>
			<artifactId>baclava-core</artifactId>
			<version>1.7.1.0</version>
		</dependency>
		<dependency>
			<groupId>uk.org.mygrid.taverna</groupId>
			<artifactId>taverna-enactor</artifactId>
			<version>1.7.1.0</version>
		</dependency>
		<dependency>
			<groupId>uk.org.mygrid.taverna.scufl</groupId>
			<artifactId>scufl-ui</artifactId>
			<version>1.7.1.0</version>
		</dependency>
		<dependency>
			<groupId>
				uk.org.mygrid.taverna.scufl.scufl-ui-components
			</groupId>
			<artifactId>enactor-invocation</artifactId>
			<version>1.7.1.0</version>
		</dependency>
		<dependency>
			<groupId>uk.org.mygrid.taverna.scufl</groupId>
			<artifactId>scufl-tools</artifactId>
			<version>1.7.1.0</version>
		</dependency>
		<dependency>
			<groupId>uk.org.mygrid.taverna.baclava</groupId>
			<artifactId>baclava-lsid-client</artifactId>
			<version>1.7.1.0</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>uk.org.mygrid.taverna.processors</groupId>
			<artifactId>taverna-stringconstant-processor</artifactId>
			<version>1.7.1.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>uk.org.mygrid.taverna.processors</groupId>
			<artifactId>taverna-java-processor</artifactId>
			<version>1.7.1.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>uk.org.mygrid.taverna.processors</groupId>
			<artifactId>taverna-wsdl-processor</artifactId>
			<version>1.7.1.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>uk.org.mygrid.resources</groupId>
			<artifactId>lsid-client</artifactId>
			<version>1.1</version>
		</dependency>
		<!-- 
			<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
			<version>2.5.1</version>
			</dependency>
		-->
	</dependencies>
</project>
