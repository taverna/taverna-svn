package net.sf.taverna.t2.reference.impl;

import net.sf.taverna.t2.reference.T2ReferenceGenerator;

/**
 * Simple implementation of T2ReferenceGenerator intended to be injected into
 * the service layers for integration testing. Exposes a namespace property
 * which can be configured through spring and allocates local parts based on an
 * integer counter - this is only guaranteed to be unique within a single
 * instance of this object so isn't suitable for real production use. For proper
 * usage use an implementation tied to the backing store you're putting t2
 * reference objects into.
 * 
 * @author Tom Oinn
 * 
 */
public class SimpleT2ReferenceGenerator extends AbstractT2ReferenceGenerator implements T2ReferenceGenerator {

	private String namespace = "testNS";
	private String localPrefix = "test";
	private int counter = 0;

	/**
	 * Set the namespace for identifiers generated by this class as a string
	 * 
	 * @param newNamespace
	 *            the namespace to use
	 */
	public void setNamespace(String newNamespace) {
		this.namespace = newNamespace;
	}

	/**
	 * Get the namespace for identifiers generated by this class
	 */
	public String getNamespace() {
		return namespace;
	}

	@Override
	protected synchronized String getNextLocalPart() {
		return localPrefix + (counter++);
	}

}
