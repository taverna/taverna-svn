<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<section id="executeworkflow">
  <title>Executing a workflow without the GUI</title>

  <para>Distributed with Taverna is a utility script called
  <literal>executeworkflow.sh</literal> or
  <literal>executeworkflow.bat</literal> that allows a workflow to be executed
  outside of the Taverna workbench.</para>

  <note>
    <para>In Mac OS X, this script is located within the Taverna application.
    So if Taverna was installed to <literal>/Applications</literal>, you can
    invoke the script as:<screen>/Applications/Taverna.app/Contents/MacOS/executeworkflow.sh</screen></para>
  </note>

  <para>The minimum requirement is to provide the name, or URL, to the
  workflow scufl document. The default behaviour is to save the workflow
  results into a directory with the same name of the workflow appended with
  <literal>_output</literal>. Within this directory is store the progress
  report of the workflow, and additional directories that contain the actual
  results. These directories are named after the workflow output names. Be
  aware that existing results are automatically overwritten if they
  exist.</para>

  <para>Supplying inputs and modifying the default behaviour can be achieved
  with the following options.</para>

  <simplelist>
    <member><literal>-help</literal> displays this list of options.</member>

    <member><literal>-input</literal> <emphasis
    role="bold"><literal>name</literal></emphasis><literal>
    </literal><emphasis role="bold"><literal>filename</literal></emphasis>
    load a single value for the named input port from a file or URL.</member>

    <member><literal>-inputdoc</literal> <emphasis
    role="bold"><literal>filename</literal> </emphasis>load inputs from a
    Baclava XML document.</member>

    <member><literal>-outputdoc </literal><emphasis
    role="bold"><literal>filename</literal> </emphasis>save the outputs to a
    new Baclava XML document.</member>

    <member><literal>-output </literal><emphasis
    role="bold"><literal>directory</literal> </emphasis>save outputs as files
    in directory.</member>

    <member><literal>-report </literal><emphasis
    role="bold"><literal>filename</literal> </emphasis>save the progress
    report as an XML document.</member>
  </simplelist>

  <para>If outputs are stored as baclava data documents using
  <literal>-outputdoc</literal>, these results can be viewed graphically using
  the <firstterm>data viewer</firstterm> utility. This is used using the
  <literal>dataviewer</literal> script that can be found in the same location
  as <literal>executeworkflow</literal>.</para>

  <example id="executeworkflow_example">
    <title>Executeworkflow examples</title>

    <screen>executeworkflow myworkflow.xml

executeworkflow http://somewhere.org/myworkflow.xml

executeworkflow -input myinput myinput.txt myworkflow.xml

executeworkflow -input myinput http://somewhere.org/myinput.txt myworkflow.xml

executeworkflow -inputdoc inputs.xml myworkflow.xml

executeworkflow -output result_run1 myworkflow.xml</screen>
  </example>

  <para>Note that while the workflow is running you won't get much feedback
  about the progress of the workflow. Stack traces might or might not indicate
  an error, for instance a workflow with a processor that intentionally fails
  would produce a stack trace from the enactor even if the workflow itself did
  not fail. For more detailed log messages, explore
  <literal>log/taverna.log</literal> in your Taverna home directory.</para>

  <para>If you are interested in executing a workflow from within your own
  application you should also read the section <link
  linkend="executeworkflowprogram">Programmatically executing a
  workflow</link>.</para>
</section>