<?xml version="1.0" encoding="UTF-8"?>
<s:scufl xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha" version="0.2" log="0">
  <s:workflowdescription lsid="urn:lsid:www.mygrid.org.uk:operation:QV3KT6UT7P0" author="" title="" />
  <s:processor name="EchoAccessionList">
    <s:local>org.embl.ebi.escience.scuflworkers.java.EchoList</s:local>
  </s:processor>
  <s:processor name="EchoSequence">
    <s:local>org.embl.ebi.escience.scuflworkers.java.EchoList</s:local>
  </s:processor>
  <s:processor name="EchoRangeList">
    <s:local>org.embl.ebi.escience.scuflworkers.java.EchoList</s:local>
  </s:processor>
  <s:processor name="ClusterSequences">
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:www.mygrid.org.uk:operation:ZMKULXG0DQ549" author="" title="" />
        <s:processor name="Cluster">
          <s:beanshell>
            <s:scriptvalue>List accessions = new ArrayList();
accessions.add(new String ("P01978"));
accessions.add(new String ("P01977"));
accessions.add(new String ("P01979"));</s:scriptvalue>
            <s:beanshellinputlist>
              <s:beanshellinput s:syntactictype="'text/plain'">sequence</s:beanshellinput>
            </s:beanshellinputlist>
            <s:beanshelloutputlist>
              <s:beanshelloutput s:syntactictype="l('text/plain')">accessions</s:beanshelloutput>
            </s:beanshelloutputlist>
          </s:beanshell>
        </s:processor>
        <s:link source="ProteinSequence" sink="Cluster:sequence" />
        <s:link source="Cluster:accessions" sink="AccessionList" />
        <s:source name="ProteinSequence" />
        <s:sink name="AccessionList" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="GetMSDStructure">
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:www.mygrid.org.uk:operation:ZMKULXG0DQ142" author="" title="" />
        <s:processor name="RunMSDStructureCheck" boring="true">
          <s:stringconstant>true</s:stringconstant>
        </s:processor>
        <s:processor name="StructureCheck">
          <s:beanshell>
            <s:scriptvalue>result = new String(result);
data = new String(data);</s:scriptvalue>
            <s:beanshellinputlist>
              <s:beanshellinput s:syntactictype="'text/plain'">result</s:beanshellinput>
              <s:beanshellinput s:syntactictype="'text/plain'">data</s:beanshellinput>
            </s:beanshellinputlist>
            <s:beanshelloutputlist>
              <s:beanshelloutput s:syntactictype="'text/plain'">result</s:beanshelloutput>
              <s:beanshelloutput s:syntactictype="'text/plain'">data</s:beanshelloutput>
            </s:beanshelloutputlist>
          </s:beanshell>
        </s:processor>
        <s:link source="RunMSDStructureCheck:value" sink="StructureCheck:result" />
        <s:link source="AccessionList" sink="StructureCheck:data" />
        <s:link source="StructureCheck:result" sink="Result" />
        <s:link source="StructureCheck:data" sink="StructureData" />
        <s:source name="AccessionList" />
        <s:sink name="StructureData" />
        <s:sink name="Result" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="AnnotateSequence_xml">
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:www.mygrid.org.uk:operation:QV3KT6UT7P0" author="" title="" />
        <s:processor name="CreateChart">
          <s:beanshell>
            <s:scriptvalue>import org.jfree.chart.*;
import org.jfree.chart.plot.*;
import org.jfree.data.xy.*;
import java.io.*;

Iterator k = data.iterator();
XYSeriesCollection xds = new XYSeriesCollection();
for (Iterator j = accessions.iterator(); j.hasNext();) {
  List dataset = (List)k.next();
  String accession = (String)j.next();
  int count = 0;
  XYSeries series = new XYSeries(accession);
  for (Iterator i = dataset.iterator(); i.hasNext();) {
    String value = (String)i.next();
    Double doubleValue = new Double(value);
    series.add((double)++count,doubleValue.doubleValue()); 
  }
  xds.addSeries(series);
}

JFreeChart jfc = ChartFactory.createXYLineChart("Fold score",
					       "Residue",
					       "Score",
					       xds, PlotOrientation.VERTICAL, true, true, true);
panel = new ChartPanel(jfc);
ByteArrayOutputStream bos = new ByteArrayOutputStream();
ChartUtilities.writeChartAsPNG(bos, jfc, 800, 600);
image = bos.toByteArray();</s:scriptvalue>
            <s:beanshellinputlist>
              <s:beanshellinput s:syntactictype="l(l('text/plain'))">data</s:beanshellinput>
              <s:beanshellinput s:syntactictype="l('text/plain')">accessions</s:beanshellinput>
            </s:beanshellinputlist>
            <s:beanshelloutputlist>
              <s:beanshelloutput s:syntactictype="'text/plain'">panel</s:beanshelloutput>
              <s:beanshelloutput s:syntactictype="'image/png'">image</s:beanshelloutput>
            </s:beanshelloutputlist>
          </s:beanshell>
          <s:iterationstrategy>
            <i:dot xmlns:i="http://org.embl.ebi.escience/xscufliteration/0.1beta10">
              <i:iterator name="data" />
              <i:iterator name="accessions" />
            </i:dot>
          </s:iterationstrategy>
        </s:processor>
        <s:processor name="EchoSequenceList">
          <s:local>org.embl.ebi.escience.scuflworkers.java.EchoList</s:local>
        </s:processor>
        <s:processor name="EchoAccessionList">
          <s:local>org.embl.ebi.escience.scuflworkers.java.EchoList</s:local>
        </s:processor>
        <s:processor name="RunFoldIndex">
          <s:workflow>
            <s:scufl version="0.2" log="0">
              <s:workflowdescription lsid="urn:lsid:www.mygrid.org.uk:operation:QV3KT6UT7P0" author="" title="" />
              <s:processor name="ServerURL" boring="true">
                <s:stringconstant>http://bioportal.weizmann.ac.il/fldbin/findex?m=efam&amp;sq=</s:stringconstant>
              </s:processor>
              <s:processor name="Beanshell_scripting_host">
                <s:beanshell>
                  <s:scriptvalue>queryURL = new String(server + sequence);</s:scriptvalue>
                  <s:beanshellinputlist>
                    <s:beanshellinput s:syntactictype="'text/plain'">server</s:beanshellinput>
                    <s:beanshellinput s:syntactictype="'text/plain'">sequence</s:beanshellinput>
                  </s:beanshellinputlist>
                  <s:beanshelloutputlist>
                    <s:beanshelloutput s:syntactictype="'text/plain'">queryURL</s:beanshelloutput>
                  </s:beanshelloutputlist>
                </s:beanshell>
              </s:processor>
              <s:processor name="Get_web_page_from_URL">
                <s:local>org.embl.ebi.escience.scuflworkers.java.WebPageFetcher</s:local>
              </s:processor>
              <s:processor name="XPath_From_Text">
                <s:local>net.sourceforge.taverna.scuflworkers.xml.XPathTextWorker</s:local>
              </s:processor>
              <s:processor name="XPath" boring="true">
                <s:stringconstant>//returnsList</s:stringconstant>
              </s:processor>
              <s:link source="Sequence" sink="Beanshell_scripting_host:sequence" />
              <s:link source="ServerURL:value" sink="Beanshell_scripting_host:server" />
              <s:link source="Beanshell_scripting_host:queryURL" sink="Get_web_page_from_URL:url" />
              <s:link source="XPath_From_Text:nodelist" sink="FoldIndexXML" />
              <s:link source="XPath:value" sink="XPath_From_Text:xpath" />
              <s:link source="Get_web_page_from_URL:contents" sink="XPath_From_Text:xml-text" />
              <s:link source="XPath_From_Text:nodelistAsXML" sink="temp" />
              <s:source name="Sequence">
                <s:metadata>
                  <s:mimeTypes>
                    <s:mimeType>text/x-taverna-web-url</s:mimeType>
                  </s:mimeTypes>
                  <s:description>The accession is used to retrieve the sequence and features
from the UniProt DAS server.  It must be a valid UniProt 
accession number.</s:description>
                  <s:semanticType>http://www.mygrid.org.uk/ontology#task</s:semanticType>
                </s:metadata>
              </s:source>
              <s:sink name="FoldIndexXML" />
              <s:sink name="temp">
                <s:metadata>
                  <s:mimeTypes>
                    <s:mimeType>text/xml</s:mimeType>
                    <s:mimeType>text/html</s:mimeType>
                  </s:mimeTypes>
                </s:metadata>
              </s:sink>
            </s:scufl>
          </s:workflow>
        </s:processor>
        <s:processor name="SuperfamilyDAS_xml">
          <s:workflow>
            <s:scufl version="0.2" log="0">
              <s:workflowdescription lsid="urn:lsid:www.mygrid.org.uk:operation:QV3KT6UT7P0" author="" title="" />
              <s:processor name="ServerURL" boring="true">
                <s:stringconstant>http://www.supfam.org/SUPERFAMILY/cgi-bin/das/</s:stringconstant>
              </s:processor>
              <s:processor name="GetSuperfamilyData">
                <s:local>org.embl.ebi.escience.scuflworkers.java.WebPageFetcher</s:local>
              </s:processor>
              <s:processor name="XPath" boring="true">
                <s:stringconstant>//</s:stringconstant>
              </s:processor>
              <s:processor name="CreateQueryURL">
                <s:beanshell>
                  <s:scriptvalue>queryURL = new String(serverURL + command + identifier);</s:scriptvalue>
                  <s:beanshellinputlist>
                    <s:beanshellinput s:syntactictype="'text/plain'">serverURL</s:beanshellinput>
                    <s:beanshellinput s:syntactictype="'text/plain'">command</s:beanshellinput>
                    <s:beanshellinput s:syntactictype="'text/plain'">identifier</s:beanshellinput>
                  </s:beanshellinputlist>
                  <s:beanshelloutputlist>
                    <s:beanshelloutput s:syntactictype="'text/plain'">queryURL</s:beanshelloutput>
                  </s:beanshelloutputlist>
                </s:beanshell>
              </s:processor>
              <s:processor name="UniProtFeatureCommand" boring="true">
                <s:stringconstant>up/features?segment=</s:stringconstant>
              </s:processor>
              <s:processor name="XPath_From_Text">
                <s:local>net.sourceforge.taverna.scuflworkers.xml.XPathTextWorker</s:local>
              </s:processor>
              <s:link source="GetSuperfamilyData:contents" sink="XPath_From_Text:xml-text" />
              <s:link source="XPath_From_Text:nodelist" sink="SuperfamilyResult" />
              <s:link source="XPath:value" sink="XPath_From_Text:xpath" />
              <s:link source="GetSuperfamilyData:contents" sink="temp" />
              <s:link source="ServerURL:value" sink="CreateQueryURL:serverURL" />
              <s:link source="UniProtFeatureCommand:value" sink="CreateQueryURL:command" />
              <s:link source="Accession" sink="CreateQueryURL:identifier" />
              <s:link source="CreateQueryURL:queryURL" sink="GetSuperfamilyData:url" />
              <s:source name="Accession">
                <s:metadata>
                  <s:mimeTypes>
                    <s:mimeType>text/x-taverna-web-url</s:mimeType>
                  </s:mimeTypes>
                  <s:description>The accession is used to retrieve the sequence and features
from the UniProt DAS server.  It must be a valid UniProt 
accession number.</s:description>
                  <s:semanticType>http://www.mygrid.org.uk/ontology#task</s:semanticType>
                </s:metadata>
              </s:source>
              <s:sink name="SuperfamilyResult" />
              <s:sink name="temp">
                <s:metadata>
                  <s:mimeTypes>
                    <s:mimeType>text/xml</s:mimeType>
                  </s:mimeTypes>
                </s:metadata>
              </s:sink>
            </s:scufl>
          </s:workflow>
        </s:processor>
        <s:processor name="RunRONN">
          <s:workflow>
            <s:scufl version="0.2" log="0">
              <s:workflowdescription lsid="urn:lsid:www.mygrid.org.uk:operation:YKEW3Z5AQ60" author="" title="" />
              <s:processor name="ByteArrayToString">
                <s:beanshell>
                  <s:scriptvalue>result = new String(input);</s:scriptvalue>
                  <s:beanshellinputlist>
                    <s:beanshellinput s:syntactictype="'application/octet-stream'">input</s:beanshellinput>
                  </s:beanshellinputlist>
                  <s:beanshelloutputlist>
                    <s:beanshelloutput s:syntactictype="'text/plain'">result</s:beanshelloutput>
                  </s:beanshelloutputlist>
                </s:beanshell>
              </s:processor>
              <s:processor name="DisorderScoresXPath" boring="true">
                <s:stringconstant>/*/*/*[@type='fragment']/*/*/*/*[@property='foldScore']</s:stringconstant>
              </s:processor>
              <s:processor name="ExtractScores">
                <s:local>net.sourceforge.taverna.scuflworkers.xml.XPathTextWorker</s:local>
              </s:processor>
              <s:processor name="ronn">
                <s:arbitrarywsdl>
                  <s:wsdl>http://www.oppf.ox.ac.uk/wsdl/ronn_proxy.wsdl</s:wsdl>
                  <s:operation>ronn</s:operation>
                </s:arbitrarywsdl>
              </s:processor>
              <s:link source="ronn:result" sink="ByteArrayToString:input" />
              <s:link source="Protein Sequence" sink="ronn:sequence" />
              <s:link source="ByteArrayToString:result" sink="RONN Prediction" />
              <s:link source="DisorderScoresXPath:value" sink="ExtractScores:xpath" />
              <s:link source="ByteArrayToString:result" sink="ExtractScores:xml-text" />
              <s:link source="ExtractScores:nodelist" sink="RONNPrediction" />
              <s:source name="Protein Sequence" />
              <s:sink name="RONN Prediction">
                <s:metadata>
                  <s:mimeTypes>
                    <s:mimeType>text/xml</s:mimeType>
                  </s:mimeTypes>
                </s:metadata>
              </s:sink>
              <s:sink name="RONNPrediction" />
            </s:scufl>
          </s:workflow>
        </s:processor>
        <s:link source="RunRONN:RONN Prediction" sink="RONNXML" />
        <s:link source="CreateChart:image" sink="ChartImage" />
        <s:link source="UniProtAccession" sink="EchoAccessionList:inputlist" />
        <s:link source="EchoAccessionList:outputlist" sink="CreateChart:accessions" />
        <s:link source="RunRONN:RONNPrediction" sink="RONNScores" />
        <s:link source="RunRONN:RONNPrediction" sink="CreateChart:data" />
        <s:link source="RunFoldIndex:FoldIndexXML" sink="FoldIndex" />
        <s:link source="RunFoldIndex:temp" sink="temp" />
        <s:link source="EchoAccessionList:outputlist" sink="SuperfamilyDAS_xml:Accession" />
        <s:link source="SuperfamilyDAS_xml:temp" sink="SuperfamilyXML" />
        <s:link source="EchoSequenceList:outputlist" sink="RunRONN:Protein Sequence" />
        <s:link source="EchoSequenceList:outputlist" sink="RunFoldIndex:Sequence" />
        <s:link source="UniProtSequence" sink="EchoSequenceList:inputlist" />
        <s:link source="EchoSequenceList:outputlist" sink="Sequence" />
        <s:source name="UniProtAccession">
          <s:metadata>
            <s:mimeTypes>
              <s:mimeType>text/plain</s:mimeType>
            </s:mimeTypes>
            <s:description>The accession is used to retrieve the sequence and features
from the UniProt DAS server.  It must be a valid UniProt 
accession number.</s:description>
            <s:semanticType>http://www.mygrid.org.uk/ontology#task</s:semanticType>
          </s:metadata>
        </s:source>
        <s:source name="UniProtSequence" />
        <s:sink name="Sequence" />
        <s:sink name="RONNXML">
          <s:metadata>
            <s:mimeTypes>
              <s:mimeType>text/xml</s:mimeType>
            </s:mimeTypes>
          </s:metadata>
        </s:sink>
        <s:sink name="ChartImage" />
        <s:sink name="RONNScores" />
        <s:sink name="FoldIndex" />
        <s:sink name="temp" />
        <s:sink name="SuperfamilyXML" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="UniProtDAS">
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:www.mygrid.org.uk:operation:QV3KT6UT7P0" author="" title="" />
        <s:processor name="SequenceXPath" boring="true">
          <s:stringconstant>//SEQUENCE</s:stringconstant>
        </s:processor>
        <s:processor name="RemoveWhitespace">
          <s:beanshell>
            <s:scriptvalue>result = input.replaceAll("\\s","");</s:scriptvalue>
            <s:beanshellinputlist>
              <s:beanshellinput s:syntactictype="'text/plain'">input</s:beanshellinput>
            </s:beanshellinputlist>
            <s:beanshelloutputlist>
              <s:beanshelloutput s:syntactictype="'text/plain'">result</s:beanshelloutput>
            </s:beanshelloutputlist>
          </s:beanshell>
        </s:processor>
        <s:processor name="CreateQueryURLs">
          <s:description>build_queries creates two urls for querying the DAS server:
1) sequence_query, which returns the sequence/sub-sequence for the given identifier and range.
2) feature query, which returns the features for the requested sequence.

It takes five inputs:
1) identifier: 		a valid sequence identifier
2) range: 		an optional sub-sequence range
3) server_url: 		the location of the DAS server
4) sequence_cmd: 	the command for retrieving sequences
5) feature_cmd:	the command for retrieving features</s:description>
          <s:beanshell>
            <s:scriptvalue>query = new String(identifier);
if (range.length() &gt; 0) {
	query = query + ":" + range;
}

sequence_query = new String(server_url + sequence_cmd + query);
feature_query = new String(server_url + feature_cmd + query);</s:scriptvalue>
            <s:beanshellinputlist>
              <s:beanshellinput s:syntactictype="'text/plain'">server_url</s:beanshellinput>
              <s:beanshellinput s:syntactictype="'text/plain'">identifier</s:beanshellinput>
              <s:beanshellinput s:syntactictype="'text/plain'">range</s:beanshellinput>
              <s:beanshellinput s:syntactictype="'text/plain'">sequence_cmd</s:beanshellinput>
              <s:beanshellinput s:syntactictype="'text/plain'">feature_cmd</s:beanshellinput>
            </s:beanshellinputlist>
            <s:beanshelloutputlist>
              <s:beanshelloutput s:syntactictype="'text/plain'">sequence_query</s:beanshelloutput>
              <s:beanshelloutput s:syntactictype="'text/plain'">feature_query</s:beanshelloutput>
            </s:beanshelloutputlist>
          </s:beanshell>
          <s:iterationstrategy>
            <i:cross xmlns:i="http://org.embl.ebi.escience/xscufliteration/0.1beta10">
              <i:dot>
                <i:iterator name="identifier" />
                <i:iterator name="range" />
              </i:dot>
              <i:iterator name="server_url" />
              <i:iterator name="sequence_cmd" />
              <i:iterator name="feature_cmd" />
            </i:cross>
          </s:iterationstrategy>
        </s:processor>
        <s:processor name="SequenceCommand" boring="true">
          <s:stringconstant>sequence?segment=</s:stringconstant>
        </s:processor>
        <s:processor name="ServerURL" boring="true">
          <s:stringconstant>http://www.ebi.ac.uk/das-srv/uniprot/das/aristotle/</s:stringconstant>
        </s:processor>
        <s:processor name="FeatureCommand" boring="true">
          <s:stringconstant>features?segment=</s:stringconstant>
        </s:processor>
        <s:processor name="ExtractSequences">
          <s:local>net.sourceforge.taverna.scuflworkers.xml.XPathTextWorker</s:local>
        </s:processor>
        <s:processor name="FetchDASFeatures">
          <s:local>org.embl.ebi.escience.scuflworkers.java.WebPageFetcher</s:local>
        </s:processor>
        <s:processor name="Merge_string_list_to_string">
          <s:local>org.embl.ebi.escience.scuflworkers.java.StringListMerge</s:local>
        </s:processor>
        <s:processor name="FetchDASSequence">
          <s:local>org.embl.ebi.escience.scuflworkers.java.WebPageFetcher</s:local>
        </s:processor>
        <s:processor name="RemoveSequenceDTD">
          <s:workflow>
            <s:scufl version="0.2" log="0">
              <s:workflowdescription lsid="urn:lsid:www.mygrid.org.uk:operation:QV3KT6UT7P0" author="" title="" />
              <s:processor name="RemoveInvalidDTD">
                <s:beanshell>
                  <s:scriptvalue>string = new String(xml).replaceFirst("&lt;.DOCTYPE[^&gt;]+&gt;","");</s:scriptvalue>
                  <s:beanshellinputlist>
                    <s:beanshellinput s:syntactictype="'text/xml'">xml</s:beanshellinput>
                  </s:beanshellinputlist>
                  <s:beanshelloutputlist>
                    <s:beanshelloutput s:syntactictype="'text/plain'">string</s:beanshelloutput>
                  </s:beanshelloutputlist>
                </s:beanshell>
              </s:processor>
              <s:link source="XML_Input" sink="RemoveInvalidDTD:xml" />
              <s:link source="RemoveInvalidDTD:string" sink="XML_Output" />
              <s:source name="XML_Input" />
              <s:sink name="XML_Output" />
            </s:scufl>
          </s:workflow>
        </s:processor>
        <s:processor name="RemoveFeatureDTD">
          <s:workflow>
            <s:scufl version="0.2" log="0">
              <s:workflowdescription lsid="urn:lsid:www.mygrid.org.uk:operation:QV3KT6UT7P0" author="" title="" />
              <s:processor name="RemoveInvalidDTD">
                <s:beanshell>
                  <s:scriptvalue>string = new String(xml).replaceFirst("&lt;.DOCTYPE[^&gt;]+&gt;","");</s:scriptvalue>
                  <s:beanshellinputlist>
                    <s:beanshellinput s:syntactictype="'text/xml'">xml</s:beanshellinput>
                  </s:beanshellinputlist>
                  <s:beanshelloutputlist>
                    <s:beanshelloutput s:syntactictype="'text/plain'">string</s:beanshelloutput>
                  </s:beanshelloutputlist>
                </s:beanshell>
              </s:processor>
              <s:link source="XML_Input" sink="RemoveInvalidDTD:xml" />
              <s:link source="RemoveInvalidDTD:string" sink="XML_Output" />
              <s:source name="XML_Input" />
              <s:sink name="XML_Output" />
            </s:scufl>
          </s:workflow>
        </s:processor>
        <s:link source="Range" sink="CreateQueryURLs:range" />
        <s:link source="Accession" sink="CreateQueryURLs:identifier" />
        <s:link source="ServerURL:value" sink="CreateQueryURLs:server_url" />
        <s:link source="CreateQueryURLs:sequence_query" sink="SequenceURL" />
        <s:link source="CreateQueryURLs:feature_query" sink="FeaturesURL" />
        <s:link source="SequenceCommand:value" sink="CreateQueryURLs:sequence_cmd" />
        <s:link source="FeatureCommand:value" sink="CreateQueryURLs:feature_cmd" />
        <s:link source="SequenceXPath:value" sink="ExtractSequences:xpath" />
        <s:link source="CreateQueryURLs:sequence_query" sink="FetchDASSequence:url" />
        <s:link source="RemoveWhitespace:result" sink="Sequence" />
        <s:link source="CreateQueryURLs:feature_query" sink="FetchDASFeatures:url" />
        <s:link source="FetchDASSequence:contents" sink="RemoveSequenceDTD:XML_Input" />
        <s:link source="RemoveSequenceDTD:XML_Output" sink="SequenceXML" />
        <s:link source="RemoveSequenceDTD:XML_Output" sink="ExtractSequences:xml-text" />
        <s:link source="FetchDASFeatures:contents" sink="RemoveFeatureDTD:XML_Input" />
        <s:link source="RemoveFeatureDTD:XML_Output" sink="FeaturesXML" />
        <s:link source="ExtractSequences:nodelist" sink="Merge_string_list_to_string:stringlist" />
        <s:link source="Merge_string_list_to_string:concatenated" sink="RemoveWhitespace:input" />
        <s:source name="Range">
          <s:metadata>
            <s:description>The range is used to retrieve a subset of amino acids for a sequence.  The 
DAS server will return a subset of both amino acids and sequence features.

Format:	&lt;start residue&gt;,&lt;end residue&gt;
Example:	1,100</s:description>
          </s:metadata>
        </s:source>
        <s:source name="Accession">
          <s:metadata>
            <s:description>The accession is used to retrieve the sequence and features
from the UniProt DAS server.  It must be a valid UniProt 
accession number.</s:description>
            <s:semanticType>http://www.mygrid.org.uk/ontology#task</s:semanticType>
          </s:metadata>
        </s:source>
        <s:sink name="SequenceURL" />
        <s:sink name="FeaturesURL" />
        <s:sink name="SequenceXML">
          <s:metadata>
            <s:mimeTypes>
              <s:mimeType>text/xml</s:mimeType>
            </s:mimeTypes>
          </s:metadata>
        </s:sink>
        <s:sink name="Sequence" />
        <s:sink name="FeaturesXML">
          <s:metadata>
            <s:mimeTypes>
              <s:mimeType>text/html</s:mimeType>
            </s:mimeTypes>
          </s:metadata>
        </s:sink>
      </s:scufl>
    </s:workflow>
    <s:iterationstrategy>
      <i:dot xmlns:i="http://org.embl.ebi.escience/xscufliteration/0.1beta10">
        <i:iterator name="Accession" />
        <i:iterator name="Range" />
      </i:dot>
    </s:iterationstrategy>
  </s:processor>
  <s:processor name="StructureExists">
    <s:local>org.embl.ebi.escience.scuflworkers.java.FailIfTrue</s:local>
  </s:processor>
  <s:link source="UniProtDAS:FeaturesXML" sink="Features" />
  <s:link source="Accession" sink="EchoAccessionList:inputlist" />
  <s:link source="EchoAccessionList:outputlist" sink="UniProtDAS:Accession" />
  <s:link source="AnnotateSequence_xml:Sequence" sink="Sequence" />
  <s:link source="AnnotateSequence_xml:RONNXML" sink="RONNXML" />
  <s:link source="AnnotateSequence_xml:ChartImage" sink="ChartImage" />
  <s:link source="AnnotateSequence_xml:RONNScores" sink="RONNScores" />
  <s:link source="AnnotateSequence_xml:FoldIndex" sink="FoldIndex" />
  <s:link source="AnnotateSequence_xml:temp" sink="temp" />
  <s:link source="AnnotateSequence_xml:SuperfamilyXML" sink="SuperfamilyXML" />
  <s:link source="EchoSequence:outputlist" sink="AnnotateSequence_xml:UniProtSequence" />
  <s:link source="UniProtDAS:Sequence" sink="EchoSequence:inputlist" />
  <s:link source="EchoAccessionList:outputlist" sink="AnnotateSequence_xml:UniProtAccession" />
  <s:link source="EchoSequence:outputlist" sink="ClusterSequences:ProteinSequence" />
  <s:link source="ClusterSequences:AccessionList" sink="clusterlist" />
  <s:link source="Range" sink="EchoRangeList:inputlist" />
  <s:link source="EchoRangeList:outputlist" sink="UniProtDAS:Range" />
  <s:link source="ClusterSequences:AccessionList" sink="GetMSDStructure:AccessionList" />
  <s:link source="GetMSDStructure:StructureData" sink="StructureData" />
  <s:link source="GetMSDStructure:Result" sink="StructureExists:test" />
  <s:source name="Range">
    <s:metadata>
      <s:mimeTypes>
        <s:mimeType>text/plain</s:mimeType>
      </s:mimeTypes>
      <s:description>The range is used to retrieve a subset of amino acids for a sequence.  The 
DAS server will return a subset of both amino acids and sequence features.

Format:	&lt;start residue&gt;,&lt;end residue&gt;
Example:	1,100</s:description>
    </s:metadata>
  </s:source>
  <s:source name="Accession">
    <s:metadata>
      <s:mimeTypes>
        <s:mimeType>text/plain</s:mimeType>
      </s:mimeTypes>
      <s:description>The accession is used to retrieve the sequence and features
from the UniProt DAS server.  It must be a valid UniProt 
accession number.</s:description>
      <s:semanticType>http://www.mygrid.org.uk/ontology#task</s:semanticType>
    </s:metadata>
  </s:source>
  <s:sink name="Sequence" />
  <s:sink name="Features" />
  <s:sink name="RONNXML">
    <s:metadata>
      <s:mimeTypes>
        <s:mimeType>text/xml</s:mimeType>
      </s:mimeTypes>
    </s:metadata>
  </s:sink>
  <s:sink name="ChartImage" />
  <s:sink name="RONNScores" />
  <s:sink name="FoldIndex" />
  <s:sink name="temp" />
  <s:sink name="SuperfamilyXML" />
  <s:sink name="clusterlist" />
  <s:sink name="StructureData" />
  <s:coordination name="AnnotateSequence_xml_BLOCKON_Fail_if_true">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>StructureExists</s:target>
    </s:condition>
    <s:action>
      <s:target>AnnotateSequence_xml</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
</s:scufl>


