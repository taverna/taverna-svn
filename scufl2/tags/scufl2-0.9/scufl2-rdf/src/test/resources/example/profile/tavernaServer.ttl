@base <tavernaServer/> .
@prefix beanshell: <http://ns.taverna.org.uk/2010/taverna/activities/beanshell#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix scufl2: <http://ns.taverna.org.uk/2010/scufl2#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .


<.>
   a scufl2:Profile;
    scufl2:name "tavernaWorkbench" ;
    dc:description """A profile for invoking the workflow on a Taverna Server""" ;
    dc:creator "Stian Soiland-Reyes" ;
    dc:date "2010-07-29" ;
    scufl2:processorBinding <binding/Hello> ;
    scufl2:activatesConfiguration <configuration/Hello> ;
    scufl2:recommendsEnvironment [
        # Not really any need to give a URI to this specialized
        # environment
        a scufl2:Environment;
        scufl2:workflowProduct <http://ns.taverna.org.uk/2010/taverna/server/>;
        scufl2:os <http://www.ubuntu.com/#10.04>;
        dc:title "Taverna server installed on Ubuntu"
    ] ;
    scufl2:requiresEnvironment [
        a scufl2:Environment;  
        scufl2:product <http://ns.taverna.org.uk/2010/taverna/>;
        scufl2:plugin beanshell:plugin;
        dc:description """
            BioConductor installed in R, and Rserve running
            on port 1234. x64 but architecture.
        """;
        # There's not really any agreed URIs for Windows/Linux/etc
        # .. but at least the scufl:os and :software URIs can be clickable
        # for a browser. A GUI could simply say:
        #
        #   This workflow execution profile requires/recommends:
        #           OS: [x] Ubuntu Linux (10.04)
        #     Software: [x] http://www.r-project.org/
        #               [x] http://www.rforge.net/Rserve/
        #               [ ] http://www.bioconductor.org/
        #   Tick for software you have installed.
        #
        scufl2:software <http://www.r-project.org/#2.11>;
        scufl2:software <http://www.rforge.net/Rserve/>;
        scufl2:software <http://www.bioconductor.org/>;
        scufl2:architecture <http://www.intel.org/x64>
    ] .

<http://www.ubuntu.com/#10.04> 
    scufl2:version "10.04";
    dc:title "Ubuntu Linux".  

<binding/Hello> a scufl2:ProcessorBinding ;
    scufl2:boundProcessor <../../workflow/HelloWorld/processor/Hello/> ;
    scufl2:boundActivity <activity/HelloScript/> ;
    scufl2:inputPortBinding [
        scufl2:bindsInputProcessorPort <../../workflow/HelloWorld/processor/Hello/in/name> ;
        scufl2:bindsInputActivityPort <activity/HelloScript/in/personName> 
    ] ;
    scufl2:outputPortBinding [
        scufl2:bindsOutputActivityPort <activity/HelloScript/out/hello> ;
        scufl2:bindsOutputProcessorPort <../../workflow/HelloWorld/processor/Hello/out/greeting>
    ] .
     

<activity/HelloScript/> a beanshell:Activity ;
    scufl2:inputActivityPort <activity/HelloScript/in/personName> ;
    scufl2:outputActivityPort <activity/HelloScript/out/hello> .

<activity/HelloScript/in/personName> a scufl2:InputActivityPort ;
    scufl2:name "personName";
    scufl2:portDepth 0 ;
    scufl2:granularPortDepth 0 .

<activity/HelloScript/out/hello> a scufl2:OutputActivityPort ;
    scufl2:name "hello";
    scufl2:portDepth 0 ;
    scufl2:granularPortDepth 0 .
       

<configuration/Hello> a beanshell:Configuration;
    scufl2:configures <activity/HelloScript/> ;
    beanshell:script """
        hello = "Hello, " + personName;
        System.out.println("Server says: " + hello);
    """ .


# Define possible configurations for a beanshell

beanshell:Activity a owl:Class;
    scufl2:configurationType beanshell:Configuration;
    rdfs:subClassOf scufl2:Activity .

beanshell:Configuration a owl:Class;
    rdfs:subClassOf scufl2:Configuration .
    
beanshell:script
    a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:domain beanshell:Configuration;
    rdfs:label "script" ;
    rdfs:range xsd:string ;
    scufl2:required true ;
    rdfs:subPropertyOf scufl2:script .



