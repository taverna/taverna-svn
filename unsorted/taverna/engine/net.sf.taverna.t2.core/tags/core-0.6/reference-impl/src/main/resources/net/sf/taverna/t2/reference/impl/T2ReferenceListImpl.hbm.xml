<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
                "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Hibernate mapping for T2ReferenceListImpl, used by HibernateListDao -->
<hibernate-mapping>
	<class name="net.sf.taverna.t2.reference.impl.T2ReferenceListImpl"
		abstract="false">
		<id name="internalId" column="id" type="string"/>
		<!--  Composite key constructed from the namespace and local -->
		<!--  parts of the T2Reference implementation type, used as  -->
		<!--  the foreign key in the one to many relationship with   -->
		<!--  extensions of AbstractExternalReference                -->
		<component name="typedId"
			class="net.sf.taverna.t2.reference.impl.T2ReferenceImpl">
			<property name="namespacePart" />
			<property name="localPart" />
			<property name="containsErrors" />
			<property name="depth" />
			<property name="referenceType" />
		</component>
		<list name="listContents" cascade="all" lazy="false">
			<key column="id"/>
			<list-index column="i" base="0" />
			<composite-element
				class="net.sf.taverna.t2.reference.impl.T2ReferenceImpl">
				<!-- Explicit column mapping otherwise we colide with the implict -->
				<!-- mapping used in the key columns. Oh the joys of composites.. -->
				<property name="namespacePart" column="c_namespace" />
				<property name="localPart" column="c_local" />
				<property name="containsErrors" column="c_errors" />
				<property name="depth" column="c_depth" />
				<property name="referenceType" column="c_type" />
			</composite-element>
		</list>
	</class>
</hibernate-mapping>