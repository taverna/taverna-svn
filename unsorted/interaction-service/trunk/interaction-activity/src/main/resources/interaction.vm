<!doctype html>
<html>
  <head>
      <meta charset="utf-8" />
      <title></title>
      <style>
      	html, body { height: 100%; width: 100%; margin: 0; border:0; }
      	#presentationFrame { height: 90%; width: 95%; margin: 0; border:0; frameborder:0; }
     	#acknowledgment { width: 95%; margin: 0; border:0; frameborder:0; background-color: #eeeb99; color: #555555; text-align:center; }
     	#acknowledgment p {padding: 10px;}
      </style>
       <script type="text/javascript" src="$pmrpcUrl"></script>
       
  </head>
  <body>
  
       <script type="text/javascript">
       
       var appendError = function(str){
         throw new Error("DEBUG: "+str)
       }

       function log(str){
         setTimeout("appendError('"+str+"')", 1)
       }
       
         function createReplyContent(status, results) {
           date = new Date();
           msg = "";
           msg += "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n";
           msg += "<entry xmlns=\"http://www.w3.org/2005/Atom\" xmlns:thr=\"http://purl.org/syndication/thread/1.0\">\n";
           msg += "<title>\"A reply to " + "$entryId" + "\"</title>\n";
           msg += "<id>" + "$entryId" + "-reply" + "</id>\n";
           msg += "<content/>\n";
           msg += "<interaction:run-id xmlns:interaction=\"http://ns.taverna.org.uk/2012/interaction\">" + "$runId" + "</interaction:run-id>\n";
           msg += "<interaction:in-reply-to  xmlns:interaction=\"http://ns.taverna.org.uk/2012/interaction\">" + "$entryId" + "</interaction:in-reply-to>\n";
           msg += "<interaction:result-status xmlns:interaction=\"http://ns.taverna.org.uk/2012/interaction\">";
           msg += escape(status);
           msg += "</interaction:result-status>";
           msg += "<interaction:result-data xmlns:interaction=\"http://ns.taverna.org.uk/2012/interaction\">\n";
		   msg += escape(results);
           msg += "</interaction:result-data>\n";
           msg += "</entry>\n";
           return msg;
         }

       // Copied from http://www.netlobo.com/url_query_string_javascript.html
       function getParameterValue( name )
	{
  	name = name.replace(/[\[]/,"\\\[").replace(/[\]]/,"\\\]");
  	var regexS = "[\\?&]"+name+"=([^&#]*)";
  	var regex = new RegExp( regexS );
  	var results = regex.exec( window.location.href );
  	if( results == null )
    	return "";
  	else
    	return results[1];
	}


         function reply(status, results) {
           msg = createReplyContent(status, JSON.stringify(results));
           xmlhttp = new XMLHttpRequest();
           xmlhttp.open("POST", "$feed", true);
           xmlhttp.onreadystatechange=function() {
//               alert(xmlhttp.responseText);
           }
           xmlhttp.setRequestHeader("Content-Type", "application/atom+xml;type=entry");
           xmlhttp.setRequestHeader("Content-Length", msg.length);
           xmlhttp.setRequestHeader("Slug", "$entryId" + "-reply");
           xmlhttp.send(msg);
           return false;
         }
         

	  function getDataFromUrl(url, type) {
	      var xmlhttp = new XMLHttpRequest();
	      xmlhttp.open("GET", url, false);
	      if (type != null) {
	      	xmlhttp.overrideMimeType(type);
	      }
	      xmlhttp.send();
	      if (xmlhttp.status != 200) {
	      	return '';
	      }
	      return xmlhttp.responseText;
	  }
	  
      function registerCalls() {
			pmrpc.register( {
         	  publicProcedureName : "reply",
         	  procedure : function(status, results) {
         	     reply(status, results);
         	     return "OK";
         	  }
           });
 
 			pmrpc.register( {
         	  publicProcedureName : "getParameterValue",
         	  procedure : function(parameterName) {
         	     return getParameterValue(parameterName);
         	  }
           });
         
           pmrpc.register( {
             publicProcedureName : "getInputData",
             procedure : function() {
               log("Returning input data");
               return JSON.parse('$inputData');
             }
           });
         
           pmrpc.register( {
             publicProcedureName : "getWorkflowRunId",
             procedure : function () {
               return '$runId';
             }
           });
 
         pmrpc.register( {
         	publicProcedureName : "setTitle",
         	procedure : function(title) {
         	   document.title = title;
         	   return "OK";
         	}
         });
         
         pmrpc.register( {
         	publicProcedureName : "getDataFromUrl",
         	procedure : function(url, type) {
         		return getDataFromUrl(url, type);
         	}
         });

         document.getElementById('presentationFrame').src = "$presentationUrl";
         document.title = 'Taverna interaction';
       }
       
       window.onload = function() {
           log("Interaction loaded");
           registerCalls();
           };
      
  	   </script>      
 
     <iframe id="presentationFrame" name="presentationFrame" src="about:blank">
</iframe>

     <div id="acknowledgment">
       <p>The interaction service was developed in the <a href="http://www.biovel.eu">BioVeL project</a></p>
     </div>
  </body>
</html>
