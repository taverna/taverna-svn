<?xml version="1.0" encoding="UTF-8"?>

<!-- An example application context that configures and builds a hibernate database -->
<!-- capable of storing all implementations of a particular SPI discovered through  -->
<!-- raven's SpiRegistry mechanism.                                                 -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:raven="http://taverna.sf.net/schema/artifact-support"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd 
	http://taverna.sf.net/schema/artifact-support 
	http://taverna.sf.net/schema/artifact-support/artifact-support.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<!-- Apache Derby rooted at a temporary directory -->
	<bean id="t2reference.jdbc.temporaryjdbc"
		class="net.sf.taverna.platform.spring.jdbc.TemporaryJDBC">
	</bean>
	<bean id="t2reference.jdbc.url" class="java.lang.String"
		factory-bean="t2reference.jdbc.temporaryjdbc"
		factory-method="getTemporaryDerbyJDBC" />
	<!-- At least for testing purposes we use Apache Derby -->
	<bean id="exampleDataSource"
		class="net.sf.taverna.platform.spring.jdbc.InterpolatingDriverManagerDataSource">
		<property name="driverClassName">
			<value>org.apache.derby.jdbc.EmbeddedDriver</value>
		</property>
		<property name="url">
			<ref bean="t2reference.jdbc.url" />
		</property>
	</bean>

	<!-- Configure hibernate to use dynamic schema update -->
	<bean id="exampleHibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.DerbyDialect
				</prop>
				<prop key="hibernate.query.substitutions">
					true 'T', false 'F'
				</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.c3p0.minPoolSize">5</prop>
				<prop key="hibernate.c3p0.maxPoolSize">20</prop>
				<prop key="hibernate.c3p0.timeout">600</prop>
				<prop key="hibernate.c3p0.max_statement">50</prop>
				<prop key="hibernate.c3p0.testConnectionOnCheckout">
					false
				</prop>
			</props>
		</property>
	</bean>

	<!-- An SPI-enabled hibernate session factory -->
	<bean id="exampleSessionFactory"
		class="net.sf.taverna.platform.spring.orm.hibernate3.SpiRegistryAwareLocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="exampleDataSource" />
		</property>
		<property name="hibernateProperties">
			<ref bean="exampleHibernateProperties" />
		</property>
		<!-- Need to map the abstract superclass for the SPI first, SPI classes -->
		<!-- are subclasses of this and hibernate can be picky about the order  -->
		<property name="mappingResources">
			<list>
				<value>
					net/sf/taverna/platformtest/api/AbstractDataBean.hbm.xml
				</value>
			</list>
		</property>
		<!-- SPI enabled session, uses the linked SPI registry or registries     -->
		<!-- to gather Class definitions and uses the slightly patched hibernate -->
		<!-- to ensure that raven is used to fetch these back when required      -->
		<property name="spiRegistries">
			<list>
				<ref bean="spiBean" />
			</list>
		</property>
	</bean>

	<repository id="ravenRepository"
		xmlns="http://taverna.sf.net/schema/artifact-support"
		base="${user.home}/.m2/repository/">
		<repositories>
            <rep url="http://www.mygrid.org.uk/maven/repository/" />
        </repositories>
		<system>
			<!-- Raven -->
			<sys artifact="uk.org.mygrid.taverna.raven:raven:1.9" />
			<!-- Spring modules -->
			<sys artifact="org.springframework:spring-core:2.5" />
			<sys artifact="org.springframework:spring-orm:2.5" />
			<sys artifact="org.springframework:spring-tx:2.5" />
			<sys artifact="org.springframework:spring-jdbc:2.5" />
			<sys artifact="org.springframework:spring-beans:2.5" />
			<sys artifact="org.springframework:spring-context:2.5" />
			<sys artifact="org.springframework:spring-aop:2.5" />
			<sys artifact="aopalliance:aopalliance:1.0" />
			<!-- Logging -->
			<sys artifact="commons-logging:commons-logging:1.1.1" />
			<!-- Derby -->
			<sys artifact="org.apache.derby:derby:10.4.1.3" />
			<!-- Hibernate -->
			<sys artifact="org.hibernate:hibernate:3.2.5.ga.raven" />
			<!-- Test helper API package -->
			<sys
				artifact="net.sf.taverna.t2.testing:t2platform-testhelpers-h3-api:0.1" />
		</system>
	</repository>

	<!-- Force the implementations of the SPI to be in the repository, this bean      -->
	<!-- isn't actually used anywhere but will force raven to pull in the appropriate -->
	<!-- artifact -->
	<bean
		raven:artifact="net.sf.taverna.t2.testing:t2platform-testhelpers-h3-impl:0.1"
		raven:repository="ravenRepository"
		class="net.sf.taverna.platformtest.impl.BarDataBean" />

	<!-- SPI used by the raven-aware hibernate session factory bean -->
	<bean id="spiBean"
		class="net.sf.taverna.platform.spring.SpiRegistryFactoryBean">
		<property name="repository">
			<ref bean="ravenRepository" />
		</property>
		<property name="spiClassName"
			value="net.sf.taverna.platformtest.api.DataBeanSPI" />
	</bean>

</beans>
