<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>net.sf.taverna.t2</groupId>
	<artifactId>t2reference-integration-tests</artifactId>
	<version>0.1</version>
	
	<name>T2 reference manager integration tests</name>
	<description>
		Because we use raven to load implementation classes we have to
		test such classes from outside of their own maven module. While
		some unit tests are possible within the implementaiton modules
		the broader scope integration tests must be included in a
		distinct module, and that's what this provides. This module
		depends only on the API module as it uses Spring to load
		implementations dynamically, this is the same classloading
		environment an application would use so tests here are fully
		representative of the external use of the reference manager.
	</description>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>false</skip>
					<systemProperties>
						<property>
							<name>java.awt.headless</name>
							<value>true</value>
						</property>
					</systemProperties>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<distributionManagement>
		<repository>
			<id>mygrid-repository</id>
			<name>myGrid Repository</name>
			<url>
				scpexe://rosalind.cs.man.ac.uk/local/www/mygrid/maven/repository
			</url>
		</repository>
		<snapshotRepository>
			<id>mygrid-snapshot-repository</id>
			<name>myGrid Snapshot Repository</name>
			<url>
				scpexe://rosalind.cs.man.ac.uk/local/www/mygrid/maven/snapshot-repository
			</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<releases />
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>mygrid-repository</id>
			<name>myGrid Repository</name>
			<url>http://www.mygrid.org.uk/maven/repository</url>
		</repository>
		<repository>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots />
			<id>mygrid-snapshot-repository</id>
			<name>myGrid Snapshot Repository</name>
			<url>
				http://www.mygrid.org.uk/maven/snapshot-repository
			</url>
		</repository>
	</repositories>

	<dependencies>

		<dependency>
			<groupId>net.sf.taverna.t2</groupId>
			<artifactId>t2reference-api</artifactId>
			<version>0.1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>2.5.4</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>2.5.4</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.6.0</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.6.0</version>
		</dependency>


		<dependency>
			<groupId>net.sf.taverna.t2</groupId>
			<artifactId>platform</artifactId>
			<version>0.1</version>
		</dependency>


		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>2.5.4</version>
			<scope>test</scope>
		</dependency>

		<!-- Derby dependency no longer needed as we can load JDBC drivers through the platform -->
		<!-- 
			<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.4.1.3</version>
			<scope>test</scope>
			</dependency>
			
			
			<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.6</version>
			<scope>test</scope>
			</dependency>
		-->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate</artifactId>
			<version>3.2.5.ga.raven</version>
			<exclusions>
				<exclusion>
					<groupId>javax.transaction</groupId>
					<artifactId>jta</artifactId>
				</exclusion>
				<exclusion>
					<groupId>net.sf.ehcache</groupId>
					<artifactId>ehcache</artifactId>
				</exclusion>
				<exclusion>
					<groupId>asm</groupId>
					<artifactId>asm-attrs</artifactId>
				</exclusion>
				<exclusion>
					<groupId>antlr</groupId>
					<artifactId>antlr</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.4</version>
			<scope>test</scope>
		</dependency>


	</dependencies>
</project>