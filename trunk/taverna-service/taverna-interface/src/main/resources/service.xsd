<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://taverna.sf.net/service"
	elementFormDefault="qualified" xml:lang="en"
	xmlns:tav="http://taverna.sf.net/service"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:dcterms="http://purl.org/dc/terms/"
	xmlns:xlink="http://www.w3.org/1999/xlink">

	<!-- <import namespace="http://www.w3.org/1999/xlink"
		schemaLocation="http://www.loc.gov/standards/mets/xlink.xsd" />
	-->

	<import namespace="http://www.w3.org/1999/xlink"
		schemaLocation="xlink.xsd" />

	<import namespace="http://purl.org/dc/elements/1.1/"
		schemaLocation="dc.xsd" />
	<import namespace="http://purl.org/dc/terms/"
		schemaLocation="dcterms.xsd" />


	<complexType name="Linked">
		<annotation>
			<documentation>				An (abstract) complex type of any element that can				potentially be linked using xlink:href. In general an				empty element with an xlink:href means that the content				of the resource is available in another document at that				location. So for instance:				GET /users/stain &lt;user&gt;				&lt;username>stain&lt;/username&gt;				&lt;email>spam@soiland.no&lt;/email&gt; &lt;jobs				xlink:href="/users/stain/jobs" /&gt; &lt;/user&gt;				will not contain a full Jobs element, but only a link to				the full document, which would be something like:				GET /users/stain/jobs &lt;jobs&gt; &lt;job				xlink:href="/jobs/13"&gt;				&lt;status&gt;FINISHED&lt;/status&gt; &lt;/job&gt;				&lt;job xlink:href="/jobs/15"&gt;				&lt;status&gt;RUNNING&lt;/status&gt; &lt;/job&gt;				&lt;/jobs&gt;				An element that is xlinked might provide a limited view				of the resource that is useful for display purposes, for				instance an xlink-ed User in the owner element of Job				might contain &lt;username&gt;, while the full content				of that element is retrieved by following the link.			</documentation>
		</annotation>
		<attribute ref="xlink:href" use="optional" />
	</complexType>

	<complexType name="Owned">
		<annotation>
			<documentation>
				A resource that is owned. Generally this means that the
				resource will appear in that User's collection, and that
				the owner is the only user that have access to the
				resource.
			</documentation>
		</annotation>
		<complexContent>
			<extension base="tav:Named">
				<sequence>
					<element minOccurs="0" name="owner"
						type="tav:User">
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>


	<complexType name="Capabilities">
		<annotation>
			<documentation>				The capabilities of this service. This element is the				starting point of finding other parts of the service				with xlink's to the main resource collections.				Registration is done by POST-ing a User document to the				address given by users. This and the capabilities				document is the only part of the service available				without authentication.				The address xlink-ed from currentUser will redirect to				the current User document of the authenticated user,				which will provide links to the user's collections of				workflows, jobs, etc.			</documentation>
		</annotation>
		<sequence>
			<element name="users" type="tav:Users">
				<annotation>
					<documentation>
						The collection of users. GET-ing this list
						requires special privileges, but POST-ing a User
						document there means registering a new user.
					</documentation>
				</annotation>
			</element>
			<element name="currentUser" type="tav:User">
				<annotation>
					<documentation>
						The current authenticated user. The target of
						this link will redirect to the real URI of the
						currently authenticated user.
					</documentation>
				</annotation>
			</element>
			<element name="workers" type="tav:Workers">
				<annotation>
					<documentation>
						The list of active workers
					</documentation>
				</annotation>
			</element>
			<element name="queues" type="tav:Queues">
				<annotation>
					<documentation>The list of queues</documentation>
				</annotation>
			</element>
			<element minOccurs="0" name="defaultQueue"
				type="tav:Queue">
				<annotation>
					<documentation>The default queue</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>


	<complexType name="Users">
		<complexContent>
			<extension base="tav:Linked">
				<sequence>
					<element name="user" type="tav:User"
						maxOccurs="unbounded" minOccurs="0">
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<complexType name="User">
		<annotation>
			<documentation>
				A user on this system. The username is the one used for
				authenticating to this service. To create a new user
				(registering), POST to the collection of Users as
				referenced from Capabilities. To upload a Workflow or a
				Data document, POST them to the collections referenced
				from the workflows or data element. To register a new
				Job, POST it to the resource referenced from jobs.
			</documentation>
		</annotation>
		<complexContent>
			<extension base="tav:Dated">
				<sequence>
					<element minOccurs="0" name="username"
						type="normalizedString">
						<annotation>
							<documentation>
								The username used for identification and
								authentication.
							</documentation>
						</annotation>
					</element>
					<element minOccurs="0" name="jobs"
						type="tav:Jobs">
						<annotation>
							<documentation>
								List of jobs owned by this user. POST to
								the resource xlink-ed here to create a
								new Job owned by this user.
							</documentation>
						</annotation>
					</element>
					<element minOccurs="0" name="workflows"
						type="tav:Workflows">
						<annotation>
							<documentation>
								List of workflows owned by this user.
								POST to the resource xlink-ed here to
								create a new Workflow owned by this
								user.
							</documentation>
						</annotation>
					</element>
					<element minOccurs="0" name="datas"
						type="tav:Datas">
						<annotation>
							<documentation>
								List of data owned by this user. POST to
								the resource xlink-ed here to create a
								new Data document owned by this user.
							</documentation>
						</annotation>
					</element>
					<element name="email" type="normalizedString"
						minOccurs="0">
						<annotation>
							<documentation>
								Email address registered for this user.
								PUT as text/plain to the address
								xlink-ed to change the email address.
							</documentation>
						</annotation>
					</element>
					<element name="password" type="normalizedString"
						minOccurs="0">
						<annotation>
							<documentation>
								Password for this user. PUT as
								text/plain to the address xlink-ed to
								change the password. Note that this
								element will always be empty (but with
								an xlink) when GET-ing the user.
							</documentation>
						</annotation>
					</element>
					<element name="worker" type="tav:Worker"
						minOccurs="0">
						<annotation>
							<documentation>
								If this user is a worker instead of a
								normal user, this will be the reference
								to the Worker field
							</documentation>
						</annotation>
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>


	<complexType name="Jobs">
		<complexContent>
			<extension base="tav:Linked">
				<sequence>
					<element name="job" type="tav:Job"
						maxOccurs="unbounded" minOccurs="0">
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<complexType name="Job">
		<complexContent>
			<extension base="tav:Owned">
				<sequence>
					<element minOccurs="0" name="workflow"
						type="tav:Workflow">
					</element>
					<element minOccurs="0" name="inputs"
						type="tav:Data">
					</element>
					<element minOccurs="0" name="status"
						type="tav:LinkedStatusType">
					</element>
					<element name="updateInterval" minOccurs="0"
						type="duration">
						<annotation>
							<documentation>
								The update frequency of the worker while
								processing this job. The worker will
								report back it's status and progress
								report at the given interval, for
								example PT5M" for every 5th minute.

								Note when changing this value that the
								worker might wait a full interval of the
								previous value before detecting the new
								interval duration.
							</documentation>
						</annotation>
					</element>
					<element name="report" type="tav:Report"
						minOccurs="0">
					</element>
					<element name="queue" type="tav:Queue"
						minOccurs="0">
					</element>
					<element name="worker" type="tav:Worker"
						minOccurs="0">
					</element>
					<element name="outputs" type="tav:Data"
						minOccurs="0">
					</element>
					<element name="console" type="tav:LinkedConsoleType"
						minOccurs="0">
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<simpleType name="StatusType">
		<annotation>
			<documentation>
				The status of the job. Generally the status will
				progress further down the enumeration, although it might
				skip some states.
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="NEW"></enumeration>
			<enumeration value="QUEUED"></enumeration>
			<enumeration value="DEQUEUED"></enumeration>
			<enumeration value="RUNNING"></enumeration>
			<enumeration value="PAUSED"></enumeration>
			<enumeration value="FAILING"></enumeration>
			<enumeration value="CANCELLING"></enumeration>
			<enumeration value="CANCELLED"></enumeration>
			<enumeration value="COMPLETE"></enumeration>
			<enumeration value="FAILED"></enumeration>
			<enumeration value="DESTROYED"></enumeration>
		</restriction>
	</simpleType>


	<complexType name="LinkedStatusType">
		<simpleContent>
			<extension base="tav:StatusType">
				<attribute ref="xlink:href" use="optional" />
			</extension>
		</simpleContent>
	</complexType>

	<simpleType name="ConsoleType">
		<annotation>
			<documentation>
				The console output of a job. Typically system out and
				system error containing log lines.
			</documentation>
		</annotation>
		<restriction base="string"></restriction>
	</simpleType>

	<complexType name="LinkedConsoleType">
		<simpleContent>
			<extension base="tav:ConsoleType">
				<attribute ref="xlink:href" use="optional" />
			</extension>
		</simpleContent>
	</complexType>

	<complexType name="Report">
		<complexContent>
			<extension base="tav:Linked">
				<sequence>
					<any minOccurs="0" namespace="##any"
						processContents="skip">
					</any>
				</sequence>
			</extension>
		</complexContent>
	</complexType>


	<complexType name="Workflows">
		<complexContent>
			<extension base="tav:Linked">
				<sequence>
					<element name="workflow" type="tav:Workflow"
						maxOccurs="unbounded" minOccurs="0">
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>


	<complexType name="Workflow">
		<annotation>
			<documentation>
				A Taverna workflow, in practice an XScufl document.
				Retrieving this resource with the content-type of XScufl
				will give the 'pure' XSCufl instead.
			</documentation>
		</annotation>
		<complexContent>
			<extension base="tav:Owned">
				<sequence>
					<element minOccurs="0" name="scufl"
						type="tav:Scufl">
						<annotation>
							<documentation>
								The XScufl as a nested element within
								the XScufl namespace.
							</documentation>
						</annotation>
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<complexType name="Datas">
		<complexContent>
			<extension base="tav:Linked">
				<sequence>
					<element name="data" type="tav:Data"
						maxOccurs="unbounded" minOccurs="0">
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<complexType name="Data">
		<annotation>
			<documentation>
				A Baclava data document, usable as workflow input, as
				well as workflow output.
			</documentation>
		</annotation>
		<complexContent>
			<extension base="tav:Owned">
				<sequence>
					<element minOccurs="0" name="baclava"
						type="tav:Baclava">
						<annotation>
							<documentation>
								The real Baclava XML document as a
								nested element. Also available as 'pure'
								Baclava document by GET-ing this
								resource by the Baclava content type.
							</documentation>
						</annotation>
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<complexType name="Workers">
		<complexContent>
			<extension base="tav:Linked">
				<sequence>
					<element name="worker" type="tav:Worker"
						maxOccurs="unbounded" minOccurs="0">
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<complexType name="Worker">
		<annotation>
			<documentation>
				A Worker is a special User that executes jobs from it's
				registered queues.
			</documentation>
		</annotation>
		<complexContent>
			<extension base="tav:Dated">
				<sequence>
					<element minOccurs="0" name="apiURI"
						type="anyURI">
						<annotation>
							<documentation>
								The unique URI identifying the worker -
								if this is not the same as the URI for
								the worker document, this can be the URI
								to an interface directly towards the
								worker. Note the access to the worker
								interface might be restricted.
							</documentation>
						</annotation>
					</element>
					<element minOccurs="0" name="jobs"
						type="tav:Jobs">
						<annotation>
							<documentation>
								The jobs associated with this worker,
								both current and finished.
							</documentation>
						</annotation>
					</element>
					<element minOccurs="0" name="queue"
						type="tav:Queue">
						<annotation>
							<documentation>
								The queue this worker is listening too.
								A worker will only be allowed to pick up
								jobs from the queue he's listening too.
							</documentation>
						</annotation>
					</element>
					<element name="user" type="tav:User"
						minOccurs="0">
						<annotation>
							<documentation>
								The user this worker is identifying
								itself with to this service. (The worker
								can have several users on different
								queue systems, but would preferably have
								the same uri on all of these)
							</documentation>
						</annotation>
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>



	<complexType name="Queues">
		<complexContent>
			<extension base="tav:Linked">
				<sequence>
					<element name="queue" type="tav:Queue"
						maxOccurs="unbounded" minOccurs="0">
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<complexType name="Queue">
		<complexContent>
			<extension base="tav:Named">
				<sequence>
					<element name="jobs" type="tav:Jobs"
						minOccurs="0">
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<element name="capabilities" type="tav:Capabilities"></element>

	<element name="users" type="tav:Users"></element>
	<element name="user" type="tav:User"></element>

	<element name="jobs" type="tav:Jobs"></element>
	<element name="job" type="tav:Job"></element>

	<element name="data" type="tav:Data"></element>

	<element name="workflows" type="tav:Workflows"></element>
	<element name="workflow" type="tav:Workflow"></element>

	<element name="queues" type="tav:Queues"></element>
	<element name="queue" type="tav:Queue"></element>

	<element name="workers" type="tav:Workers"></element>
	<element name="worker" type="tav:Worker"></element>

	<complexType name="Scufl">
		<sequence>
			<any minOccurs="1"
				namespace="http://org.embl.ebi.escience/xscufl/0.1alpha"
				processContents="skip">
			</any>
		</sequence>
	</complexType>
	<complexType name="Baclava">
		<sequence>
			<any minOccurs="1"
				namespace="http://org.embl.ebi.escience/baclava/0.1alpha"
				processContents="skip">
			</any>
		</sequence>
	</complexType>


	<element name="datas" type="tav:Datas"></element>

	<complexType name="Dated">
		<complexContent>
			<extension base="tav:Linked">
				<sequence>
					<element ref="dcterms:created" minOccurs="0">
					</element>
					<element ref="dcterms:modified" minOccurs="0">
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<complexType name="Named">
		<complexContent>
			<extension base="tav:Dated">
				<sequence>
					<element ref="dc:title" minOccurs="0"></element>
				</sequence>

			</extension>
		</complexContent>
	</complexType>

</schema>
