# Taverna configuration file
#
# For taverna0.1beta11
#
# This file can be used to change the configuration of the Taverna
# graphical workbench and its embedded workflow enactor. Certain
# properties should remain set as they are (or the entire thing will
# break), all user editable configuration is clearly marked as such.
#
# tmo@ebi.ac.uk, 18th September 2004
#--------------------------------------------------------------------


# WORKBENCH WINDOW SYSTEM (user editable)
#--------------------------------------------------------------------
# By default the Taverna Workbench uses a large frame with components
# appearing in subwindows within that frame. By commenting out the
# property below you can change this behaviour to use the native
# windowing system for all component windows. The Standard workbench
# window will still appear, and closing it will end your session, but
# the child windows will appear on your normal desktop. Any value
# here will force the use of internal frames, if you don't want them
# then don't set this to anything - comment it out.
#--------------------------------------------------------------------
	taverna.workbench.useinternalframes = true
#--------------------------------------------------------------------

# Result Table Size Limit
#--------------------------------------------------------------------
# The result table is currently a tad slow with large results sets,
# so in order to keep the user interface responsive, its currently
# easiest to turn it off. At some point this will be replaced with
# something more intelligent.
# The size it compares against, is the length of the provenance
# record, since this is directly related to the complexity of the
# table.
# 128000 is approximately a table with 800 items.
#--------------------------------------------------------------------
	taverna.resulttable.sizelimit = 128000
#--------------------------------------------------------------------


# WORKFLOW DIAGRAM IMAGE TYPE (user editable)
#--------------------------------------------------------------------
# By default the workflow diagram uses an internal image in PNG
# format. Some platforms (win2000 and linux) have exhibited problems
# with this which seem to be rectified by changing the format to one
# of 'gif' or 'jpg'
# If you're seeing messages with the extremely helpful text of '4' or
# similar and no diagram appearing in the workbench you might like to
# try uncommenting one of the options below
#--------------------------------------------------------------------
#	taverna.scufldiagram.imagetype = gif
#	taverna.scufldiagram.imagetype = jpg
#--------------------------------------------------------------------

# WORKFLOW DIAGRAM SPACING (user editable)
#--------------------------------------------------------------------
# You can make the diagram view more compact by uncommenting and / or
# editing these lines, these are parameters passed on to the 'dot'
# language and will force the layout system to condense the nodes
# in the view.
#--------------------------------------------------------------------
	taverna.scufldiagram.ranksep = 0.22
	taverna.scufldiagram.nodesep = 0.05
#--------------------------------------------------------------------

# DATA TYPE ONTOLOGY LOCATION (user editable)
#--------------------------------------------------------------------
# Uncomment and define this property to override the internal type
# ontology RDFS file
#--------------------------------------------------------------------
	taverna.ontology.location = http://twiki.mygrid.info/twiki/pub/Mygrid/TavernaBuildForISMB/mygrid-services-lite.rdfs
#--------------------------------------------------------------------

# DEFAULT SERVICES (user editable)
#--------------------------------------------------------------------
# The service selection panel component can be populated with extra
# web services and soaplab installations using this configuration
# section. In order to enable this, uncomment and edit the two
# properties to suit.
# Note that the default services load in a new thread, so may not
# appear immediately within the service panel. If any errors occur
# during the load, the stack trace is displayed in the system
# console. This is not ideal, we'll have better reporting in the
# next release.
# Multiple instances of each (soaplab or wsdl) may be specified by
# including all endpoints, seperated with the ',' character as shown
# below.
# Trailing whitespace is not allowed in these URLs! If you're having
# problems getting this to work then check there isn't a space at the
# end of the line.
#--------------------------------------------------------------------
	taverna.defaultsoaplab = http://industry.ebi.ac.uk/soap/soaplab,\
				 http://www.ebi.ac.uk/collab/mygrid/service4/soap/services
	taverna.defaultwsdl = http://www.ebi.ac.uk/collab/mygrid/service1/goviz/GoViz.jws?wsdl,\
			      http://www.ebi.ac.uk/xembl/XEMBL.wsdl,\
			      http://soap.genome.jp/KEGG.wsdl,\
			      http://eutils.ncbi.nlm.nih.gov/entrez/eutils/soap/eutils.wsdl
	taverna.defaultbiomoby = http://mobycentral.cbr.nrc.ca/cgi-bin/MOBY05/mobycentral.pl
#--------------------------------------------------------------------


# PROXY CONFIGURATION (user editable)
#--------------------------------------------------------------------
# Use the properties below if your machine accesses the internet
# via a proxy server. Uncomment them by removing the leading '#'
# and then modify to suit your installation.
#
# Some configurations appear to need to edit the http.* versions.
#--------------------------------------------------------------------
#	Configuration for Nottingham CS
#	proxySet = true
#	proxyHost = 128.243.220.41
#	proxyPort = 3128
#
#	http.proxyHost = 128.243.220.41
#	http.proxyPort = 3128
#--------------------------------------------------------------------
# The http.nonProxyHosts property defines a set of host name or IP
# address patterns for which the proxy should not be used. For example,
# it would make sense for the local host to be included in this,
# either by name (localhost) or IP (127.0.0.1). Host patterns in this
# list are seperated with the '|' character as shown below.
#--------------------------------------------------------------------
#	http.nonProxyHosts = localhost|127.0.0.1|*.mydomain.com
#--------------------------------------------------------------------


# LSID Configuration (expert users only)
#--------------------------------------------------------------------
# These properties define how the embedded enactor allocates LSID
# values to intermediate and final data items. The current settings
# will produce LSID values that cannot be resolved, and is only used
# to give some kind of values for the provenance generation code.
#
# In the 'real' version of this section there will be options to
# allow you to set an LSID authority server with which to communicate
# to obtain real LSID values that can actually resolve to the objects
#--------------------------------------------------------------------
#	taverna.lsid.providerclass = org.embl.ebi.escience.baclava.StupidLSIDProvider
#	taverna.lsid.providerclass = org.embl.ebi.escience.baclava.store.JDBCBaclavaDataService
#	taverna.lsid.providerclass = org.embl.ebi.escience.baclava.store.RemoteSOAPStore
#	taverna.lsid.providerauthority = net.sf.taverna
#--------------------------------------------------------------------
# To connect to an LSID assigning service you should comment all the
# properties above and uncomment all those in this block, changing
# the endpoint to the LSID assigning service to fit your installation
# In addition to this you'll need to set the target namespaces for
# the workflow definition (i.e. ScuflModel instance), workflow
# instance within an enactor and datathing. These values are then
# used to query the assigning service to acquire a suitable authority
# to use for each namespace.
#
# Default config below is to use the myGrid assigning service at
# Manchester, this is a test and should only be enabled by myGrid
# people (please!) As with other fields here, watch for trailing
# whitespace (sigh)
#--------------------------------------------------------------------
	taverna.lsid.providerclass = org.embl.ebi.escience.baclava.AssigningServiceClient
	taverna.lsid.asclient.endpoint = http://phoebus.cs.man.ac.uk:8081/authority/services/AssigningWebService
	taverna.lsid.asclient.ns.wfdefinition = operation
	taverna.lsid.asclient.ns.wfinstance = experimentinstance
	taverna.lsid.asclient.ns.datathingleaf = lsdocument
	taverna.lsid.asclient.ns.datathingcollection = documentcollection
#--------------------------------------------------------------------


# Data store configuration (expert users only)
#--------------------------------------------------------------------
# These properties define how Taverna will store intermediate data
# and result objects. Between this, the LSID allocation configuration
# and a suitable LSID browser such as Haystack or the simple launchpad
# application from IBM, these settings allow data from Taverna to be
# made visible to other systems without complex interface code.
# If the taverna.datastore.class property is not present then the
# data storage system will do nothing.
#--------------------------------------------------------------------
#	taverna.datastore.class = org.embl.ebi.escience.baclava.store.JDBCBaclavaDataService
#	taverna.datastore.class = org.embl.ebi.escience.baclava.store.RemoteSOAPStore
#--------------------------------------------------------------------


# Local data service configuration
#--------------------------------------------------------------------
# If the taverna.datastore.class is JDBCBaclavaDataService then these
# properties determine the location of the SQL backing store, the
# driver class and the username / password pair. If the storage class
# is anything other than this then this section can be safely ignored
#--------------------------------------------------------------------
	taverna.datastore.jdbc.driver = com.mysql.jdbc.Driver
	taverna.datastore.jdbc.url = jdbc:mysql://localhost/taverna
	taverna.datastore.jdbc.user = taverna
	taverna.datastore.jdbc.password = taverna
#--------------------------------------------------------------------


# Remote SOAP store / provider configuration
#--------------------------------------------------------------------
# If the taverna.datastore.class is RemoteSOAPStore then this section
# determines the location of the SOAP endpoint for the data store and
# LSID provider service.
# If the data store and lsid provider classes are other than this
# then this section will do nothing.
#--------------------------------------------------------------------
	taverna.datastore.soap.endpoint = http://localhost:8080/authority/DataService.jws
#--------------------------------------------------------------------


# ENACTOR CONFIGURATION (do not edit)
#--------------------------------------------------------------------
# Properties to configure the precise invocation strategy of the
# embedded workflow enactment engine. If you are not using this
# feature of the workbench (you are in the current release, there's
# no choice in the matter) then these properties could be removed.
# Yoy optionally may specify a URL for the soap endpoint of a 
# remote Freefluo instance. In the absence of a value being provided 
# for the mygrid.enactor.soap.endpoint property, an embedded workflow 
# enactment engine is used instead.
#
# Note that much of the current LSID / datastore / event functions
# are not currently compatible with a remote enactor, current code
# may not even run correctly with one. If you're seeing this message
# you're running from a CVS copy and should bear this in mind :)
#--------------------------------------------------------------------
	mygrid.enactor.config.enactor.id=myenactor
#	mygrid.enactor.soap.endpoint=
#--------------------------------------------------------------------