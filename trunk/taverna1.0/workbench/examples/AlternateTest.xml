<?xml version="1.0" encoding="UTF-8"?>
<s:scufl xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha" version="0.1" log="0">
  <s:processor name="failingthing">
    <s:description>This processor always produces an error. We're working on the code to allow it to be substituted at runtime by an alternate, in which case this workflow would proceed as normal.</s:description>
    <s:local>org.embl.ebi.escience.scuflworkers.java.TestAlwaysFailingProcessor</s:local>
	<s:alternate>
		<s:local>org.embl.ebi.escience.scuflworkers.java.StringConcat</s:local>
		<s:inputmap key="foo" value="string1"/>
		<s:inputmap key="bar" value="string2"/>
		<s:outputmap key="urgle" value="output"/>
	</s:alternate>
  </s:processor>
  <s:processor name="string1">
    <s:stringconstant>Hello </s:stringconstant>
  </s:processor>
  <s:processor name="string2">
    <s:stringconstant>world</s:stringconstant>
  </s:processor>
  <s:link>
    <s:input>failingthing:foo</s:input>
    <s:output>string1:value</s:output>
  </s:link>
  <s:link>
    <s:input>failingthing:bar</s:input>
    <s:output>string2:value</s:output>
  </s:link>
  <s:link>
    <s:input>concatenation</s:input>
    <s:output>failingthing:urgle</s:output>
  </s:link>
  <s:sink>
    concatenation
    <s:metadata>
      <s:mimeTypes />
      <s:description>Should contain the concatenation of string1 and string2, but will only do this if the failover works and substitutes the string concat processor in place of the always failing one.</s:description>
      <s:semanticType />
    </s:metadata>
  </s:sink>
</s:scufl>


