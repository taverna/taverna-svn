<?xml version="1.0" encoding="UTF-8"?>
<s:scufl xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha" version="0.2" log="0">
  <s:workflowdescription lsid="urn:lsid:www.mygrid.org.uk:operation:85J50N27ZU4" author="Tom Oinn" title="Example of analysis using EMBOSS and BioMart, rending with Jmol">Starts by fetching all gene IDs from Ensembl corresponding to human genes on chromosome 22 implicated in known diseases and with homologous genes in rat and mouse. For each of these gene IDs it fetches the 200bp after the five prime end of the genomic sequence in each organism and performs a multiple alignment of the sequences using the EMBOSS tool 'emma' (a wrapper around ClustalW). Returns PNG images of the multiple alignment along with three columns containing the human, rat and mouse gene IDs used in each case.

As an enhancement to show the Jmol rendering in action this also fetches the PDB identifiers (where present) and the corresponding coordinate flat files from the RCSB, presenting the structures to the user in an interactive form via the Jmol plugin.</s:workflowdescription>
  <s:processor name="GetUniqueHomolog">
    <s:beanshell name="AddSuffix">The array of png images returned from the plot processor<s:scriptvalue name="AddPrefixToID">fasta"http://www.mygrid.org.uk/ontology#domain_concept
      
        
        "
        
          "
  
      
        "
  &amp;
  
        
        
        
        "
        chemical/x-pdb
      
        "text/plain
          
    "text/html
        "
      
      hsapiens_gene_ensembl&amp;
  </s:scriptvalue>
  <s:beanshellinputlist s:syntactictype="l('text/plain')" name="pdbFlatFile" xmlns:biomart="http://org.embl.ebi.escience/xscufl-biomart/0.1alpha" name="PDBIDs" />
<s:beanshellinput field="gene_stable_id" key="gene_id_key" constraint="main" uniquename="gene_stable_id" field="homol_stable_id_v" key="gene_id_key" constraint="hsapiens_gene_ensembl__homologs_mmusculus__dm" uniquename="mouse_ensembl_id" />
        </s:beanshellinput>


<s:beanshellinput s:syntactictype="l('text/plain')" field="chr_name" constraint="main" key="gene_id_key" qualifier="=" value="22" field="disease_gene_bool" constraint="main" key="gene_id_key" qualifier=" is not null" />
      </s:beanshellinput>
              <s:beanshellinput s:syntactictype="l('text/plain')" name="FlattenImageList">text/html</s:beanshellinput>
  </s:beanshellinputlist>
  <s:beanshelloutputlist name="FetchPDBFlatFile" workers="10" s:syntactictype="l('text/plain')" name="GetKnownStructures">
      <s:beanshelloutput>
      &gt;
      Human\n"
          
      "
        &gt;
          "
          "
        &gt;
        "Reads and writes (returns) sequences</s:beanshelloutput>"
  
    <s:beanshelloutput version="0.2" log="0" lsid="urn:lsid:www.mygrid.org.uk:operation:E51AE8IPB73" author="Tom Oinn" title="Fetch PDB flatfile from RCSB server" s:syntactictype="l('text/plain')" s:syntactictype="'text/plain'">Multiple alignment program - interface to ClustalW program</s:beanshelloutput>
  <s:beanshelloutput name="RCSBSuffix" s:syntactictype="l(l('text/plain'))" source="GetUniqueHomolog:HSOut" sink="GetHSGenes:gene_stable_id_filter" source="GetUniqueHomolog:RatOut" sink="RNorIDs" />&amp;
      
  
  image/png
  
  
        application/octet-stream
  </s:beanshelloutput>
  </s:beanshelloutputlist>
        </s:beanshell>
  </s:processor>
  <s:processor>
    <s:local>org.embl.ebi.escience.scuflworkers.java.FlattenList</s:local>
  </s:processor>
  <s:processor>
    <s:description>Given an identifier such as '1crn' fetches the PDB format flatfile from the RCSB</s:description>
    <s:workflow>
      <s:scufl>
        <s:workflowdescription>Given an identifier such as '1crn' fetches the PDB format flatfile from the RCSB</s:workflowdescription>
        <s:processor>
          <s:stringconstant>&amp;compression=None</s:stringconstant>
        </s:processor>
        <s:processor>
          <s:local>org.embl.ebi.escience.scuflworkers.java.StringConcat</s:local>
        </s:processor>
        <s:processor>
          <s:stringconstant>http://www.rcsb.org/pdb/cgi/export.cgi/1CRN.pdb?format=PD♂瀀搀戀䤀搀㴀</s:stringconstant>
        </s:processor>
        <s:processor>
          <s:local>org.embl.ebi.escience.scuflworkers.java.WebPageFetcher</s:local>
        </s:processor>
        <s:processor>
          <s:local>org.embl.ebi.escience.scuflworkers.java.StringConcat</s:local>
        </s:processor>
        <s:link>
        <s:link>
        <s:link>
        <s:link>
        <s:link>
        <s:link>
        <s:source>
          <s:metadata>
            <s:description>PDB identifier such as '1crn'</s:description>
          </s:metadata>
        </s:source>
        <s:sink>
          <s:metadata>
            <s:mimeTypes>
              <s:mimeType>chemical/x-pdb</s:mimeType>
              <s:mimeType>text/plain</s:mimeType>
              <s:mimeType>text/html</s:mimeType>
            </s:mimeTypes>
          </s:metadata>
        </s:sink>
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor>
    <s:beanshell>
      <s:scriptvalue>Map geneIDToStructureSet = new HashMap();
Iterator j = StructureIDList.iterator();
for (Iterator i = GeneIDList.iterator(); i.hasNext();) {
  String geneID = (String)i.next();
  String structureID = (String)j.next();
  Set s = (Set)geneIDToStructureSet.get(geneID);
  if (s == null) {
    s = new HashSet();
    geneIDToStructureSet.put(geneID, s);
  }
  s.add(structureID);
}
List GeneIDs = new ArrayList();
List StructureIDs = new ArrayList();
// Now has a map containing lists of structure IDs as values
for (Iterator i = geneIDToStructureSet.keySet().iterator(); i.hasNext();) {
  String geneID = (String)i.next();
  Set structureIDSet = (Set)geneIDToStructureSet.get(geneID);
  GeneIDs.add(geneID);
  List sl = new ArrayList();
  sl.addAll(structureIDSet);
  StructureIDs.add(sl);
}</s:scriptvalue>
      <s:beanshellinputlist>
        <s:beanshellinput>StructureIDList</s:beanshellinput>
        <s:beanshellinput>GeneIDList</s:beanshellinput>
      </s:beanshellinputlist>
      <s:beanshelloutputlist>
        <s:beanshelloutput>GeneIDs</s:beanshelloutput>
        <s:beanshelloutput>StructureIDs</s:beanshelloutput>
      </s:beanshelloutputlist>
    </s:beanshell>
    <s:iterationstrategy>
      <i:dot>
        <i:iterator>
        <i:iterator>
      </i:dot>
    </s:iterationstrategy>
  </s:processor>
  <s:processor>
    <s:biomart>
      <biomart:biomartconfig>
      <biomart:biomartds>rnorvegicus_gene_ensembl</biomart:biomartds>
      <biomart:query>
        <biomart:filters>
          <biomart:idlistfilter>
            <biomart:idlistitem>
          </biomart:idlistfilter>
        </biomart:filters>
        <biomart:sequence>
      </biomart:query>
    </s:biomart>
  </s:processor>
  <s:processor>
    <s:biomart>
      <biomart:biomartconfig>
      <biomart:biomartds>mmusculus_gene_ensembl</biomart:biomartds>
      <biomart:query>
        <biomart:filters>
          <biomart:idlistfilter>
            <biomart:idlistitem>
          </biomart:idlistfilter>
        </biomart:filters>
        <biomart:sequence>
      </biomart:query>
    </s:biomart>
  </s:processor>
  <s:processor>
    <s:biomart>
      <biomart:biomartconfig>
      <biomart:biomartds>hsapiens_gene_ensembl</biomart:biomartds>
      <biomart:query>
        <biomart:filters>
          <biomart:idlistfilter>
            <biomart:idlistitem>
          </biomart:idlistfilter>
        </biomart:filters>
        <biomart:sequence>
      </biomart:query>
    </s:biomart>
  </s:processor>
  <s:processor>
    <s:beanshell>
      <s:scriptvalue>fasta = 㸢䠀甀洀愀渀尀渀∀⬀栀猀匀攀焀⬀∀尀渀㸀䴀漀甀猀攀尀渀∀⬀洀洀匀攀焀⬀∀尀渀㸀刀愀琀尀渀∀⬀爀渀匀攀焀㬀</s:scriptvalue>
      <s:beanshellinputlist>
        <s:beanshellinput>hsSeq</s:beanshellinput>
        <s:beanshellinput>mmSeq</s:beanshellinput>
        <s:beanshellinput>rnSeq</s:beanshellinput>
      </s:beanshellinputlist>
      <s:beanshelloutputlist>
        <s:beanshelloutput>fasta</s:beanshelloutput>
      </s:beanshelloutputlist>
    </s:beanshell>
    <s:iterationstrategy>
      <i:dot>
        <i:iterator>
        <i:iterator>
        <i:iterator>
      </i:dot>
    </s:iterationstrategy>
  </s:processor>
  <s:processor>
    <s:biomart>
      <biomart:biomartconfig>
      <biomart:biomartds>hsapiens_gene_ensembl</biomart:biomartds>
      <biomart:query>
        <biomart:attributes>
          <biomart:fieldattribute>
          <biomart:fieldattribute>
          <biomart:fieldattribute>
        </biomart:attributes>
        <biomart:filters>
          <biomart:basicfilter>
          <biomart:booleanfilter>
          <biomart:booleanfilter>
          <biomart:booleanfilter>
        </biomart:filters>
      </biomart:query>
    </s:biomart>
  </s:processor>
  <s:processor>
    <s:biomart>
      <biomart:biomartconfig>
      <biomart:biomartds>hsapiens_gene_ensembl</biomart:biomartds>
      <biomart:query>
        <biomart:attributes>
          <biomart:fieldattribute>
          <biomart:fieldattribute>
        </biomart:attributes>
        <biomart:filters>
          <biomart:booleanfilter>
          <biomart:idlistfilter>
            <biomart:idlistitem>
          </biomart:idlistfilter>
        </biomart:filters>
      </biomart:query>
    </s:biomart>
  </s:processor>
  <s:processor>
    <s:description>Reads and writes (returns) sequences</s:description>
    <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/services/edit::seqret</s:soaplabwsdl>
  </s:processor>
  <s:processor>
    <s:description>Displays aligned sequences, with colouring and boxing</s:description>
    <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/services/alignment_multiple::prettyplot</s:soaplabwsdl>
  </s:processor>
  <s:processor>
    <s:description>Multiple alignment program - interface to ClustalW program</s:description>
    <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/services/alignment_multiple::emma</s:soaplabwsdl>
  </s:processor>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:link>
  <s:sink>
    <s:metadata>
      <s:mimeTypes>
        <s:mimeType>image/png</s:mimeType>
        <s:mimeType>application/octet-stream</s:mimeType>
      </s:mimeTypes>
      <s:description>The array of png images returned from the plot processor</s:description>
      <s:semanticType>http://www.mygrid.org.uk/ontology#domain_concept</s:semanticType>
    </s:metadata>
  </s:sink>
  <s:sink>
  <s:sink>
  <s:sink>
  <s:sink>
  <s:sink>
    <s:metadata>
      <s:mimeTypes>
        <s:mimeType>chemical/x-pdb</s:mimeType>
        <s:mimeType>text/plain</s:mimeType>
        <s:mimeType>text/html</s:mimeType>
      </s:mimeTypes>
    </s:metadata>
  </s:sink>
  <s:sink>
</s:scufl>