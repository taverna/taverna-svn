<project name="contrib" default="jar" basedir=".">
	
	<property file="build.properties"/>
    <path id="base-classpath">
	    <!-- Jar files used when building or running the project go here -->
		<fileset dir="${taverna.netlib}">
			<include name="*.jar"/>
		</fileset>
    	<fileset dir="${taverna.devlib}">
    		<include name="*.jar"/>
    	</fileset>
    	
    	<fileset dir="${taverna.build}">
    		<include name="taverna-${project.version}.jar"/>
    	</fileset>
    	<fileset dir="${contrib.netlib}">
    		<include name="*.jar"/>
    	</fileset>
    	
    	<fileset dir="${contrib.lib}">
    		<include name="*.jar"/>
    	</fileset>
    	
        <!-- Also include our own source tree -->
        <pathelement path="."/>
		<pathelement path="${build.classes}"/>
		<pathelement path="${build.src}"/>
    </path>

	<path id="base-compile-classpath">
    	<path refid="base-classpath"/>
		<!-- Jar files that are only used when building the project go here -->
		<fileset dir="${taverna.netlib}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${taverna.devlib}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${taverna.lib}">
			<include name="*.jar"/>
		</fileset>
    </path>
	
	<path id="base-run-classpath">
	        <path refid="base-classpath"/>
	        <pathelement path="./workbench/conf"/>
	</path>
	<path id="base-test-classpath">
	    <path refid="base-run-classpath"/>
		<path refid="${java.class.path}"/>
		<pathelement path="${build.text.classes}"/>
    </path>
	<path id="compile-classpath">
	    <path refid="base-compile-classpath"/>
	</path>
	<path id="run-classpath">
	    <path refid="base-run-classpath"/>
	</path>
	<path id="test-classpath">
	    <path refid="base-test-classpath"/>
	</path>
	
    <!-- Check the current system classpath for JUnit -->
    <available classpath="${java.class.path}"
        classname="junit.framework.TestCase"
        property="junit.present"/>


	<!-- Clean the build -->
	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete dir="${reports.tests}"/>
	</target>

	<!-- Trivial setup -->
	<target name="prepare" depends="">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${reports.tests}"/>
		<mkdir dir="../netlib"/>
		<path id="downloaded-libs">
		        <fileset dir="../netlib">
			       <include name="*.jar"/>
			</fileset>
		</path>
		<path id="compile-classpath">
		        <path refid="base-compile-classpath"/>
			<path refid="downloaded-libs"/>
		</path>	
		<path id="run-classpath">
		<path refid="base-run-classpath"/>
			<path refid="downloaded-libs"/>
		</path>
		<path id="test-classpath">
		        <path refid="base-test-classpath"/>
			<path refid="downloaded-libs"/>
		</path>	
	</target>


	<!-- Prepare the source tree for compilation -->
	<target name="prepare-src" depends="prepare">
		<mkdir dir="${build.src}"/>
		<mkdir dir="${build.classes}"/>
		<copy todir="${build.src}" filtering="on">
			<fileset dir="${contrib.src}">
				<exclude name="**/CVS/**"/>
			</fileset>
		</copy>
	</target>
	
	<target name="fetchjars">
		<mkdir dir="${contrib.netlib}" />
		<get src="http://www.ibiblio.org/maven/jaxen/jars/jaxen-1.0-FCS-full.jar" dest="${contrib.netlib}/jaxen-1.0-FCS-full.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/saxpath/jars/saxpath-1.0-FCS.jar" dest="${contrib.netlib}/saxpath-1.0-FCS.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/bsf/jars/bsf-2.3.0.jar" dest="${contrib.netlib}/bsf.jar" usetimestamp="yes"/>	
		<get src="http://www.ibiblio.org/maven/rhino/jars/js-1.6R1.jar" dest="${contrib.netlib}/rhino.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/jython/jars/jython-2.1.jar" dest="${contrib.netlib}/jython.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/jacl/jars/jacl-1.2.6.jar" dest="${contrib.netlib}/jacl.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/groovy/jars/groovy-all-1.0-beta-9.jar" dest="${contrib.netlib}/groovy.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/batik/jars/batik-awt-util-1.5.jar" dest="${contrib.netlib}/batik-awt-util-1.5.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/batik/jars/batik-bridge-1.5.jar" dest="${contrib.netlib}/batik-bridge-1.5.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/batik/jars/batik-1.5.jar" dest="${contrib.netlib}/batik-1.5.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/batik/jars/batik-css-1.5.jar" dest="${contrib.netlib}/batik-css-1.5.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/batik/jars/batik-dom-1.5.jar" dest="${contrib.netlib}/batik-dom-1.5.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/batik/jars/batik-ext-1.5.jar" dest="${contrib.netlib}/batik-ext-1.5.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/batik/jars/batik-extension-1.5.jar" dest="${contrib.netlib}/batik-extension-1.5.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/batik/jars/batik-gui-util-1.5.jar" dest="${contrib.netlib}/batik-gui-util-1.5.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/batik/jars/batik-gvt-1.5.jar" dest="${contrib.netlib}/batik-gvt-1.5.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/batik/jars/batik-parser-1.5.jar" dest="${contrib.netlib}/batik-parser-1.5.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/batik/jars/batik-rasterizer-1.5.jar" dest="${contrib.netlib}/batik-rasterizer-1.5.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/batik/jars/batik-script-1.5.jar" dest="${contrib.netlib}/batik-script-1.5.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/batik/jars/batik-svg-dom-1.5.jar" dest="${contrib.netlib}/batik-svg-dom-1.5.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/batik/jars/batik-svggen-1.5.jar" dest="${contrib.netlib}/batik-svggen-1.5.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/batik/jars/batik-swing-1.5.jar" dest="${contrib.netlib}/batik-swing-1.5.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/batik/jars/batik-transcoder-1.5.jar" dest="${contrib.netlib}/batik-transcoder-1.5.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/batik/jars/batik-util-1.5.jar" dest="${contrib.netlib}/batik-util-1.5.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/batik/jars/batik-xml-1.5.jar" dest="${contrib.netlib}/batik-xml-1.5.jar" usetimestamp="yes"/>
		
		<get src="http://www.ibiblio.org/maven/velocity/jars/velocity-1.3.jar" dest="${contrib.netlib}/velocity-1.3.jar" usetimestamp="yes"/>
		<get src="http://www.ibiblio.org/maven/commons-vfs/jars/commons-vfs-20041214060500.jar" dest="${contrib.netlib}/commons-vfs-20041214060500.jar" usetimestamp="yes"/>
	</target>


	<!-- Compile the source files -->
	<target name="java" depends="prepare-src">
		<!-- Run javac to turn .java files into .class -->
		<mkdir dir="${contrib.classes}" />
		<javac
            debug="on"
            srcdir="${contrib.src}"
            destdir="${contrib.classes}"
            source="1.4"
			deprecation="on">
			<classpath refid="base-compile-classpath"/>
		</javac>
		<!-- Copy over any configuration files that you might have -->
		<copy todir="${build.classes}" filtering="on">
			<fileset dir="${src.dir}">
				<exclude name="**/CVS/**"/>
				<exclude name="**/*.java"/>
            </fileset>
		</copy>
	</target>

	<!-- Create a jar of the classes and configuration files -->
	<target name="jar" depends="java">
		<copy file="${contrib.src}/META-INF/services/org.embl.ebi.escience.scuflworkers.java.LocalWorker" todir="${contrib.classes}/META-INF/services"/>
		<echo>
			${project.lib}
		</echo>
		<delete file="${project.lib}/contrib-${project.version}.jar"></delete>
		<jar destfile="${project.lib}/contrib-${project.version}.jar" update="no">
			<fileset dir="${contrib.classes}" includes="net/**/*.class"/>
			<fileset dir="${contrib.classes}" includes="META-INF/services/org.embl.ebi.escience.scuflworkers.java.LocalWorker"/>
		</jar>
	</target>
	
	<target name="build" depends="jar">
		<!-- Copy the examples folder to the release -->
		<copy todir="${workbench.dir}/../examples">
			<fileset dir="./examples"/>
		</copy>
		
		<copy todir="${project.lib}">
			<fileset dir="${contrib.lib}"/>
			<fileset dir="${contrib.netlib}"/>
		</copy>

	</target>


	<!-- Build javadocs -->
	<target name="javadoc" depends="prepare-src">
		<mkdir dir="${build.javadocs}"/>
		<javadoc windowtitle="${ant.project.name} Java Classes"
			 destdir="${build.javadocs}"
             linksource="yes"
             breakiterator="yes"
			 sourcepath="${build.src}"
			 doctitle="&lt;h1>${ant.project.name} Java API Documentation&lt;/h1>"
			 packagenames="*"
             source="1.4"
			 version="true">
			<classpath refid="compile-classpath"/>
		</javadoc>
	</target>


</project>
