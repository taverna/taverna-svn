<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<section id="activity_palette">
	<title>Activity palette</title>

	<para>
		The activity palette provides facilities to manage the various
		services available to the workflow designer and allows the user
		to manage service sets, create instances of a service in the
		form of a processor within the workflow, search services and
		other such functionality. The current release is a prototype
		that shows some of the capability that will be available within
		Taverna 2. It should be noted that in Taverna 2, the term
		"activity" is used in a similar fashion to that of "service"
		within Taverna 1.
	</para>

	<section id="activity_palette_organization">
		<title>Activity palette organization</title>

		<para>
			The activity palette is divided into a set of tabs. Each tab
			represents a subset of the activities that can be added to
			the workflow. For example, the "Local Java widgets" subset
			contains the set of Local Java activities. Users can switch
			between tabs by clicking on the appropriate tab name. The
			display of the tabs is system dependent. Under Windows, the
			names of all the available tabs will be shown. On the Mac,
			only some of the tab names will be shown with the remainder
			available either by use of the scroll arrows or via a
			pull-down menu.
		</para>

		<para>
			<inlinemediaobject>
				<imageobject>
					<imagedata
						fileref="images/activity_palette_loading.png" />
				</imageobject>
			</inlinemediaobject>
		</para>

		<para>
			The subsets can be considered as belonging to one of three
			categories
		</para>

		<orderedlist>
			<listitem>
				<para>
					Generated subsets are created when a set of
					activities is found, for example by use of a
					scavenger. When started, there will be a tab for
					each set of default activities.
				</para>
			</listitem>

			<listitem>
				<para>
					User-defined subsets are created by the user.
					Activities can be copied into a user-defined subset.
					They can also be removed from such a subset.
				</para>
			</listitem>

			<listitem>
				<para>
					There are also two in-built subsets. "All
					activities" contains all of the activities. "Search
					results" is the subset to which the results of a
					search are added.
				</para>
			</listitem>
		</orderedlist>
	</section>

	<section id="display_of_a_subset">
		<title>Display of a subset</title>

		<para>
			By default a subset is displayed in a tree form. At each
			level, the nodes of the tree are ordered according to the
			values of a specific property. For example, by default, the
			first level of the "All activities" subset is ordered
			according to the category to which the activity belongs. The
			second level is ordered according to the name of the
			activity. The leaves of the tree represent the activities
			themselves. Lingering on a leaf will cause a tool-tip
			showing the description of the activity, where available.
		</para>

		<para>
			The organization of the subset can be configured as
			described
			<link linkend="configuration_of_activity_kinds">below</link>
		</para>

		<para>
			The tree of activities can be fully expanded or collapsed by
			choosing the appropriate selection in the "Expand/collapse"
			menu.
		</para>

		<para>
			A displayed subset can be hidden by selecting the "hide"
			option under the "Subset control menu".
		</para>

		<para>
			<inlinemediaobject>
				<imageobject>
					<imagedata
						fileref="images/activity_palette_hide_subset.png" />
				</imageobject>
			</inlinemediaobject>
		</para>

		<para>
			Hidden subsets are not deleted and can be re-shown by
			selecting the "Show subset" option under the "Subset
			control" menu.
		</para>

		<para>
			User-defined subsets can be created by choosing the "Create
			subset" option under the "Subset control" menu. The user is
			prompted for the name of the subset and what kind of
			activities, for example WSDL or Soaplab, will be placed in
			that subset.
			<emphasis role="bold">
				Note that despite the specification of the subset kind,
				the current release does not enforce the restriction of
				kinds of activities.
				<emphasis>
					Choosing "allactivities" kind allows the user to
					display and order the tree on any of the properties
					that can be associated with an activity.
				</emphasis>
			</emphasis>
		</para>

		<para>
			<emphasis>
				<emphasis>
					<inlinemediaobject>
						<imageobject>
							<imagedata
								fileref="images/activity_palette_create_subset.png" />
						</imageobject>
					</inlinemediaobject>
				</emphasis>
			</emphasis>
		</para>

		<para>
			<emphasis>
				<emphasis>
					Activities within the tree can be selected. Once
					selected those activities can be copied to a
					user-defined subset. Alternatively, if they are
					within a user-defined subset they can be removed.
					These options are available under the "Selection"
					menu.
				</emphasis>
			</emphasis>
		</para>

		<para>
			<emphasis>
				<emphasis></emphasis>
			</emphasis>
		</para>
	</section>

	<section id="searching_for_an_activity">
		<title>Searching for an activity</title>

		<para>
			The activities within the current subset can be searched
			using the "Search subset" button. The user chooses from a
			property associated with the activity and specifies text
			that must be present within the value for that activity. In
			the example shown below, the search is for the string
			`blast' within the `name' property.
		</para>

		<para>
			<inlinemediaobject>
				<imageobject>
					<imagedata
						fileref="images/activity_palette_search.png" />
				</imageobject>
			</inlinemediaobject>
		</para>

		<para>
			The results of the search are automatically added to the
			"Search results" subset.
		</para>

		<para></para>
	</section>

	<section id="adding_new_activities">
		<title>Adding new activities</title>

		<para>
			As in Taverna 1, new activities can be added by use of a
			scavenger. The available scavengers are found under the "Add
			scavenger" menu. The activities found by the scavenger are
			shown in a new subset. The name of the subset depends upon
			the source from which the activities were scavenged.
		</para>

		<para></para>
	</section>

	<section id="adding_an_activity_to_the_workflow">
		<title>Adding an activity to the workflow</title>

		<para>
			In a similar manner to Taverna 1, activities can be added to
			the current workflow either by dragging and dropping them
			into the workflow, or by right-clicking and choosing to add
			the activity, possibly with a specific name.
			<emphasis role="bold">
				Note that when dragging or right-clicking, the object
				must be the leaf of the tree and not the penultimate
				node which often contains its name.
			</emphasis>
		</para>

		<para></para>
	</section>

	<section id="invoking_an_activity">
		<title>Invoking an activity</title>

		<para>
			An activity can be directly invoked by right-clicking and
			choosing invoke. The interaction is then identical to that
			for Taverna 1.
		</para>

		<para></para>
	</section>

	<section id="configuration_of_activity_kinds">
		<title>Configuration of activity kinds</title>

		<para>
			An activity kind represents a class of activities, for
			example, WSDL or BioMart activities. The kind of activities
			that are shown in a subset is either determined when the
			activities are discovered, or for a user-defined subset,
			when the subset is created. Each kind of activity has a set
			of properties that can be associated with an activity. For
			example, a BioMart activity has a "mart" property that is
			not appplicable to a SoapLab activity.
		</para>

		<para>
			The properties that are displayed can be configured using
			the "Configure subset" option under the "Subset control"
			menu. The dialog is split into three sections corresponding
			to the properties displayed within the tree, the properties
			displayed for individual activities at the leaves of the
			tree, and the properties shown in a separate table. The
			separate table appears on the right of the tree.
		</para>

		<para>
			In each section, the user can decide what properties to
			display by checking the boxes for the property. The order of
			display can be determined by dragging within the list to the
			right. There is no correlation between the properties shown
			in the tree, at the leaves, or in the separate table.
		</para>

		<para>
			In the following example, only "category" is used to order
			the tree. At each leaf, the "name" and the "worker class" of
			the activity are shown. In addition, in a separate table,
			the "category" and "name" of the activities are shown with
			the "name" being used for the primary ordering.
		</para>

		<para>
			<inlinemediaobject>
				<imageobject>
					<imagedata
						fileref="images/activity_palette_configure.png" />
				</imageobject>
			</inlinemediaobject>
		</para>

		<para>
			<emphasis role="bold">
				Note that selections within the tree are reflected
				within the table. The opposite is not true
			</emphasis>
			.
		</para>

		<para>
			If no properties are chosen for the tree or the table then
			they are not displayed. If no property is chosen for the
			table at the leaves of the tree, then a default
			representation of the activity is shown.
		</para>

		<para></para>
	</section>

	<section id="watching_the_workflow">
		<title>Watching the workflow</title>

		<para>
			If the "watch workflow" checkbox is ticked, then when a
			workflow is loaded, it is examined. If any activities within
			the workflow are not known already, then the activity is
			discovered by scavenging from its source. Each individual
			scavenge results in a new subset.
			<emphasis role="bold">
				There is currently no representation for all the
				activities used within the current workflow
			</emphasis>
			.
		</para>

		<para>
			If the "watch workflow" checkbox is not ticked then loading
			a workflow is ignored. If the checkbox is subsequently
			ticked, then the current workflow will be examined.
		</para>

		<para></para>
	</section>

	<section id="saving_and_loading_palette">
		<title>Saving and loading</title>

		<para>
			The kind configuration, i.e. what properties to display in
			the tree and tables, can be saved and loaded using the "save
			kind configuration" and "load kind configuration" under the
			"Save/load" menu. N
			<emphasis role="bold">
				ote that the subsets are not saved or loaded, merely the
				choice and ordering of properties used to display
				subsets of a given kind.
			</emphasis>
		</para>

		<para>
			An initial version for saving the known activities is
			available using the "save activity set" option under the
			"Save/load" menu.
			<emphasis role="bold">
				In this preview of Taverna 2 capability, the saving of
				the activity set does not work completely; in particular
				some types of activities are not saved.
			</emphasis>
		</para>

		<para>
			<emphasis>
				<emphasis>
					<emphasis role="bold">
						<emphasis>
							A saved activity set can be loaded. The
							activities are created in a new subset
							called "Load at " with the date and time of
							the load.
						</emphasis>
					</emphasis>
				</emphasis>
				<emphasis role="bold">
					Note that in this preview the subsets are not
					loaded.
				</emphasis>
			</emphasis>
		</para>
	</section>
</section>