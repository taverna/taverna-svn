<?xml version="1.0" encoding="UTF-8"?>


<!-- Full SPI driven test context for the HibernateReferenceSetDao -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:raven="http://taverna.sf.net/schema/artifact-support"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd 
	http://taverna.sf.net/schema/artifact-support 
	http://taverna.sf.net/schema/artifact-support/artifact-support.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<!-- Apache Derby rooted at ${user.home}/t2reference/javadb -->
	<bean id="exampleDataSource"
		class="net.sf.taverna.platform.spring.jdbc.InterpolatingDriverManagerDataSource">
		<property name="driverClassName">
			<value>org.apache.derby.jdbc.EmbeddedDriver</value>
		</property>
		<property name="url">
			<value>
				jdbc:derby:${user.home}/t2reference-test2/javadb;create=true
			</value>
		</property>
	</bean>

	<!-- Configure hibernate to build schema from scratch, dropping existing -->
	<bean id="exampleHibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.DerbyDialect
				</prop>
				<prop key="hibernate.query.substitutions">
					true 'T', false 'F'
				</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.c3p0.minPoolSize">5</prop>
				<prop key="hibernate.c3p0.maxPoolSize">20</prop>
				<prop key="hibernate.c3p0.timeout">600</prop>
				<prop key="hibernate.c3p0.max_statement">50</prop>
				<prop key="hibernate.c3p0.testConnectionOnCheckout">
					false
				</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
			</props>
		</property>
	</bean>

	<!-- An SPI-enabled hibernate session factory -->
	<bean id="sessionFactoryBean"
		class="net.sf.taverna.platform.spring.orm.hibernate3.SpiRegistryAwareLocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="exampleDataSource" />
		</property>
		<property name="hibernateProperties">
			<ref bean="exampleHibernateProperties" />
		</property>
		<!-- Need to map the abstract superclass for the SPI first, SPI classes -->
		<!-- are subclasses of this and hibernate can be picky about the order  -->
		<property name="mappingResources">
			<list>
				<value>
					net/sf/taverna/t2/reference/AbstractExternalReference.hbm.xml
				</value>
			</list>
		</property>
		<!-- SPI enabled session, uses the linked SPI registry or registries     -->
		<!-- to gather Class definitions and uses the slightly patched hibernate -->
		<!-- to ensure that raven is used to fetch these back when required      -->
		<property name="spiRegistries">
			<list>
				<!-- SPI used by the raven-aware hibernate session factory bean -->
				<!-- This *must* go before the external reference SPI bean or   -->
				<!-- those beans won't find the mapping for their superclasses  -->
				<bean
					class="net.sf.taverna.platform.spring.SpiRegistryFactoryBean">
					<property name="repository">
						<ref bean="ravenRepository" />
					</property>
					<property name="spiClassName"
						value="net.sf.taverna.t2.reference.h3.HibernateMappedEntity" />
				</bean>
				<!-- SPI used by the raven-aware hibernate session factory bean -->
				<bean
					class="net.sf.taverna.platform.spring.SpiRegistryFactoryBean">
					<property name="repository">
						<ref bean="ravenRepository" />
					</property>
					<property name="spiClassName"
						value="net.sf.taverna.t2.reference.ExternalReferenceSPI" />
				</bean>
			</list>
		</property>
		<property name="preloadRegistries">
			<list>
				<bean
					class="net.sf.taverna.platform.spring.SpiRegistryFactoryBean">
					<property name="repository">
						<ref bean="ravenRepository" />
					</property>
					<property name="spiClassName"
						value="net.sf.taverna.t2.reference.h3.HibernateComponentClass" />
				</bean>
			</list>
		</property>
	</bean>

	<repository id="ravenRepository"
		xmlns="http://taverna.sf.net/schema/artifact-support"
		base="${user.home}/.m2/repository/">
		<repositories />
		<system>
			<!-- Raven -->
			<sys artifact="uk.org.mygrid.taverna.raven:raven:1.7.1.0" />

			<!-- Spring modules -->
			<sys artifact="org.springframework:spring-core:2.5" />
			<sys artifact="org.springframework:spring-orm:2.5" />
			<sys artifact="org.springframework:spring-tx:2.5" />
			<sys artifact="org.springframework:spring-jdbc:2.5" />
			<sys artifact="org.springframework:spring-beans:2.5" />
			<sys artifact="org.springframework:spring-context:2.5" />
			<!-- <sys artifact="org.springframework:spring-aop:2.5" /> -->
			<sys artifact="aopalliance:aopalliance:1.0" />

			<!-- T2 platform -->
			<sys artifact="net.sf.taverna.t2:platform:0.1-SNAPSHOT" />

			<!-- Logging -->
			<sys artifact="commons-logging:commons-logging:1.1.1" />
			<sys artifact="log4j:log4j:1.2.15" />

			<!-- Derby -->
			<sys artifact="org.apache.derby:derby:10.4.1.3" />

			<!-- Hibernate -->
			<sys artifact="org.hibernate:hibernate:3.2.5.ga" />
			<sys artifact="asm:asm:1.5.3" />
			<sys artifact="cglib:cglib:2.1_3" />
			<sys
				artifact="commons-collections:commons-collections:2.1.1" />
			<sys artifact="dom4j:dom4j:1.6.1" />

			<!-- T2 reference APIs -->
			<sys
				artifact="net.sf.taverna.t2:t2reference-api:0.1-SNAPSHOT" />

		</system>
	</repository>

	<bean id="referenceSet"
		class="net.sf.taverna.t2.reference.impl.ReferenceSetImpl"
		raven:artifact="net.sf.taverna.t2:t2reference-impl:0.1-SNAPSHOT"
		raven:repository="ravenRepository">
		<property name="externalReferences">
			<set>
				<ref bean="blueBean" />
			</set>
		</property>
	</bean>

	<bean id="blueBean"
		raven:artifact="net.sf.taverna.t2.testing:t2reference-testhelpers:0.1-SNAPSHOT"
		raven:repository="ravenRepository"
		class="net.sf.taverna.t2referencetest.BlueReference">
		<property name="contents" value="foo" />
	</bean>

	<bean id="redBean"
		raven:artifact="net.sf.taverna.t2.testing:t2reference-testhelpers:0.1-SNAPSHOT"
		raven:repository="ravenRepository"
		class="net.sf.taverna.t2referencetest.RedReference">
		<property name="contents" value="" />
	</bean>

	<bean id="greenBean"
		raven:artifact="net.sf.taverna.t2.testing:t2reference-testhelpers:0.1-SNAPSHOT"
		raven:repository="ravenRepository"
		class="net.sf.taverna.t2referencetest.GreenReference">
		<property name="contents" value="" />
	</bean>

	<bean id="yellowBean"
		raven:artifact="net.sf.taverna.t2.testing:t2reference-testhelpers:0.1-SNAPSHOT"
		raven:repository="ravenRepository"
		class="net.sf.taverna.t2referencetest.YellowReference">
		<property name="contents" value="" />
	</bean>

	<!-- Reference translator instance registry -->
	<bean id="translatorRegistry"
		class="net.sf.taverna.platform.spring.InstanceRegistryFactoryBean">
		<property name="spiRegistry">
			<bean
				class="net.sf.taverna.platform.spring.SpiRegistryFactoryBean">
				<property name="repository">
					<ref bean="ravenRepository" />
				</property>
				<property name="spiClassName"
					value="net.sf.taverna.t2.reference.ExternalReferenceTranslatorSPI" />
			</bean>
		</property>
	</bean>

	<!-- Reference builder instance registry -->
	<bean id="builderRegistry"
		class="net.sf.taverna.platform.spring.InstanceRegistryFactoryBean">
		<property name="spiRegistry">
			<bean
				class="net.sf.taverna.platform.spring.SpiRegistryFactoryBean">
				<property name="repository">
					<ref bean="ravenRepository" />
				</property>
				<property name="spiClassName"
					value="net.sf.taverna.t2.reference.ExternalReferenceBuilderSPI" />
			</bean>
		</property>
	</bean>

	<!-- Reference set augmentor -->
	<bean id="referenceSetAugmentor"
		class="net.sf.taverna.t2.reference.impl.ReferenceSetAugmentorImpl"
		raven:artifact="net.sf.taverna.t2:t2reference-impl:0.1-SNAPSHOT"
		raven:repository="ravenRepository">
		<property name="builderRegistry">
			<ref bean="builderRegistry" />
		</property>
		<property name="translatorRegistry">
			<ref bean="translatorRegistry" />
		</property>
	</bean>

	<!-- reference set data access object -->
	<bean id="referenceSetDao"
		raven:artifact="net.sf.taverna.t2:t2reference-impl:0.1-SNAPSHOT"
		raven:repository="ravenRepository"
		class="net.sf.taverna.t2.reference.impl.HibernateReferenceSetDao">
		<property name="sessionFactory">
			<ref local="sessionFactoryBean" />
		</property>
	</bean>

	<!-- t2 reference generator -->
	<bean id="referenceGenerator"
		raven:artifact="net.sf.taverna.t2:t2reference-impl:0.1-SNAPSHOT"
		raven:repository="ravenRepository"
		class="net.sf.taverna.t2.reference.impl.SimpleT2ReferenceGenerator">
		<property name="namespace" value="testNamespace" />
	</bean>

	<!-- reference set service -->
	<bean id="referenceSetService"
		raven:artifact="net.sf.taverna.t2:t2reference-impl:0.1-SNAPSHOT"
		raven:repository="ravenRepository"
		class="net.sf.taverna.t2.reference.impl.ReferenceSetServiceImpl">
		<property name="referenceSetDao">
			<ref local="referenceSetDao" />
		</property>
		<property name="t2ReferenceGenerator">
			<ref local="referenceGenerator" />
		</property>
		<property name="referenceSetAugmentor">
			<ref local="referenceSetAugmentor" />
		</property>
	</bean>





</beans>