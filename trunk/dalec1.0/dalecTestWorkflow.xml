<?xml version="1.0" encoding="UTF-8"?>
<s:scufl xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha" version="0.2" log="0">
  <s:workflowdescription lsid="urn:lsid:www.mygrid.org.uk:operation:P74Y28RWBD0" author="" title="" />
  <s:processor name="gffxml_generator">
    <s:beanshell>
      <s:scriptvalue>addClassPath("C:\\Program Files\\Java\\tonys-jars\\biojava-1.4pre1.jar");

import org.biojava.bio.seq.Sequence;
import org.biojava.bio.seq.ProteinTools;
import org.biojava.bio.seq.StrandedFeature;
import org.biojava.bio.program.gff.*;

import java.io.PrintWriter;
import java.io.StringWriter;

try
{
            // make a biojava sequence
            Sequence sequence = ProteinTools.createProteinSequence(seq, seqName);

            // calculate start and end for the "middle chunk" (1/3)
            int length = sequence.length();
            int start = length/3;
            int end = start*2;

            // create an annotation over this region
            SimpleGFFRecord gffr = new SimpleGFFRecord();
            gffr.setSeqName(seqName);
            gffr.setSource("Dalec1.0");
            gffr.setFeature("dalec_test_annotation");
            gffr.setStart(start);
            gffr.setEnd(end);
            gffr.setStrand(StrandedFeature.UNKNOWN);
            gffr.setScore('.');
            gffr.setFrame(GFFTools.NO_FRAME);
            gffr.setComment("This is a Dalec test annotation that contains no real annotation information");

            // now add the annotation to an entry set
            GFFEntrySet gffe = new GFFEntrySet();
            gffe.add(gffr);

            StringWriter s = new StringWriter();
            gffe.streamRecords(new GFFWriter(new PrintWriter(s)));
            gff = s.toString();
}

catch (Exception e)
{
            e.printStackTrace();
}</s:scriptvalue>
      <s:beanshellinputlist>
        <s:beanshellinput s:syntactictype="'text/plain'">seq</s:beanshellinput>
        <s:beanshellinput s:syntactictype="'text/plain'">seqName</s:beanshellinput>
      </s:beanshellinputlist>
      <s:beanshelloutputlist>
        <s:beanshelloutput s:syntactictype="'text/plain'">gff</s:beanshelloutput>
      </s:beanshelloutputlist>
    </s:beanshell>
  </s:processor>
  <s:link source="gffxml_generator:gff" sink="gff" />
  <s:source name="sequence" />
  <s:source name="seqID" />
  <s:sink name="gff" />
</s:scufl>


